<<<<<<< Updated upstream
<<<<<<< HEAD
[{"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js":"1","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js":"2","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js":"3","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js":"4","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js":"5","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js":"6","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js":"7","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\App.js":"8","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\evaluationSession.js":"9","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js":"10","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js":"11"},{"size":3878,"mtime":1615914520085,"results":"12","hashOfConfig":"13"},{"size":5536,"mtime":1615914520152,"results":"14","hashOfConfig":"13"},{"size":5501,"mtime":1615914520101,"results":"15","hashOfConfig":"13"},{"size":7098,"mtime":1615914519834,"results":"16","hashOfConfig":"13"},{"size":12410,"mtime":1615914519972,"results":"17","hashOfConfig":"13"},{"size":5063,"mtime":1615914520064,"results":"18","hashOfConfig":"13"},{"size":2141,"mtime":1615914519936,"results":"19","hashOfConfig":"13"},{"size":2146,"mtime":1615924371189,"results":"20","hashOfConfig":"13"},{"size":3709,"mtime":1615931623068,"results":"21","hashOfConfig":"13"},{"size":7040,"mtime":1615918200009,"results":"22","hashOfConfig":"13"},{"size":6991,"mtime":1615932560856,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14x7t6d",{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js",["47","48","49","50"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js",["51","52","53","54","55","56","57","58","59"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js",["82","83","84","85","86"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js",["87","88","89","90"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js",["91","92","93","94","95"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js",["96","97","98","99","100"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\App.js",["101"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\evaluationSession.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js",["102","103","104","105"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js",["106","107","108","109","110","111"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Space, Button ,Avatar,Select, Form} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {UserOutlined,LockOutlined,KeyOutlined,MailOutlined} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport axios from 'axios'\r\nconst {Option}=Select;\r\nconst SignUpCard =({onClick,...props})=>{\r\n  const [fullname,setFullname]=useState('');\r\nconst [username,setUsername]=useState('');\r\nconst [email,setEmail]=useState('');\r\nconst [password,setPassword]=useState('');\r\nconst [key,setKey]=useState('');\r\nconst [loginType,setLoginType]=useState('other');\r\n\r\nconst handleSubmit=(e)=>{\r\n    // e.preventDefault();\r\n    const org = {\r\n      fullName: fullname,\r\n      username: username,\r\n      password: password,\r\n    }\r\n\r\n    axios.post('http://localhost:1337/', org)\r\n      .then(\r\n        res =>{\r\n          if(res.data){\r\n            console.log(res.data)\r\n        }}\r\n\r\n      \r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  ;\r\n\r\n    \r\n}\r\nconst handleSubmit2=(e)=>{\r\n /* console.log([username,password,email]) */\r\n\r\n  axios.post('http://localhost:1337/users', \r\n  {\r\n    username: username,\r\n    email:email,\r\n    password: password\r\n  }\r\n  )\r\n    .then(\r\n      res =>{\r\n        if(res.data){\r\n          console.log(res.data)\r\n      }}\r\n\r\n    \r\n    )\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n}\r\nreturn(\r\n    <Card style={{flex: 0.28,width:'min(95vw,100%)',border:'1px solid graysmoke',display:'flex',flexDirection:'column',alignItems:'center',borderRadius:15,backgroundColor:'white',justifyContent:'center'}}>\r\n      {\r\n        loginType==='other'?\r\n        <Form layout='vertical' onFinish={handleSubmit2}>\r\n       \r\n     \r\n      <h1 style={{fontSize:30,fontWeight:'bold',textAlign:'left'}}>Sign Up</h1>\r\n      \r\n      \r\n      \r\n      <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'lightblue',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')}>Org SignUp</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'#8a2be290',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={username}\r\n      onChange={(e)=>{setUsername(e.target.value)}}\r\n      placeholder=\"Enter your username\" \r\n      prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[{ required: true, message: 'Please input your email!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={email}\r\n      onChange={(e)=>{setEmail(e.target.value)}}\r\n      placeholder=\"Enter your email\" \r\n      prefix={<MailOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your password!' }]}\r\n      >\r\n\r\n      <Input \r\n      size=\"small\"\r\n      value={password}\r\n      className='formInput'\r\n      onChange={(e)=>{setPassword(e.target.value)}}\r\n      placeholder=\"Enter your password\" \r\n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Repeat Password\"\r\n        name=\"repeat\"\r\n        rules={[{ required: true, message: 'Please repeat your password!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={key}\r\n      onChange={(e)=>{setKey(e.target.value)}}\r\n      placeholder=\"Repeat password\" \r\n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Button \r\n      size='small'\r\n      block\r\n      style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n      htmlType='submit'\r\n      >\r\n      Sign Up\r\n      </Button>\r\n\r\n    </Form>\r\n    :\r\n    <Form layout='vertical' onFinish={handleSubmit}>\r\n    \r\n    <h1 style={{fontSize:30,marginRight:10,fontWeight:'bold',textAlign:'left'}}>Org Sign Up</h1>\r\n    \r\n      \r\n\r\n    <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'#8a2be290',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')} >Org SignUp</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'lightblue',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n    <Form.Item\r\n        label=\"Org Name\"\r\n        name=\"org_name\"\r\n        rules={[{ required: true, message: 'Please enter org name!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n  \r\n    className='formInput'\r\n    onChange={(e)=>{setFullname(e.target.value)}}\r\n    placeholder=\"Enter org name\" \r\n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n  </Form.Item>\r\n    <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please enter org username!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    value={username}\r\n    className='formInput'\r\n    onChange={(e)=>{setUsername(e.target.value)}}\r\n    placeholder=\"Enter org username\" \r\n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please enter org password!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    className='formInput'\r\n    value={password}\r\n    onChange={(e)=>{setPassword(e.target.value)}}\r\n    placeholder=\"Enter org password\" \r\n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n      <Form.Item\r\n        label=\"Repeat Password\"\r\n        name=\"repeat\"\r\n        rules={[{ required: true, message: 'Please repeat your password!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    className='formInput'\r\n    value={key}\r\n    placeholder=\"Repeat Password\" \r\n    onChange={(e)=>{setKey(e.target.value)}}\r\n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n    <Button \r\n    size='small'\r\n    block\r\n    style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n    htmlType='submit'\r\n    >\r\n    Sign Up\r\n    </Button>\r\n\r\n  </Form>\r\n  \r\n      }\r\n    \r\n    <Button onClick={onClick} size={30} type='link' style={{color:'lightseagreen',textDecorationStyle:'solid',textDecorationColor:'lightseagreen',textDecorationLine:'underline',textDecorationWidth:1}}>Have an Account?</Button>\r\n    </Card>\r\n\r\n);\r\n\r\n}\r\n\r\nexport default SignUpCard;",{"ruleId":"112","severity":1,"message":"113","line":2,"column":23,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"112","severity":1,"message":"116","line":2,"column":38,"nodeType":"114","messageId":"115","endLine":2,"endColumn":44},{"ruleId":"112","severity":1,"message":"117","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":14,"column":11,"nodeType":"114","messageId":"115","endLine":14,"endColumn":17},{"ruleId":"112","severity":1,"message":"119","line":1,"column":29,"nodeType":"114","messageId":"115","endLine":1,"endColumn":32},{"ruleId":"112","severity":1,"message":"113","line":1,"column":34,"nodeType":"114","messageId":"115","endLine":1,"endColumn":39},{"ruleId":"112","severity":1,"message":"120","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":94,"column":10,"nodeType":"114","messageId":"115","endLine":94,"endColumn":20},{"ruleId":"112","severity":1,"message":"122","line":94,"column":22,"nodeType":"114","messageId":"115","endLine":94,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":114,"column":3,"nodeType":"125","endLine":114,"endColumn":5,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":138,"column":3,"nodeType":"125","endLine":138,"endColumn":5,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":143,"column":95,"nodeType":"131","messageId":"132","endLine":143,"endColumn":97},{"ruleId":"112","severity":1,"message":"118","line":154,"column":10,"nodeType":"114","messageId":"115","endLine":154,"endColumn":16},{"ruleId":"112","severity":1,"message":"116","line":3,"column":52,"nodeType":"114","messageId":"115","endLine":3,"endColumn":58},{"ruleId":"112","severity":1,"message":"133","line":3,"column":67,"nodeType":"114","messageId":"115","endLine":3,"endColumn":72},{"ruleId":"112","severity":1,"message":"134","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"112","severity":1,"message":"135","line":4,"column":21,"nodeType":"114","messageId":"115","endLine":4,"endColumn":25},{"ruleId":"112","severity":1,"message":"136","line":4,"column":27,"nodeType":"114","messageId":"115","endLine":4,"endColumn":32},{"ruleId":"112","severity":1,"message":"137","line":4,"column":34,"nodeType":"114","messageId":"115","endLine":4,"endColumn":39},{"ruleId":"112","severity":1,"message":"138","line":4,"column":41,"nodeType":"114","messageId":"115","endLine":4,"endColumn":46},{"ruleId":"112","severity":1,"message":"139","line":4,"column":48,"nodeType":"114","messageId":"115","endLine":4,"endColumn":67},{"ruleId":"112","severity":1,"message":"140","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":5,"column":18,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"141","line":6,"column":9,"nodeType":"114","messageId":"115","endLine":6,"endColumn":19},{"ruleId":"112","severity":1,"message":"142","line":6,"column":21,"nodeType":"114","messageId":"115","endLine":6,"endColumn":33},{"ruleId":"112","severity":1,"message":"143","line":6,"column":34,"nodeType":"114","messageId":"115","endLine":6,"endColumn":48},{"ruleId":"112","severity":1,"message":"144","line":6,"column":49,"nodeType":"114","messageId":"115","endLine":6,"endColumn":64},{"ruleId":"112","severity":1,"message":"145","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"146","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":14},{"ruleId":"112","severity":1,"message":"147","line":14,"column":7,"nodeType":"114","messageId":"115","endLine":14,"endColumn":10},{"ruleId":"112","severity":1,"message":"148","line":67,"column":7,"nodeType":"114","messageId":"115","endLine":67,"endColumn":15},{"ruleId":"112","severity":1,"message":"149","line":78,"column":14,"nodeType":"114","messageId":"115","endLine":78,"endColumn":24},{"ruleId":"112","severity":1,"message":"150","line":94,"column":11,"nodeType":"114","messageId":"115","endLine":94,"endColumn":16},{"ruleId":"112","severity":1,"message":"151","line":101,"column":8,"nodeType":"114","messageId":"115","endLine":101,"endColumn":24},{"ruleId":"112","severity":1,"message":"116","line":2,"column":46,"nodeType":"114","messageId":"115","endLine":2,"endColumn":52},{"ruleId":"112","severity":1,"message":"152","line":5,"column":35,"nodeType":"114","messageId":"115","endLine":5,"endColumn":46},{"ruleId":"112","severity":1,"message":"153","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"154","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":11},{"ruleId":"112","severity":1,"message":"155","line":14,"column":12,"nodeType":"114","messageId":"115","endLine":14,"endColumn":18},{"ruleId":"112","severity":1,"message":"156","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"157","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":19},{"ruleId":"112","severity":1,"message":"158","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":52,"column":7,"nodeType":"161","messageId":"162","endLine":120,"endColumn":6},{"ruleId":"112","severity":1,"message":"163","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"164","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"165","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":13},{"ruleId":"112","severity":1,"message":"166","line":50,"column":13,"nodeType":"114","messageId":"115","endLine":50,"endColumn":18},{"ruleId":"112","severity":1,"message":"167","line":58,"column":11,"nodeType":"114","messageId":"115","endLine":58,"endColumn":23},{"ruleId":"112","severity":1,"message":"168","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"169","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":15},{"ruleId":"112","severity":1,"message":"170","line":2,"column":17,"nodeType":"114","messageId":"115","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"171","line":2,"column":48,"nodeType":"114","messageId":"115","endLine":2,"endColumn":55},{"ruleId":"112","severity":1,"message":"141","line":5,"column":9,"nodeType":"114","messageId":"115","endLine":5,"endColumn":19},{"ruleId":"112","severity":1,"message":"153","line":2,"column":50,"nodeType":"114","messageId":"115","endLine":2,"endColumn":54},{"ruleId":"112","severity":1,"message":"172","line":2,"column":24,"nodeType":"114","messageId":"115","endLine":2,"endColumn":30},{"ruleId":"112","severity":1,"message":"173","line":5,"column":7,"nodeType":"114","messageId":"115","endLine":5,"endColumn":11},{"ruleId":"112","severity":1,"message":"174","line":15,"column":10,"nodeType":"114","messageId":"115","endLine":15,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":176,"column":41,"nodeType":"131","messageId":"132","endLine":176,"endColumn":43},{"ruleId":"112","severity":1,"message":"113","line":2,"column":23,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"112","severity":1,"message":"116","line":2,"column":38,"nodeType":"114","messageId":"115","endLine":2,"endColumn":44},{"ruleId":"112","severity":1,"message":"152","line":5,"column":35,"nodeType":"114","messageId":"115","endLine":5,"endColumn":46},{"ruleId":"112","severity":1,"message":"153","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"175","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"112","severity":1,"message":"146","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},"no-unused-vars","'Space' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'Banner' is defined but never used.","'Header' is assigned a value but never used.","'Tag' is defined but never used.","'Plot' is defined but never used.","'continents' is assigned a value but never used.","'setContinents' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.","ArrayExpression",["176"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Empty' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Label' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","'EditFilled' is defined but never used.","'UserOutlined' is defined but never used.","'ExportOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'MainHeader' is defined but never used.","'Option' is assigned a value but never used.","'Box' is assigned a value but never used.","'Activity' is assigned a value but never used.","'createData' is defined but never used.","'theme' is assigned a value but never used.","'selectedAccounts' is assigned a value but never used.","'KeyOutlined' is defined but never used.","'Link' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'Background' is defined but never used.","'Background2' is defined but never used.","'Background3' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Paper' is defined but never used.","'Choropleth' is defined but never used.","'axios' is defined but never used.","'style' is assigned a value but never used.","'changeCenter' is assigned a value but never used.","'useState' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'data' is assigned a value but never used.","'surveys' is assigned a value but never used.","'IconButton' is defined but never used.",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [questions]",{"range":"182","text":"183"},"Update the dependencies array to be: [expandSurvey]",{"range":"184","text":"185"},[2296,2298],"[questions]",[2856,2858],"[expandSurvey]"]
=======
[{"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js":"1","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js":"2","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js":"3","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js":"4","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/login.js":"5","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js":"6","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js":"7","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js":"8","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js":"9","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js":"10","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js":"11","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js":"12","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/api.js":"13","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js":"14","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js":"15","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js":"16","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js":"17","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js":"18","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js":"19","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js":"20","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js":"21","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js":"22","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js":"23","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js":"24","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js":"25","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js":"26","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js":"27","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js":"28"},{"size":5086,"mtime":1622216456853,"results":"29","hashOfConfig":"30"},{"size":11172,"mtime":1622216456851,"results":"31","hashOfConfig":"30"},{"size":10071,"mtime":1622216456850,"results":"32","hashOfConfig":"30"},{"size":5354,"mtime":1622216456848,"results":"33","hashOfConfig":"30"},{"size":742,"mtime":1622216456846,"results":"34","hashOfConfig":"30"},{"size":18506,"mtime":1622216456849,"results":"35","hashOfConfig":"30"},{"size":3727,"mtime":1622216456234,"results":"36","hashOfConfig":"30"},{"size":1623,"mtime":1622216456236,"results":"37","hashOfConfig":"30"},{"size":1269,"mtime":1622216456234,"results":"38","hashOfConfig":"30"},{"size":6912,"mtime":1622410746528,"results":"39","hashOfConfig":"30"},{"size":5656,"mtime":1622216456852,"results":"40","hashOfConfig":"30"},{"size":5674,"mtime":1622216456853,"results":"41","hashOfConfig":"30"},{"size":2364,"mtime":1622308635504,"results":"42","hashOfConfig":"30"},{"size":3804,"mtime":1622216456847,"results":"43","hashOfConfig":"30"},{"size":5331,"mtime":1622216456848,"results":"44","hashOfConfig":"30"},{"size":12108,"mtime":1622216456235,"results":"45","hashOfConfig":"30"},{"size":4918,"mtime":1622216456847,"results":"46","hashOfConfig":"30"},{"size":2058,"mtime":1622312945956,"results":"47","hashOfConfig":"30"},{"size":7007,"mtime":1622312781175,"results":"48","hashOfConfig":"30"},{"size":10742,"mtime":1622216456849,"results":"49","hashOfConfig":"30"},{"size":19245,"mtime":1622216456850,"results":"50","hashOfConfig":"30"},{"size":556,"mtime":1622216456234,"results":"51","hashOfConfig":"30"},{"size":4172,"mtime":1622216456236,"results":"52","hashOfConfig":"30"},{"size":4338,"mtime":1622216456852,"results":"53","hashOfConfig":"30"},{"size":9300,"mtime":1622216456851,"results":"54","hashOfConfig":"30"},{"size":1021,"mtime":1622216456234,"results":"55","hashOfConfig":"30"},{"size":3774,"mtime":1622216456233,"results":"56","hashOfConfig":"30"},{"size":3139,"mtime":1622216456852,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"27rji0",{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js",[],["129","130"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js",["131","132","133","134","135","136","137","138"],"import React, {useState,useEffect} from \"react\";\nimport { Input, Card, Space, Button ,Form,Tabs, Radio,Checkbox,Layout, Result, Select} from 'antd';\nimport \"antd/dist/antd.css\";\nimport '../../App.css';\nimport axios from 'axios'\nimport Headers from \"../../components/header\";\nimport Banner from \"../../components/banner\";\nimport ForumCard from \"../../components/forumCard\";\nimport ForumList from \"../../components/forumList\";\nimport MainHeader from \"../../components/mainHeader\";\n\nconst {TextArea} =Input;\n\nconst { TabPane } = Tabs;\nconst {Option}=Select;\n\nconst OtherProfile=()=>{\n    let me=JSON.parse(localStorage.getItem('currentUser'))\n    const [title,setTitle]=useState('');\n    const [description,setDescription]=useState('');\n    const [content,setContent]=useState('');\n    const [disease,setDisease]=useState('')\n    const [community,setCommunity]=useState('');\n    const [diseases,setDiseases]=useState('')\n    const [communities,setCommunities]=useState('');\n    useEffect(() => {\n        async function fetchDiseases(){\n          await axios.get('http://localhost:1337/diseases')\n          .then(\n            res =>{\n              if(res.data){\n                setDiseases(res.data)\n            }} )\n          .catch((error) => {\n            console.log(error);\n          })\n  \n        }\n        fetchDiseases();\n          \n      },[]);\n      useEffect(() => {\n        async function fetchCommunities(){\n          await axios.get('http://localhost:1337/communities')\n          .then(\n            res =>{\n              if(res.data){\n                setCommunities(res.data)\n            }} )\n          .catch((error) => {\n            console.log(error);\n          })\n  \n        }\n        fetchCommunities();\n          \n      },[]);\n\n      const createForum=()=>{\n          console.log(\n              disease,community,description,title,content\n          )\n        axios.post('http://localhost:1337/forums',{ author: me.id,  title:title, description: description ,content:content,disease:disease,community:community} )\n          .then(\n            res =>{\n              if(res.data){\n                console.log(res.data)\n            }}\n      \n          \n          )\n          .catch((error) => {\n            console.log(error);\n          })\n      }\n\n    const [disability,setDisability]=useState(true);\n    const [orgname,setOrgname]=useState('Akwasi Mensah')\n    const [orgUsername,setOrgUsername]=useState('Akwmensah');\n    const [orgPassword,setOrgPassword]=useState('yerspiyooor');\n    const{Header}=Layout;\n    return(\n        <div className='profilePage'>\n            <MainHeader/>\n            {\n                me?\n                <>\n                \n                <div className='profileMidSection'>\n                <Headers/>\n                    <Card bordered style={{flex:0.3,height:'auto',minWidth:'min(95vw,350px)',backgroundColor:'white',textAlign:'left',display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start',flexShrink:0,margin:20,/* boxShadow:'3px 3px 20px #00000010' */}}>\n                        <h1 style={{color:'black',fontSize:30}}>\n                         PROFILE\n                        </h1>\n                        <h3 style={{color:'#40404090'}}>\n                            Username\n                        </h3>\n                        <Input type='text' value={me.username} onChange={(e)=>{setOrgname(e.target.value)}} disabled={disability} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Email\n                        </h3>\n                        <Input type='text' value={me.email} disabled={disability} onChange={(e)=>{setOrgUsername(e.target.value)}} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Password\n                        </h3>\n                        <Input type='password' value={me.password} disabled={disability} size='large' onChange={(e)=>{setOrgPassword(e.target.value)}} style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <Button type='primary' size='large' onClick={()=>{setDisability(!disability)}}  block style={{marginBottom:30,backgroundColor:'#6461ff'}}>{disability?'Edit Profile':'Save'}</Button>\n                        <Button type='primary' size='large' \n                        onClick={()=>{\n                            localStorage.removeItem('currentUser');\n                            \n                            window.location.href='/';\n                        }} \n                        danger \n                        block>\n                        Logout\n                        </Button>\n\n                    </Card>\n                <Card className=\"card-container\">\n                    <Tabs type=\"card\">\n                    <TabPane tab=\"Explore Cases\" key=\"4\">\n                        <div className='cardSvgee' style={{height:'48vh'}}>\n                            <Button onClick={()=>window.location.href='/cases'}>Explore Cases</Button>\n                        </div>\n                    </TabPane>\n                    <TabPane tab=\"Trending Forums\" key=\"1\">\n                        <div style={{height:'48vh'}} className='adminProfiles'>\n                        <ForumList/>\n                        </div>\n                    </TabPane>\n                    <TabPane tab=\"Create A Forum\" key=\"2\">\n                    <div style={{display:'flex',flexDirection:'column'}}>\n                    <div className='adminProfiles' style={{height:'43vh',overflowY:'scroll'}}>\n                        <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-around'}}>\n                            <h1 style={{color:'lightslategray',margin:8}}>\n                                NEW FORUM\n                            </h1>\n                            <Form layout='vertical' onFinish={createForum}>\n                                \n                                <Form.Item\n                                label=\"Forum Title\"\n                                name=\"forumTitle\"\n                                rules={[{ required: true, message: 'Please input Forum Title!' }]}\n                                >\n                                    <Input\n                                    type='text'\n                                    value={title}\n                                    onChange={(e)=>setTitle(e.target.value)}\n                                    size='large'\n                                    \n                                    \n                                    />\n\n                                </Form.Item>\n                                <Form.Item\n                                label=\"Forum Description\"\n                                name=\"forumDescription\"\n                                rules={[{ required: true, message: 'Please input Forum Description!' }]}\n                                >\n                                    <Input\n                                    type='text'\n                                    size='large'\n                                    value={description}\n                                    onChange={(e)=>setDescription(e.target.value)}\n                                   \n                                    \n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                label=\"Forum Content\"\n                                name=\"forumContent\"\n                                rules={[{ required: true, message: 'Please input Forum Content!' }]}\n                                >\n                                <TextArea rows={4} value={content} onChange={(e)=>setContent(e.target.value)} />\n                            \n                                </Form.Item>\n                                <Form.Item\n                                label=\"Select Disease Tag\"\n                                name=\"diseaseTag\"\n                                rules={[{ required: true, message: 'Please select disease tag!' }]}\n                                >\n                                <Radio.Group buttonStyle='solid' value={disease} onChange={(e)=>setDisease( e.target.value)} style={{display:'flex',flexDirection:'row',justifyContent:'flex-start',flexWrap:'wrap'}} size='large' >\n                                \n                                {\n                                    diseases?\n                                        diseases.map((dis,index)=><Radio.Button key={index} value={dis.id} style={{margin:2}}>{dis.name}</Radio.Button>)\n                                    :\n                                    null\n                                }\n                                </Radio.Group>\n\n                                </Form.Item>\n                                <Form.Item\n                                label=\"Select Community\"\n                                name=\"communityTag\"\n                                rules={[{ required: true, message: 'Please select community tag!' }]}\n                                >\n                                <Select  onChange={(value)=>setCommunity(value)} >\n                                    {\n                                        communities?\n                                        communities.map((comm,index)=><Option key={index} value={comm.id}>{comm.Community}</Option>) \n                                        :\n                                        null                                       \n                                    }\n                                 </Select>\n                                </Form.Item>\n                                <Form.Item>\n                                <Button type='primary' htmlType='submit' size='large' block>Create</Button>\n           \n                                </Form.Item>\n                            </Form>\n                            \n        \n                        </div>\n                        </div>\n                                    </div>\n                    </TabPane>\n                    <TabPane tab=\"My Forums\" key=\"3\">\n                    <div className='adminProfiles' style={{height:'48vh',overflowY:'scroll'}}>\n                        <ForumList user={me.id}/>\n                        </div>\n                    </TabPane>\n                    </Tabs>\n                </Card>\n                \n            </div>\n            \n            </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title=\"403\"\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n        \n\n        </div>\n    );\n}\nexport default OtherProfile;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, {useState} from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty, Space} from 'antd';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Legend, { Plot } from '../../controls/legend/legend';\nimport {EditFilled ,UserOutlined,ExportOutlined,UserAddOutlined} from '@ant-design/icons';\nimport MainHeader from '../../components/mainHeader';\nimport {Request} from '../request/request'\nimport {Survey} from '../survey/survey'\nconst {TabPane}=Tabs;\nconst {Option}=Select;\nconst {Header}=Layout;\n\nconst Box=(props)=>{\n    const [modalState,setModalState]=useState(false);\n    const [profileName,setProfileName]=useState(props.data.username)\n    const [profileKey,setProfileKey]=useState(props.data.key)\n    console.log(props.data.key)\n    return(\n        <>\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\n        </div>\n        <Modal\n        title='Edit Profile'\n        style={{ top: 100 }}\n        width={500}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n        footer={[\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\n              Delete\n            </Button>,\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\n              Revert\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\n            Save\n          </Button>\n          ]}\n      >\n                    <div style={{display:'flex',flexDirection:'column'}}>\n                    <label >Profile Name</label>\n                        <Input\n                        type='text'\n                        value={profileName}\n                        onChange={(e)=>setProfileName(e.target.value)}\n                        size='large'\n                        style={{width:'50%',minWidth:330,marginTop:5}}\n                        />  \n                        <label style={{marginTop:8}}>Profile Key</label>\n                        <Input\n                        type='text'\n                        value={profileKey}\n                        onChange={(e)=>setProfileKey(e.target.value)}\n                        size='large'\n                        style={{width:'45%',minWidth:300,marginTop:5}}\n                        />  \n                        </div>\n\n      </Modal>\n        \n        </>\n    );\n}\nconst Activity=()=>{\n    return(\n        <div style={{height:220,border:'1px solid #adadad',margin:20}}>\n\n        </div>\n    );\n}\n\n\nconst AdminPage =()=>{\n  const [logged,setLogged]=useState(false)\n    function createData(time, amount) {\n        return { time, amount };\n      }\n      \n  /*     const data = [\n        createData('00:00', 0),\n        createData('03:00', 300),\n        createData('06:00', 600),\n        createData('09:00', 800),\n        createData('12:00', 1500),\n        createData('15:00', 2000),\n        createData('18:00', 2400),\n        createData('21:00', 2400),\n        createData('24:00', undefined),\n      ] */\n    \n    const theme = useTheme();\n   // const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\n   // let selectedAccounts=selectedOrg.org_users;\n   const data ={\n    username:\"james\",\n    id:1\n  }\n   let selectedAccounts= [data]\n    return(\n      <div className='profilePage'>\n        {\n          logged?\n          \n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n              <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>ADMIN</h1>\n              <div style={{width:'80%'}}>\n                  <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto',backgroundColor:'white',padding:30,}}>\n                  <TabPane tab=\"Build Survey \" key=\"1\" >\n                        \n                        <Survey />\n                        \n                            \n                        </TabPane>\n                        \n                          <TabPane tab=\"Manage requests\" key=\"2\" >\n                        <Request/>   \n                          </TabPane>\n                        \n                          </Tabs>\n                        \n              </div>\n        </div>\n          \n          :\n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n\n              <Card  style={{height:200,width:400,borderRadius:25}}>\n                <Space size='middle' direction='vertical'>\n                 <h2> \n                   ADMIN LOGIN\n                 </h2>\n                  <div style={{display:'flex'}}>\n                  <Input placeholder='Enter admin key' size='large' type='text'  /><Button onClick={()=>setLogged(true)} type='primary' size='large'>Login</Button>\n                  </div>\n                  </Space>\n                 \n              </Card>\n            </div>\n        }\n        \n        </div>\n\n    );\n}\nexport default AdminPage;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/login.js",["176"],"import React, {useState} from 'react';\nimport OrgForm from '../../components/form';\nimport SignUpCard from '../../components/signUpCard';\nimport './styles.css'\n\nconst OrgLogin =()=>{\n    const image=require('../../assets/whiteGhana.png')\n    const [login,setLogin]=useState(true);\n    return(\n        <div className='login' style={{minHeight:'100vh',height:'auto',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                {\n                    login?\n                    <OrgForm onClick={() =>{setLogin(false)}}/> \n                    :\n                    <SignUpCard onClick={() =>{setLogin(true)}}/> \n                }\n                \n                              \n\n        </div>\n    );\n}\nexport default OrgLogin;\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js",["177","178","179","180","181"],"import {message,Tabs,Row, Col,Modal,Input, Avatar, Button, Form ,List, Result, Empty, Select} from \"antd\";\nimport React,{useState,useEffect} from \"react\";\nimport {UserOutlined,ExportOutlined} from '@ant-design/icons';\nimport SurveyCard from \"../../components/surveyCard\";\nimport MainHeader from '../../components/mainHeader';\nimport axios from 'axios';\n\nconst {Option}=Select;\nconst MiniCard=(props)=>{\n\n    const [modalState,setModalState]=useState(false);\n    const [questions,setQuestions]=useState([])\n    \n        useEffect(() => {\n            axios.get('http://localhost:1337/questions')\n            .then(\n              res =>{\n                if(res.data){\n                  console.log(res.data)\n                  setQuestions(res.data)\n              }} )\n            .catch((error) => {\n              console.log(error);\n            })\n        },[]);\n    \n    \n\n      let filtered=questions.filter(question=>question.disease?.name===props.text)\n      \n \n    return(\n      \n        <>\n        <Button className='diseaseButton' style={{height:50,margin:10,borderRadius:20,fontWeight:'500'}} onClick={() => setModalState(true)}>\n            {props.text}\n        </Button>\n        <Modal\n        title={props.text}\n        centered\n        style={{ top: '20%'}}\n        width={920}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n      >\n        {\n            filtered?\n            <List\n            className='adminProfiles'\n                    size='medium'\n                    style={{height:'35vh',overflowY:'scroll'}}\n                    dataSource={filtered}\n                    renderItem={item => <List.Item>{item.question}</List.Item>}\n                />\n                :\n                <List/>\n\n        }\n       \n      </Modal>\n      </>\n    );\n}\nconst Entry=()=>{\n    const {TabPane} = Tabs;\n\n    const [surveyUID,setSurveyUID]=useState('')\n    const [selectedCommunity,setSelectedCommunity]=useState();\n    const [asDate,setAsDate]=useState('')\n\n    const [start,setStart]=useState(false)\n    const [step,setStep]=useState(false)\n    const [diseases,setDiseases]=useState([])\n    const [communities,setCommunities]=useState([])\n    useEffect(() => {\n        axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              console.log(res.data)\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n\n    useEffect(() => {\n        axios.get('http://localhost:1337/communities')\n        .then(\n          res =>{\n            if(res.data){\n              console.log(res.data)\n              setCommunities(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n\n    const error = () => {\n        message.error('This is an error message');\n      };\n\n    const content = (\n        <div style={{display:'flex',flexDirection:'column'}}>\n          <Button type='link' size='large' onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\n        </div>\n      );\n      const [preview,setPreview]=useState(true);\n      const mee=localStorage.getItem('current_user')\n      let style=mee?{}:{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column',alignItems:'center'}\n    return(\n        \n        <div style={style}>\n            <MainHeader/>\n            {\n                mee?\n                <>\n            <Row  sm={24} >\n           \n            <Row className='entryPoint'>\n                <Col md={start?0:4}  className='links' style={{backgroundColor:'#f5f5f580'}}>\n                {/* <Popover content={content} trigger=\"click\">\n                    <Avatar size={70} icon={<UserOutlined/>} style={{marginTop:30,marginBottom:20}}/>\n                </Popover> */}\n                    <Button block  size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(true)}}>Preview</Button>\n                    <Button  block size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(false)}}>Take A Survey</Button>\n                </Col>\n                <Col md={start?24:20} className='entryContent'>\n                    {\n                        preview?\n                        <div style={{padding:35}}>\n                        <h1 style={{fontSize:40,color:'white',textAlign:'left',marginBottom:40}}>Click A Disease to Preview</h1>\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\n                        {\n                            diseases.map(\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\n                                \n                            )\n                        }\n\n                        </div>\n                        \n                        \n                    </div>\n                    :\n                    <div className='selectDisease'>\n                        <Row style={{width:'100%',height:'100%'}}>\n                            \n                            \n                            <Col md={12} className='svgee' >\n\n\n                            </Col>\n                            <Col md={12} flex='auto' style={{backgroundColor:'#4e54c8'}}>\n                                {\n                                    !step?\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\n                                    <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\n                                    {\n                                        diseases.map(\n                                            (disease)=><Button onClick={()=>{\n                                                setStep(disease.questions.length>0?true:false)\n                                                if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\n                                            }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\n                                            \n                                        )\n                                    }\n                                    </div>\n                                    </div>\n                                    \n                                    :\n                                    <>\n                                        {\n                                    start?\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \n                                    \n                                    <Row style={{width:'100%'}}>\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n                                        <SurveyCard surveyUID={surveyUID} asDate={asDate} community={selectedCommunity}/>\n                                        </Col>\n                                    </Row>          \n                                    \n                                </div> \n                                    :\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                                    <Form\n                                        layout='vertical'  \n                                        onFinish={()=>setStart(true)}\n                                        \n                                    >\n                                        \n                                        <Form.Item name=\"surveyUID\" label=\"SurveyUID\" rules={[{ required: true, message: 'Please input a surveyUID!' }]}>\n                                        <Input className='formInput' placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item name=\"ActualSurveyDate\" label=\"Actual Survey Date\" rules={[{ required: true, message: 'Please enter the actual survey date!' }]}>\n                                        <Input className='formInput' type='date' placeholder=\"Enter Actual Survey Date\" size='large' onChange={(e)=>setAsDate(e.target.value)} value={asDate} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item name=\"community\" label=\"Community\" rules={[{ required: true, message: 'Please select a community' }]}>\n                                        <Select className='formInput' value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\n                                            {\n                                                communities?\n                                                communities.map(\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\n                                                )\n                                                :\n                                                null\n                                                \n                                            }\n                                        </Select>\n                                        </Form.Item>\n                                        <Form.Item >\n                                        <Button type=\"primary\" block size='large' htmlType='submit' >Next</Button>\n                                        </Form.Item> \n                                    </Form>\n                                    </div>\n                                    \n                                    </div>\n                                }\n                                    </>\n                                }\n                                \n                                \n                                \n\n                            </Col>\n                        </Row>\n\n\n                    </div>\n                    }\n                    \n                </Col>\n            </Row>\n                 \n            </Row>\n            {//Code for mobile version\n            }\n            {/* <Row className=\"entryMobile\">\n                <div style={{height:'92vh',marginTop:'8vh',width:'100%'}}>\n                <Col style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',height:'10vh'}}  xs={24} md={0}>\n                    <h5 style={{width:'50%'}}>Survey And Preview</h5>\n                </Col>\n               \n               \n                <Tabs style={{width:'100%'}} centered defaultActiveKey=\"1\" >\n                    <TabPane tab=\"Preview\" key=\"1\">\n                    <div className='adminProfiles' style={{padding:35,height:'80vh'}}>\n                        <h6 style={{fontSize:15,color:'gray',textAlign:'center',marginBottom:40}}>Click A Disease to Preview</h6>\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\n                        {\n                            diseases.map(\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\n                                \n                            )\n                        }\n\n                        </div>\n                        \n                        \n                    </div>\n                    </TabPane>\n                    <TabPane tab=\"Take Survey\" key=\"2\">\n                    <div className='adminProfiles' style={{display:'flex',flexDirection:'column',alignItems:'center',height:'80vh'}}>\n                    {\n                                    !step?\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                                    <Form\n                                        layout='vertical'   \n                                    >\n                                        \n                                        <Form.Item label=\"SurveyUID\">\n                                        <Input placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item label=\"Community\">\n                                        <Select value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\n                                            {\n                                                communities?\n                                                communities.map(\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\n                                                )\n                                                :\n                                                null\n                                                \n                                            }\n                                        </Select>\n                                        </Form.Item>\n                                        <Form.Item >\n                                        <Button type=\"primary\" block size='large' \n                                        onClick={()=>{\n                                            setStep(true)\n                                        }} >Next</Button>\n                                        </Form.Item> \n                                    </Form>\n                                    </div>\n                                    \n                                    </div>\n                                    :\n                                    <>\n                                        {\n                                    start?\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \n                                    \n                                    <Row style={{width:'100%'}}>\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n                                        <SurveyCard surveyUID={surveyUID} community={selectedCommunity}/>\n                                        </Col>\n                                    </Row>          \n                                    \n                                </div> \n                                    :\n                                <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\n                                <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\n                                {\n                                    diseases.map(\n                                        (disease)=><Button onClick={()=>{\n                                            setStart(disease.questions.length>0?true:false)\n                                            if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\n                                        }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\n                                        \n                                    )\n                                }\n                                </div>\n                                </div>\n                                }\n                                    </>\n                                }\n                                \n                    </div>\n                    </TabPane>\n                   \n                </Tabs>\n                </div>\n             \n            </Row> */}\n            </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh',color:'white'}}\n                    status=\"403\"\n                    \n                    title={<span style={{color:'white'}}>403</span>}\n                \n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n        </div>\n    );\n};\n\n\nexport default Entry;\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js",["182","183"],"import React,{useState,useEffect} from 'react';\nimport ForumCard from './forumCard';\nimport {MyCard, MyReplies} from './card';\nimport { Button, Empty } from 'antd';\nimport {ArrowLeftOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nconst ForumList =(props)=>{\n    const [forums,setForums]=useState([])\n    useEffect(() => {\n      async function getForums(){\n      if(props.filter){\n\n       await axios.get('http://localhost:1337/forums',\n       {\n         params:{\n           disease:props.filter\n         }\n       }\n      \n       )\n        .then(\n          res =>{\n            if(res.data){\n              setForums(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }else if(props.location){\n\n        await axios.get('http://localhost:1337/forums',\n       {\n         params:{\n           community:props.location\n         }\n       }\n      \n       )\n        .then(\n          res =>{\n            if(res.data){\n              setForums(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }else if(props.user){\n        console.log(props.user)\n        await axios.get('http://localhost:1337/forums',\n        {\n          params:{\n            author:props.user\n          }\n        }\n       \n        )\n         .then(\n           res =>{\n             if(res.data){\n               setForums(res.data)\n           }} )\n         .catch((error) => {\n           console.log(error);\n         })\n      }\n      \n      else{\n        await axios.get('http://localhost:1337/forums')\n         .then(\n           res =>{\n             if(res.data){\n               setForums(res.data)\n           }} )\n         .catch((error) => {\n           console.log(error);\n         })\n      }\n      }\n      getForums()\n          \n      },[]);\n    \n      useEffect(()=>{\n       async function filterData(filter){\n          \n        await setForums(forums.filter(forum=>forum.disease.name===filter))  \n       \n      }\n        \n        filterData(props.filter);\n       \n        \n      },[props.filter])\n      \n      \n    const [more,setMore]=useState(false);\n    const clicked=localStorage.getItem('clicked');\n    let selectedForum=forums.filter(forum=>forum.id===parseInt(clicked))\n   /*  console.log(selectedForum[0])   */\n       return(\n        <>\n        {\n            !more?\n            <div  style={{display:'flex',flexDirection:'column',alignItems:'flex-start',width:'100%',padding:'0% 5% 0% 5%'}}>\n                {\n                  \n                    forums?\n                    forums.map((forum)=><ForumCard id={forum.id} key={forum.id} data={forum}  onClick={()=>setMore(true)}/>)\n                    :\n                   <Empty description='No Forums'/>\n                }\n                \n            </div>:\n            <>\n            {\n                selectedForum?\n                <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start',width:'100%',padding:'0% 5% 0% 5%'}}>\n                <Button size='small' style={{borderRadius:40,fontWeight:'bold',border:'1px solid lightslategrey',color:'lightslategrey'}}  onClick={()=>setMore(false)}><ArrowLeftOutlined/></Button>\n                <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'flex-start',width:'100%'}}>\n                        <MyCard data={selectedForum[0]} /* onClick={()=>{setShowDetails(!showDetails)}} *//>\n                        <MyReplies title=\"Replies\" replies={selectedForum[0].reply} />\n                    \n                 </div>\n                </div>\n            :\n            <Empty/>\n            }\n                \n           </>    \n           \n        }\n        </>\n    );\n}\nexport default ForumList",["184","185"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js",["186"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js",["187","188","189","190","191","192","193","194","195","196","197"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js",["198","199","200","201","202","203","204","205"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js",["206","207","208","209"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js",["210","211","212","213","214"],"import React,{useEffect,useState} from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\n\n\nexport const SurveyForm = () =>{\n   const [diseases,setDiseases] = useState([]);\n   const [dis,setDis] = useState(0);\n   const [count,setCount] = useState(0);\n   var data = [];\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n\n      const postquestions = async(body) =>{\n        var url = \"questions\";\n         data = await Post(url,body);\n         \n     \n     }\n\n\n      const onFinish = values => {\n       if (dis===0){\n         alert(\"You must choose a disease\");\n         return\n       }\n        values.questions.map(value=>{\n         \n          const body = {\n            disease: dis,\n            question:value.question,\n            Keyword:value.keyword,\n            type:value.type\n          }\n        \n          const bod = JSON.stringify(body)\n       \n          postquestions(bod)\n        })\n      };\n    \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n     \n      \n\n        }\n\n        function handleChanges(value) {\n         \n          setDis(value);\n  \n          }\n     \n        const getDiseases = async() =>{\n          var url = \"diseases\";\n           data = await Get(url);\n          setDiseases(data);\n         \n       \n       }\n\n        useEffect(()=>{\n            getDiseases();\n        \n        },[count])\n\n\n    return(\n       <>\n         \n\n               <Row>\n                   <Col>\n                 \n                   <Select placeholder=\"Disease\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChanges}>\n                     \n                   {diseases.map(disease =>{\n                           return( <Option value={disease.id}>{disease.name}</Option> \n                            )})}\n                  \n                        </Select>\n\n               \n                       \n                       \n                   </Col>\n               </Row> \n           \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"questions\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'question']}\n                           fieldKey={[field.fieldKey, 'question']}\n                           rules={[{ required: true, message: 'Missing question ' }]}\n                         >\n                           <Input placeholder=\"Input question here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'keyword']}\n                           fieldKey={[field.fieldKey, 'keyword']}\n                           rules={[{ required: true, message: 'Missing keyword ' }]}\n                         >\n                           <Input placeholder=\"Input keyword here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'type']}\n                           fieldKey={[field.fieldKey, 'type']}\n                           rules={[{ required: true, message: 'Missing type ' }]}\n                         >\n                              <Select placeholder=\"Select type\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChange}>\n                                    <Option value=\"string\">string</Option>\n                                    <Option value=\"boolean\">boolean</Option>\n                                    <Option value=\"number\">number</Option>\n                                    <Option value=\"radio\">radio</Option>\n                                    <Option value=\"list\">list</Option>\n                                    <Option value=\"listpairs\">listpairs</Option>\n                              </Select>\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Question\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n       </>\n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/api.js",["215","216","217","218","219","220","221","222","223","224","225","226"],"import firebase from 'firebase'\n\nconst REACT_APP_API_URL= 'http://localhost:1337'\n\nexport const Post = async(url,body,token) => {\n  const link = `${REACT_APP_API_URL}` + '/' + url;\n  \n  if (token){\n     console.log(body)\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'POST',\n      headers: {\n         'Authorization':`Bearer ${token}`,\n          'Content-Type': 'application/json',\n      },\n     body:body\n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      console.log(data)\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n  return response; \n  }\n  else{\n  \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'POST',\n      headers: {\n           \n          'Content-Type': 'application/json',\n      },\n     body:body\n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      console.log(data)\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n \n  return response; \n \n  }\n \n\n\n\n\n}\n\n\n\nexport const Get = async(url,token) => {\n  const link = `${REACT_APP_API_URL}` + '/' + url;\n  \n  if (token){\n    \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'GET',\n      headers: {\n         'Authorization':`Bearer ${token}`,\n          'Content-Type': 'application/json',\n      },\n  \n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n  return response; \n  }\n  else{\n  \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'GET',\n      headers: {\n           \n          'Content-Type': 'application/json',\n      },\n    \n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n\n  return response; \n \n  }\n \n\n\n\n\n}\n\n\n\nconst firebaseConfig = {\n   apiKey: \"AIzaSyAmewLzrI0U6MGDV0Tn5xBjpy2ZNeou4-Y\",\n   authDomain: \"noguchiidcs.firebaseapp.com\",\n   projectId: \"noguchiidcs\",\n   storageBucket: \"noguchiidcs.appspot.com\",\n   messagingSenderId: \"823238592225\",\n   appId: \"1:823238592225:web:8801b8d0d25394fb44d9a0\"\n };\n\n export default firebase.initializeApp(firebaseConfig);","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js",["227","228","229","230"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar,Layout, Result} from 'antd';\nimport \"antd/dist/antd.css\";\nimport '../../App.css';\nimport Headers from \"../../components/header\";\nimport Banner from \"../../components/banner\";\nimport MainHeader from \"../../components/mainHeader\";\n\nconst ProfilePage=()=>{\n    const [disability,setDisability]=useState(true);\n    const [orgname,setOrgname]=useState('GHANA EDUCATION SERVICE')\n    const [orgUsername,setOrgUsername]=useState('GeSNoguchi');\n    const [orgPassword,setOrgPassword]=useState('osemigor123');\n    const{Header}=Layout;\n    const mee=localStorage.getItem('current_user')\n    return(\n        <div className='profilePage'>\n            <MainHeader/>\n            {\n                mee?\n                <>\n                <Headers/>\n            <div className='profileMidSection'>\n            \n                    <Card className='proCard' bordered style={{flex:0.3,height:'auto',backgroundColor:'white',textAlign:'left',display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start',flexShrink:0,margin:20,/* boxShadow:'3px 3px 20px #00000010' */minWidth:'min(95vw,350px)'}}>\n                        <h1 style={{color:'black',fontSize:30}}>\n                         PROFILE\n                        </h1>\n                        <h3 style={{color:'#40404090'}}>\n                            Name\n                        </h3>\n                        <Input type='text' value={orgname} onChange={(e)=>{setOrgname(e.target.value)}} disabled={disability} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Username\n                        </h3>\n                        <Input type='text' value={orgUsername} disabled={disability} onChange={(e)=>{setOrgUsername(e.target.value)}} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Password\n                        </h3>\n                        <Input.Password type='password' value={orgPassword} disabled={disability} size='large' onChange={(e)=>{setOrgPassword(e.target.value)}} style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <Button type='primary' size='large' onClick={()=>{setDisability(!disability)}}  block style={{marginBottom:30,backgroundColor:'#6461ff'}}>{disability?'Edit Profile':'Save'}</Button>\n                        <Button type='primary' size='large' onClick={()=>{\n                            localStorage.removeItem('current_user');\n                            window.location.href='/';\n                            }} danger block>Logout</Button>\n\n                    </Card>\n                <Card className='banner proCard' style={{flex:0.5,margin:20,minWidth:'min(95vw,350px)'}}>\n                    <h1>Take A Disease Survey</h1>\n                    <Button className='bannerButton' onClick={()=>{window.location.href='/entry';}}>Start</Button>\n                </Card>\n                \n            </div>\n            \n                \n\n                \n                </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title=\"403\"\n                \n                    subTitle=\"Sorry, you are not authorized to access this page.\"\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n       </div>     \n    );\n}\nexport default ProfilePage;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js",["231","232","233","234","235","236","237","238","239"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js",["240","241","242","243"],"import React, {useState,useEffect} from \"react\";\nimport { Input, Radio,Card, Space, Button ,message, InputNumber, Modal,Checkbox,Form,Select} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {PlusOutlined,ArrowUpOutlined,ArrowDownOutlined,MinusCircleOutlined ,ExclamationCircleOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nimport Background from '../assets/desktop4.png';\nimport Background2 from '../assets/desktop7.png';\nimport Background3 from '../assets/desktop3.png';\n\nconst {Option}=Select\nconst SurveyCard=(props)=>{\nconst [allAnswers,setAllAnswers]=useState([])\n const [questions,setQuestions]=useState([]);\n useEffect(() => {\n    axios.get('http://localhost:1337/questions')\n    .then(\n      res =>{\n        if(res.data){\n         let alls=res.data\n          setQuestions(res.data)\n          setAllAnswers(alls.map((all)=>({question:all.id,answer:[]}))) \n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\n const [point,setPoint]=useState(1);\n let current =questions.filter((question,index)=>index===point-1) \n let input;\n    const handleChange=e=>{\n       \n        let newArr=[...allAnswers]\n        newArr[point-1].answer=e.target.value\n       setAllAnswers(newArr) \n    \n    } \n    const handleNumberChange=value=>{\n        let newArr=[...allAnswers]\n        newArr[point-1].answer=value\n       setAllAnswers(newArr) \n    }  \n    const handleCheckChange=value=>{\n      let newArr=[...allAnswers]\n      newArr[point-1].answer=value\n      setAllAnswers(newArr) \n\n      console.log(allAnswers)\n    }\n    \n    const handleFinish=(values)=>{\n      {\n                \n        if(point===questions.length){\n          if(current[0]?.type==='radiolist'||current[0]?.type==='listpairs'||current[0]?.type==='listselect'){\n            console.log(values)\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n          }\n            Modal.confirm({\n                title: 'Submit Survey',\n                content: 'Do you want to submit the survey?',\n                icon: <ExclamationCircleOutlined />,\n                onOk() {\n                  axios.post('http://localhost:1337/surveys',{\n                      surveyUID:props.surveyUID,\n                      org_user:JSON.parse(localStorage.getItem('userAndjwt')).user.id,\n                      disease:1,\n                      ActualSurveyDate:props.asDate,\n                      community:props.community,\n                      answers:allAnswers\n                       \n                  }).then(res =>{\n                        if(res.data){\n                            console.log(res.data)\n                            message.success('Survey Filled Successfully');\n                            window.location.href='/entry'\n                        }}\n\n                  )\n                  .catch((error) => {\n                    console.log(error);\n                    message.error('Entry Unsuccessful')\n                  })\n                },\n                centered:true,\n                onCancel() {\n                  console.log('Cancel');\n                },\n                cancelText:'No',\n                okText:'Yes'\n              });\n\n        }else if(current[0]?.type==='listpairs'){\n            console.log(values)\n\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n            setPoint(point+1)\n        }else if(current[0]?.type==='listselect'){\n          console.log(values)\n          let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }else if(current[0]?.type==='radiolist'){\n        console.log(values)\n        let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }\n        else {setPoint(point+1)}\n    }\n    }\n    \n  if (current[0]?.type==='boolean') {\n      input=\n      <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n      <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n        <Radio.Button value='yes'>True</Radio.Button>\n        <Radio.Button value='no'>False</Radio.Button>\n      </Radio.Group>\n      </Form.Item>\n  } else if(current[0]?.type==='check'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Checkbox.Group onChange={handleCheckChange} >\n            {current[0]?.options.map(\n              (option,index)=><Checkbox key={index} style={{ lineHeight: '32px'}} value={option}>{option}</Checkbox>\n            )}\n        </Checkbox.Group>\n    </Form.Item>\n      \n  }else if(current[0]?.type==='radio'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n          <Radio.Button value='good'>Good</Radio.Button>\n          <Radio.Button value='bad'>Bad</Radio.Button>\n          <Radio.Button value='poor'>Poor</Radio.Button>\n        </Radio.Group>\n    </Form.Item>\n      \n  } else if(current[0]?.type==='number'){\n      input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><InputNumber onChange={handleNumberChange} value={allAnswers[point-1]?.answer}    style={{marginBottom:15}}  size='large' min={0}/></Form.Item>\n}else if(current[0]?.type==='listpairs'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Input placeholder={secondpart} />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='listselect'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='radiolist'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                          <Radio.Group  style={{marginBottom:15}}  size='large'>\n                            <Radio.Button value='increasing'><ArrowUpOutlined/></Radio.Button>\n                            <Radio.Button value='decreasing'><ArrowDownOutlined/></Radio.Button>\n                          </Radio.Group>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else{\n    input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><Input  onChange={handleChange} value={allAnswers[point-1]?.answer}   style={{marginBottom:15}}  type={current[0]?.type} size='large' /></Form.Item>\n  };\n    return(\n        <>\n         <h1 style={{fontSize:'14em',lineHeight:0.4,color:'lightgrey',opacity:0.2,fontWeight:'bolder'}}>\n           {point>9?point:'0'+point}\n        </h1>\n           <Form onFinish={handleFinish}  style={{width:'100%'}}>\n            <Card  \n              actions={[\n                <Button type='default' size='large' style={{borderRadius:15}} onClick={()=>{point!==1 ? setPoint(point-1):setPoint(point);\n                 }}>Back</Button>,\n                <Button type='primary' size='large'   /* disabled */ style={{borderRadius:15}} htmlType='submit' >{point===questions.length?'Finish':'Next'}</Button>\n                ]}\n\n            >\n                <Space direction='vertical' size='large'>\n                <h1 style={{fontSize:'max(13px,1vw)',wordWrap:'break-word',textTransform:'uppercase',textAlign:'center'}}>{current[0]?.question}</h1>\n                {input}\n                </Space>\n\n\n            </Card>\n            </Form>\n      </>  \n    );\n};\nexport default SurveyCard;",["244","245"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js",["246","247","248","249","250"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js",[],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js",["251","252","253"],"import React, {useState} from \"react\";\nimport { message,Input, Card, Space, Button ,Avatar, Form} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {UserOutlined,LockOutlined,KeyOutlined} from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { UserLogin } from \"../functions\";\n\nconst OrgForm =({onClick,...props})=>{\n\nconst [username,setUsername]=useState('');\nconst [password,setPassword]=useState('');\n\nconst [loginType,setLoginType]=useState('other');\nconst handleSubmit=(e)=>{\n    const org={\n      username:username,\n      password:password\n    }\n    console.log(org)\n  axios.get('http://localhost:1337/organizations',\n    {\n      params:{\n        username:username,\n        key:password\n      },\n      paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\n    }\n  )\n   .then(response => {\n          \n          console.log(response.data)\n          if(response.data.length>0){\n            localStorage.setItem('selectedOrg',JSON.stringify(response.data))\n            window.location.href='/orgAccounts'\n          }\n          else{\n            \n            message.error('Organization Not Found')\n          }\n         \n        \n        }\n        )\n        .catch((error) => {\n          \n          console.log(error);\n        })\n    \n}\nconst  handleSubmit2=(e)=>{\n  // axios\n  // .post('http://localhost:1337/auth/local', {\n  //   identifier: username,\n  //   password: password,\n  // })\n  // .then(response => {\n  //   // Handle success.\n  //   console.log('Well done!');\n  //   console.log('User profile', response.data.user);\n  //   console.log('User token', response.data.jwt);\n  //   localStorage.setItem('currentUser',JSON.stringify(response.data.user))\n  //   window.location.href='/other'\n  // })\n  // .catch(error => {\n  //   // Handle error.\n  //   message.error('Incorrect Details')\n  //   console.log('An error occurred:', error.response);\n  // });\n  /* axios.post('http://localhost:1337/user',)\n      .then(response =>window.location.href='/other')\n      .catch((error) => {\n        console.log(error);\n        \n      }) */\n   /* axios.post('http://localhost:5002/auth/userLogin',user)\n      .then(response =>window.location.href='/other')\n      .catch((error) => {\n        console.log(error);\n        \n      }) */\n    /*   const response = await fetch('http://localhost/5000/auth/userLogin', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'sam e-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n      })\n      console.log(response.json()) */\n\n      UserLogin(username,password);\n  \n}\nreturn(\n    <Card style={{ flex: 0.28,width:'min(95vw,100%)',border:'1px solid graysmoke',display:'flex',flexDirection:'column',alignItems:'center',borderRadius:15,backgroundColor:'white',justifyContent:'center'}}>\n      {\n        loginType==='other'?\n        <Form layout='vertical' onFinish={handleSubmit2}>\n        <Space direction='vertical' size={10}>\n      <h1 style={{fontSize:32,fontWeight:'bold',textAlign:'left'}}>Sign In</h1>\n      <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'lightblue',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')}>Org Login</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'#8a2be290',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n      <Input \n      size=\"large\"\n      className='formInput'\n      onChange={(e)=>{setUsername(e.target.value)}}\n      placeholder=\"Enter your username\" \n      prefix={<UserOutlined className=\"site-form-item-icon\" />} \n      />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n      <Input.Password \n      size=\"large\"\n      className='formInput'\n      onChange={(e)=>{setPassword(e.target.value)}}\n      placeholder=\"Enter your password\" \n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \n      />\n      </Form.Item>\n      <Button \n      size='large'\n      block\n      style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\n      htmlType='submit'\n      >\n      Sign In\n      </Button>\n    </Space>\n    </Form>\n    :\n    <Form layout='vertical' onFinish={handleSubmit}>\n    <Space direction='vertical' size={10}>\n    <h1 style={{fontSize:30,fontWeight:'bold',textAlign:'left'}}>Org Sign In</h1>\n    <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'#8a2be290',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')} >Org Login</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'lightblue',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\n    <Form.Item\n        label=\"Org Username\"\n        name=\"org_username\"\n        rules={[{ required: true, message: \"Please input the organization's username!\" }]}\n      >\n    <Input \n    size=\"large\"\n    className='formInput'\n    onChange={(e)=>{setUsername(e.target.value)}}\n    placeholder=\"Enter org username\" \n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \n    />\n    </Form.Item>\n    <Form.Item\n        label=\"Org Password\"\n        name=\"org_password\"\n        rules={[{ required: true, message: \"Please input the organization's password!\" }]}\n      >\n    <Input \n    size=\"large\"\n    className='formInput'\n    onChange={(e)=>{setPassword(e.target.value)}}\n    placeholder=\"Enter org password\" \n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \n    />\n    </Form.Item>\n    <Button \n    size='large'\n    block\n    style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\n    htmlType='submit'\n    >\n    Sign In\n    </Button>\n  </Space>\n  </Form>\n  \n      }\n    \n    <Button size={30} onClick={onClick} type='link' style={{color:'lightseagreen',textDecorationStyle:'solid',textDecorationColor:'lightseagreen',textDecorationLine:'underline',textDecorationWidth:1}}>Do Not Have An Account?</Button>\n    </Card>\n);\n\n}\n\nexport default OrgForm;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js",["254","255","256","257","258","259","260"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js",["278","279","280","281","282","283"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport {EditFilled ,UserOutlined} from '@ant-design/icons';\n\nconst Headers=()=>{\n    return(\n        <div className=\"headerSection\">\n            \n                    <div style={{display:'flex',flexDirection:'column',alignItems:'start',margin:10}}>\n                    <Avatar size={90} icon={<UserOutlined/>}/>\n                    </div>\n                \n        </div>\n    );\n}\nexport default Headers;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js",["284","285"],"import React,{useState,useEffect} from 'react';\nimport ForumList from './forumList';\nimport { Button, Empty } from 'antd';\nimport {CloseOutlined} from '@ant-design/icons';\nimport TagBox from './tagBox';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport axios from 'axios'\nconst TagSet =(props)=>{\n    const [view,setView]=useState(false);\n    const selectedDiseaseTag=localStorage.getItem('diseaseTag');\n    const selectedLocationTag=localStorage.getItem('communityTag');\n    const [diseases,setDiseases]=useState([])\n    const [communities,setCommunities]=useState([])\n    useEffect(() => {\n        axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    useEffect(() => {\n        axios.get('http://localhost:1337/communities')\n        .then(\n          res =>{\n            if(res.data){\n              setCommunities(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    const replies = ['Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article'];\n    return(\n        <>\n        {props.disease?\n        <>\n        {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    diseases?\n                    <>\n                    {\n                        diseases.map(disease=><TagBox onClick={()=>{ setView(true);localStorage.setItem('diseaseTag',disease.id)  }} disease={disease.name} numberOfForums={disease.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n                {/* <TagBox onClick={()=>setView(true)} disease='Schistosomiasis'/>\n                <TagBox onClick={()=>setView(true)} disease='Cholera'/>\n                <TagBox onClick={()=>setView(true)} disease='Dysentry'/>\n                <TagBox onClick={()=>setView(true)} disease='Malaria'/>\n                <TagBox onClick={()=>setView(true)} disease='Diarrhoea'/> */}\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                {\n                    selectedDiseaseTag?\n                    <>\n                        <Avatar size='small'  style={{boxShadow:'2px 2px 2px  #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',color:'white',backgroundColor:'darkgreen',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                        <ForumList filter={selectedDiseaseTag} />\n                    </>\n                    :\n                    <Empty/>\n                }\n                \n\n            </div>\n\n        \n        }\n        </>\n        :\n\n        <>\n         {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    communities?\n                    <>\n                    {\n                        communities.map(community=><TagBox onClick={()=>{ setView(true);localStorage.setItem('communityTag',community.id)  }} location={community.Community} numberOfForums={community.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                <Avatar size='small'  style={{boxShadow:'3px 3px 2px #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',fontWeight:'bolder',color:'white',backgroundColor:'orange',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                <ForumList location={selectedLocationTag}/>\n\n            </div>\n\n        \n        }\n        </>\n    \n        \n        }\n        \n        </>\n    );\n}\nexport default TagSet","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js",["286","287","288","289","290","291"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js",["292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js",["308"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js",["309","310"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js",["311","312","313","314","315","316","317"],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"326","line":2,"column":55,"nodeType":"324","messageId":"325","endLine":2,"endColumn":63},{"ruleId":"322","severity":1,"message":"327","line":7,"column":8,"nodeType":"324","messageId":"325","endLine":7,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":8,"column":8,"nodeType":"324","messageId":"325","endLine":8,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":78,"column":12,"nodeType":"324","messageId":"325","endLine":78,"endColumn":19},{"ruleId":"322","severity":1,"message":"330","line":79,"column":12,"nodeType":"324","messageId":"325","endLine":79,"endColumn":23},{"ruleId":"322","severity":1,"message":"331","line":80,"column":12,"nodeType":"324","messageId":"325","endLine":80,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":81,"column":11,"nodeType":"324","messageId":"325","endLine":81,"endColumn":17},{"ruleId":"322","severity":1,"message":"333","line":1,"column":15,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"334","line":2,"column":29,"nodeType":"324","messageId":"325","endLine":2,"endColumn":32},{"ruleId":"322","severity":1,"message":"335","line":2,"column":33,"nodeType":"324","messageId":"325","endLine":2,"endColumn":36},{"ruleId":"322","severity":1,"message":"336","line":2,"column":37,"nodeType":"324","messageId":"325","endLine":2,"endColumn":44},{"ruleId":"322","severity":1,"message":"337","line":2,"column":45,"nodeType":"324","messageId":"325","endLine":2,"endColumn":50},{"ruleId":"322","severity":1,"message":"338","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":10,"column":8,"nodeType":"324","messageId":"325","endLine":10,"endColumn":15},{"ruleId":"322","severity":1,"message":"340","line":11,"column":7,"nodeType":"324","messageId":"325","endLine":11,"endColumn":12},{"ruleId":"322","severity":1,"message":"341","line":13,"column":7,"nodeType":"324","messageId":"325","endLine":13,"endColumn":17},{"ruleId":"322","severity":1,"message":"342","line":14,"column":7,"nodeType":"324","messageId":"325","endLine":14,"endColumn":17},{"ruleId":"322","severity":1,"message":"343","line":104,"column":7,"nodeType":"324","messageId":"325","endLine":104,"endColumn":12},{"ruleId":"322","severity":1,"message":"344","line":106,"column":12,"nodeType":"324","messageId":"325","endLine":106,"endColumn":19},{"ruleId":"322","severity":1,"message":"345","line":106,"column":20,"nodeType":"324","messageId":"325","endLine":106,"endColumn":30},{"ruleId":"322","severity":1,"message":"332","line":109,"column":12,"nodeType":"324","messageId":"325","endLine":109,"endColumn":18},{"ruleId":"322","severity":1,"message":"346","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"347","line":3,"column":67,"nodeType":"324","messageId":"325","endLine":3,"endColumn":72},{"ruleId":"322","severity":1,"message":"348","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":19},{"ruleId":"322","severity":1,"message":"349","line":4,"column":21,"nodeType":"324","messageId":"325","endLine":4,"endColumn":25},{"ruleId":"322","severity":1,"message":"350","line":4,"column":27,"nodeType":"324","messageId":"325","endLine":4,"endColumn":32},{"ruleId":"322","severity":1,"message":"351","line":4,"column":34,"nodeType":"324","messageId":"325","endLine":4,"endColumn":39},{"ruleId":"322","severity":1,"message":"352","line":4,"column":41,"nodeType":"324","messageId":"325","endLine":4,"endColumn":46},{"ruleId":"322","severity":1,"message":"353","line":4,"column":48,"nodeType":"324","messageId":"325","endLine":4,"endColumn":67},{"ruleId":"322","severity":1,"message":"354","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":14},{"ruleId":"322","severity":1,"message":"355","line":5,"column":18,"nodeType":"324","messageId":"325","endLine":5,"endColumn":22},{"ruleId":"322","severity":1,"message":"356","line":6,"column":9,"nodeType":"324","messageId":"325","endLine":6,"endColumn":19},{"ruleId":"322","severity":1,"message":"357","line":6,"column":21,"nodeType":"324","messageId":"325","endLine":6,"endColumn":33},{"ruleId":"322","severity":1,"message":"358","line":6,"column":34,"nodeType":"324","messageId":"325","endLine":6,"endColumn":48},{"ruleId":"322","severity":1,"message":"359","line":6,"column":49,"nodeType":"324","messageId":"325","endLine":6,"endColumn":64},{"ruleId":"322","severity":1,"message":"360","line":7,"column":8,"nodeType":"324","messageId":"325","endLine":7,"endColumn":18},{"ruleId":"322","severity":1,"message":"361","line":11,"column":8,"nodeType":"324","messageId":"325","endLine":11,"endColumn":14},{"ruleId":"322","severity":1,"message":"332","line":12,"column":8,"nodeType":"324","messageId":"325","endLine":12,"endColumn":14},{"ruleId":"322","severity":1,"message":"362","line":14,"column":7,"nodeType":"324","messageId":"325","endLine":14,"endColumn":10},{"ruleId":"322","severity":1,"message":"363","line":67,"column":7,"nodeType":"324","messageId":"325","endLine":67,"endColumn":15},{"ruleId":"322","severity":1,"message":"364","line":78,"column":14,"nodeType":"324","messageId":"325","endLine":78,"endColumn":24},{"ruleId":"322","severity":1,"message":"365","line":94,"column":11,"nodeType":"324","messageId":"325","endLine":94,"endColumn":16},{"ruleId":"322","severity":1,"message":"366","line":101,"column":8,"nodeType":"324","messageId":"325","endLine":101,"endColumn":24},{"ruleId":"322","severity":1,"message":"343","line":7,"column":11,"nodeType":"324","messageId":"325","endLine":7,"endColumn":16},{"ruleId":"322","severity":1,"message":"346","line":1,"column":44,"nodeType":"324","messageId":"325","endLine":1,"endColumn":50},{"ruleId":"322","severity":1,"message":"347","line":1,"column":80,"nodeType":"324","messageId":"325","endLine":1,"endColumn":85},{"ruleId":"322","severity":1,"message":"339","line":66,"column":12,"nodeType":"324","messageId":"325","endLine":66,"endColumn":19},{"ruleId":"322","severity":1,"message":"367","line":102,"column":11,"nodeType":"324","messageId":"325","endLine":102,"endColumn":16},{"ruleId":"322","severity":1,"message":"368","line":106,"column":11,"nodeType":"324","messageId":"325","endLine":106,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":81,"column":9,"nodeType":"371","endLine":81,"endColumn":11,"suggestions":"372"},{"ruleId":"369","severity":1,"message":"373","line":93,"column":9,"nodeType":"371","endLine":93,"endColumn":23,"suggestions":"374"},{"ruleId":"318","replacedBy":"375"},{"ruleId":"320","replacedBy":"376"},{"ruleId":"322","severity":1,"message":"377","line":4,"column":11,"nodeType":"324","messageId":"325","endLine":4,"endColumn":20},{"ruleId":"322","severity":1,"message":"378","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"379","line":2,"column":17,"nodeType":"324","messageId":"325","endLine":2,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"380","line":2,"column":30,"nodeType":"324","messageId":"325","endLine":2,"endColumn":36},{"ruleId":"322","severity":1,"message":"346","line":2,"column":38,"nodeType":"324","messageId":"325","endLine":2,"endColumn":44},{"ruleId":"322","severity":1,"message":"357","line":5,"column":9,"nodeType":"324","messageId":"325","endLine":5,"endColumn":21},{"ruleId":"322","severity":1,"message":"381","line":5,"column":22,"nodeType":"324","messageId":"325","endLine":5,"endColumn":34},{"ruleId":"322","severity":1,"message":"382","line":5,"column":35,"nodeType":"324","messageId":"325","endLine":5,"endColumn":46},{"ruleId":"322","severity":1,"message":"383","line":6,"column":10,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"384","severity":1,"message":"385","line":36,"column":23,"nodeType":"386","messageId":"387","endLine":36,"endColumn":25},{"ruleId":"388","severity":1,"message":"389","line":52,"column":5,"nodeType":"390","messageId":"387","endLine":52,"endColumn":9},{"ruleId":"322","severity":1,"message":"323","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"346","line":2,"column":38,"nodeType":"324","messageId":"325","endLine":2,"endColumn":44},{"ruleId":"322","severity":1,"message":"382","line":5,"column":38,"nodeType":"324","messageId":"325","endLine":5,"endColumn":49},{"ruleId":"322","severity":1,"message":"383","line":6,"column":10,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"322","severity":1,"message":"391","line":7,"column":10,"nodeType":"324","messageId":"325","endLine":7,"endColumn":20},{"ruleId":"322","severity":1,"message":"392","line":8,"column":8,"nodeType":"324","messageId":"325","endLine":8,"endColumn":13},{"ruleId":"322","severity":1,"message":"361","line":10,"column":9,"nodeType":"324","messageId":"325","endLine":10,"endColumn":15},{"ruleId":"322","severity":1,"message":"393","line":45,"column":9,"nodeType":"324","messageId":"325","endLine":45,"endColumn":19},{"ruleId":"322","severity":1,"message":"380","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":29},{"ruleId":"322","severity":1,"message":"394","line":5,"column":7,"nodeType":"324","messageId":"325","endLine":5,"endColumn":11},{"ruleId":"322","severity":1,"message":"395","line":16,"column":10,"nodeType":"324","messageId":"325","endLine":16,"endColumn":17},{"ruleId":"384","severity":1,"message":"385","line":161,"column":97,"nodeType":"386","messageId":"387","endLine":161,"endColumn":99},{"ruleId":"322","severity":1,"message":"396","line":10,"column":17,"nodeType":"324","messageId":"325","endLine":10,"endColumn":25},{"ruleId":"322","severity":1,"message":"397","line":12,"column":11,"nodeType":"324","messageId":"325","endLine":12,"endColumn":25},{"ruleId":"322","severity":1,"message":"398","line":22,"column":13,"nodeType":"324","messageId":"325","endLine":22,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":43,"column":35,"nodeType":"401","messageId":"402","endLine":43,"endColumn":37},{"ruleId":"369","severity":1,"message":"403","line":85,"column":11,"nodeType":"371","endLine":85,"endColumn":18,"suggestions":"404"},{"ruleId":"322","severity":1,"message":"405","line":6,"column":9,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},{"ruleId":"406","severity":1,"message":"407","line":6,"column":39,"nodeType":"386","messageId":"408","endLine":6,"endColumn":40},{"ruleId":"406","severity":1,"message":"407","line":10,"column":56,"nodeType":"386","messageId":"408","endLine":10,"endColumn":57},{"ruleId":"409","severity":1,"message":"410","line":28,"column":3,"nodeType":"411","messageId":"412","endLine":28,"endColumn":19},{"ruleId":"406","severity":1,"message":"407","line":32,"column":56,"nodeType":"386","messageId":"408","endLine":32,"endColumn":57},{"ruleId":"409","severity":1,"message":"410","line":50,"column":3,"nodeType":"411","messageId":"412","endLine":50,"endColumn":19},{"ruleId":"322","severity":1,"message":"405","line":63,"column":9,"nodeType":"324","messageId":"325","endLine":63,"endColumn":13},{"ruleId":"406","severity":1,"message":"407","line":63,"column":39,"nodeType":"386","messageId":"408","endLine":63,"endColumn":40},{"ruleId":"406","severity":1,"message":"407","line":67,"column":56,"nodeType":"386","messageId":"408","endLine":67,"endColumn":57},{"ruleId":"409","severity":1,"message":"410","line":84,"column":3,"nodeType":"411","messageId":"412","endLine":84,"endColumn":19},{"ruleId":"406","severity":1,"message":"407","line":88,"column":56,"nodeType":"386","messageId":"408","endLine":88,"endColumn":57},{"ruleId":"409","severity":1,"message":"410","line":106,"column":3,"nodeType":"411","messageId":"412","endLine":106,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"346","line":2,"column":38,"nodeType":"324","messageId":"325","endLine":2,"endColumn":44},{"ruleId":"322","severity":1,"message":"327","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"322","severity":1,"message":"332","line":14,"column":11,"nodeType":"324","messageId":"325","endLine":14,"endColumn":17},{"ruleId":"322","severity":1,"message":"413","line":1,"column":29,"nodeType":"324","messageId":"325","endLine":1,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":1,"column":34,"nodeType":"324","messageId":"325","endLine":1,"endColumn":39},{"ruleId":"322","severity":1,"message":"355","line":5,"column":10,"nodeType":"324","messageId":"325","endLine":5,"endColumn":14},{"ruleId":"322","severity":1,"message":"414","line":94,"column":10,"nodeType":"324","messageId":"325","endLine":94,"endColumn":20},{"ruleId":"322","severity":1,"message":"415","line":94,"column":22,"nodeType":"324","messageId":"325","endLine":94,"endColumn":35},{"ruleId":"369","severity":1,"message":"416","line":114,"column":3,"nodeType":"371","endLine":114,"endColumn":5,"suggestions":"417"},{"ruleId":"369","severity":1,"message":"418","line":138,"column":3,"nodeType":"371","endLine":138,"endColumn":5,"suggestions":"419"},{"ruleId":"384","severity":1,"message":"385","line":143,"column":95,"nodeType":"386","messageId":"387","endLine":143,"endColumn":97},{"ruleId":"322","severity":1,"message":"332","line":154,"column":10,"nodeType":"324","messageId":"325","endLine":154,"endColumn":16},{"ruleId":"322","severity":1,"message":"420","line":7,"column":8,"nodeType":"324","messageId":"325","endLine":7,"endColumn":18},{"ruleId":"322","severity":1,"message":"421","line":8,"column":8,"nodeType":"324","messageId":"325","endLine":8,"endColumn":19},{"ruleId":"322","severity":1,"message":"422","line":9,"column":8,"nodeType":"324","messageId":"325","endLine":9,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":52,"column":7,"nodeType":"425","messageId":"426","endLine":120,"endColumn":6},{"ruleId":"318","replacedBy":"427"},{"ruleId":"320","replacedBy":"428"},{"ruleId":"322","severity":1,"message":"429","line":6,"column":10,"nodeType":"324","messageId":"325","endLine":6,"endColumn":15},{"ruleId":"322","severity":1,"message":"430","line":7,"column":8,"nodeType":"324","messageId":"325","endLine":7,"endColumn":18},{"ruleId":"322","severity":1,"message":"392","line":9,"column":8,"nodeType":"324","messageId":"325","endLine":9,"endColumn":13},{"ruleId":"322","severity":1,"message":"340","line":50,"column":13,"nodeType":"324","messageId":"325","endLine":50,"endColumn":18},{"ruleId":"322","severity":1,"message":"431","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":23},{"ruleId":"322","severity":1,"message":"346","line":2,"column":46,"nodeType":"324","messageId":"325","endLine":2,"endColumn":52},{"ruleId":"322","severity":1,"message":"382","line":5,"column":35,"nodeType":"324","messageId":"325","endLine":5,"endColumn":46},{"ruleId":"322","severity":1,"message":"383","line":6,"column":10,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"322","severity":1,"message":"338","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":7,"column":8,"nodeType":"324","messageId":"325","endLine":7,"endColumn":17},{"ruleId":"322","severity":1,"message":"432","line":9,"column":9,"nodeType":"324","messageId":"325","endLine":9,"endColumn":15},{"ruleId":"322","severity":1,"message":"433","line":9,"column":17,"nodeType":"324","messageId":"325","endLine":9,"endColumn":26},{"ruleId":"322","severity":1,"message":"434","line":17,"column":12,"nodeType":"324","messageId":"325","endLine":17,"endColumn":23},{"ruleId":"322","severity":1,"message":"435","line":17,"column":24,"nodeType":"324","messageId":"325","endLine":17,"endColumn":38},{"ruleId":"322","severity":1,"message":"343","line":18,"column":11,"nodeType":"324","messageId":"325","endLine":18,"endColumn":16},{"ruleId":"322","severity":1,"message":"337","line":1,"column":9,"nodeType":"324","messageId":"325","endLine":1,"endColumn":14},{"ruleId":"322","severity":1,"message":"323","line":1,"column":24,"nodeType":"324","messageId":"325","endLine":1,"endColumn":29},{"ruleId":"322","severity":1,"message":"436","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":16},{"ruleId":"322","severity":1,"message":"437","line":99,"column":10,"nodeType":"324","messageId":"325","endLine":99,"endColumn":17},{"ruleId":"322","severity":1,"message":"438","line":130,"column":12,"nodeType":"324","messageId":"325","endLine":130,"endColumn":18},{"ruleId":"322","severity":1,"message":"439","line":130,"column":19,"nodeType":"324","messageId":"325","endLine":130,"endColumn":28},{"ruleId":"384","severity":1,"message":"440","line":149,"column":17,"nodeType":"386","messageId":"387","endLine":149,"endColumn":19},{"ruleId":"384","severity":1,"message":"385","line":161,"column":62,"nodeType":"386","messageId":"387","endLine":161,"endColumn":64},{"ruleId":"384","severity":1,"message":"385","line":172,"column":62,"nodeType":"386","messageId":"387","endLine":172,"endColumn":64},{"ruleId":"384","severity":1,"message":"385","line":186,"column":103,"nodeType":"386","messageId":"387","endLine":186,"endColumn":105},{"ruleId":"384","severity":1,"message":"385","line":187,"column":58,"nodeType":"386","messageId":"387","endLine":187,"endColumn":60},{"ruleId":"384","severity":1,"message":"385","line":202,"column":63,"nodeType":"386","messageId":"387","endLine":202,"endColumn":65},{"ruleId":"322","severity":1,"message":"332","line":225,"column":10,"nodeType":"324","messageId":"325","endLine":225,"endColumn":16},{"ruleId":"322","severity":1,"message":"441","line":225,"column":17,"nodeType":"324","messageId":"325","endLine":225,"endColumn":23},{"ruleId":"322","severity":1,"message":"442","line":229,"column":9,"nodeType":"324","messageId":"325","endLine":229,"endColumn":14},{"ruleId":"384","severity":1,"message":"440","line":535,"column":33,"nodeType":"386","messageId":"387","endLine":535,"endColumn":35},{"ruleId":"384","severity":1,"message":"385","line":546,"column":91,"nodeType":"386","messageId":"387","endLine":546,"endColumn":93},{"ruleId":"322","severity":1,"message":"378","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"443","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":15},{"ruleId":"322","severity":1,"message":"379","line":2,"column":17,"nodeType":"324","messageId":"325","endLine":2,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":2,"column":23,"nodeType":"324","messageId":"325","endLine":2,"endColumn":28},{"ruleId":"322","severity":1,"message":"380","line":2,"column":30,"nodeType":"324","messageId":"325","endLine":2,"endColumn":36},{"ruleId":"322","severity":1,"message":"356","line":5,"column":9,"nodeType":"324","messageId":"325","endLine":5,"endColumn":19},{"ruleId":"322","severity":1,"message":"380","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":16},{"ruleId":"322","severity":1,"message":"444","line":36,"column":11,"nodeType":"324","messageId":"325","endLine":36,"endColumn":18},{"ruleId":"322","severity":1,"message":"396","line":9,"column":17,"nodeType":"324","messageId":"325","endLine":9,"endColumn":25},{"ruleId":"322","severity":1,"message":"397","line":10,"column":11,"nodeType":"324","messageId":"325","endLine":10,"endColumn":25},{"ruleId":"322","severity":1,"message":"398","line":20,"column":13,"nodeType":"324","messageId":"325","endLine":20,"endColumn":39},{"ruleId":"322","severity":1,"message":"394","line":29,"column":16,"nodeType":"324","messageId":"325","endLine":29,"endColumn":20},{"ruleId":"399","severity":1,"message":"400","line":36,"column":37,"nodeType":"401","messageId":"402","endLine":36,"endColumn":39},{"ruleId":"322","severity":1,"message":"445","line":54,"column":18,"nodeType":"324","messageId":"325","endLine":54,"endColumn":30},{"ruleId":"322","severity":1,"message":"348","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":19},{"ruleId":"322","severity":1,"message":"349","line":4,"column":21,"nodeType":"324","messageId":"325","endLine":4,"endColumn":25},{"ruleId":"322","severity":1,"message":"350","line":4,"column":27,"nodeType":"324","messageId":"325","endLine":4,"endColumn":32},{"ruleId":"322","severity":1,"message":"351","line":4,"column":34,"nodeType":"324","messageId":"325","endLine":4,"endColumn":39},{"ruleId":"322","severity":1,"message":"352","line":4,"column":41,"nodeType":"324","messageId":"325","endLine":4,"endColumn":46},{"ruleId":"322","severity":1,"message":"353","line":4,"column":48,"nodeType":"324","messageId":"325","endLine":4,"endColumn":67},{"ruleId":"322","severity":1,"message":"354","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":14},{"ruleId":"322","severity":1,"message":"356","line":6,"column":9,"nodeType":"324","messageId":"325","endLine":6,"endColumn":19},{"ruleId":"322","severity":1,"message":"357","line":6,"column":21,"nodeType":"324","messageId":"325","endLine":6,"endColumn":33},{"ruleId":"322","severity":1,"message":"358","line":6,"column":34,"nodeType":"324","messageId":"325","endLine":6,"endColumn":48},{"ruleId":"322","severity":1,"message":"446","line":8,"column":9,"nodeType":"324","messageId":"325","endLine":8,"endColumn":16},{"ruleId":"322","severity":1,"message":"447","line":9,"column":9,"nodeType":"324","messageId":"325","endLine":9,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":14,"column":8,"nodeType":"324","messageId":"325","endLine":14,"endColumn":14},{"ruleId":"322","severity":1,"message":"363","line":69,"column":7,"nodeType":"324","messageId":"325","endLine":69,"endColumn":15},{"ruleId":"322","severity":1,"message":"364","line":79,"column":14,"nodeType":"324","messageId":"325","endLine":79,"endColumn":24},{"ruleId":"322","severity":1,"message":"365","line":97,"column":11,"nodeType":"324","messageId":"325","endLine":97,"endColumn":16},{"ruleId":"322","severity":1,"message":"377","line":5,"column":11,"nodeType":"324","messageId":"325","endLine":5,"endColumn":20},{"ruleId":"322","severity":1,"message":"377","line":6,"column":11,"nodeType":"324","messageId":"325","endLine":6,"endColumn":20},{"ruleId":"322","severity":1,"message":"377","line":100,"column":11,"nodeType":"324","messageId":"325","endLine":100,"endColumn":20},{"ruleId":"322","severity":1,"message":"448","line":4,"column":9,"nodeType":"324","messageId":"325","endLine":4,"endColumn":12},{"ruleId":"322","severity":1,"message":"397","line":7,"column":11,"nodeType":"324","messageId":"325","endLine":7,"endColumn":25},{"ruleId":"322","severity":1,"message":"398","line":17,"column":13,"nodeType":"324","messageId":"325","endLine":17,"endColumn":39},{"ruleId":"322","severity":1,"message":"394","line":26,"column":16,"nodeType":"324","messageId":"325","endLine":26,"endColumn":20},{"ruleId":"399","severity":1,"message":"400","line":34,"column":34,"nodeType":"401","messageId":"402","endLine":34,"endColumn":36},{"ruleId":"322","severity":1,"message":"361","line":45,"column":15,"nodeType":"324","messageId":"325","endLine":45,"endColumn":21},{"ruleId":"322","severity":1,"message":"445","line":48,"column":18,"nodeType":"324","messageId":"325","endLine":48,"endColumn":30},"no-native-reassign",["449"],"no-negated-in-lhs",["450"],"no-unused-vars","'Space' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Banner' is defined but never used.","'ForumCard' is defined but never used.","'orgname' is assigned a value but never used.","'orgUsername' is assigned a value but never used.","'orgPassword' is assigned a value but never used.","'Header' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'TagBox' is defined but never used.","'TabPane' is assigned a value but never used.","'style' is assigned a value but never used.","'adminStyle' is assigned a value but never used.","'loginStyle' is assigned a value but never used.","'image' is assigned a value but never used.","'noUsers' is assigned a value but never used.","'setNoUsers' is assigned a value but never used.","'Avatar' is defined but never used.","'Empty' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Label' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","'Plot' is defined but never used.","'EditFilled' is defined but never used.","'UserOutlined' is defined but never used.","'ExportOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'MainHeader' is defined but never used.","'Option' is assigned a value but never used.","'Box' is assigned a value but never used.","'Activity' is assigned a value but never used.","'createData' is defined but never used.","'theme' is assigned a value but never used.","'selectedAccounts' is assigned a value but never used.","'error' is assigned a value but never used.","'content' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.filter', 'props.location', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["451"],"React Hook useEffect has a missing dependency: 'forums'. Either include it or remove the dependency array. You can also do a functional update 'setForums(f => ...)' if you only need 'forums' in the 'setForums' call.",["452"],["449"],["450"],"'colorCode' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'LockOutlined' is defined but never used.","'KeyOutlined' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","'IconButton' is defined but never used.","'axios' is defined but never used.","'ChangeType' is assigned a value but never used.","'data' is assigned a value but never used.","'surveys' is assigned a value but never used.","'setCount' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getDiseases'. Either include it or remove the dependency array.",["453"],"'link' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Tag' is defined but never used.","'continents' is assigned a value but never used.","'setContinents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["455"],"'Background' is defined but never used.","'Background2' is defined but never used.","'Background3' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["449"],["450"],"'Paper' is defined but never used.","'Choropleth' is defined but never used.","'changeCenter' is assigned a value but never used.","'MyCard' is defined but never used.","'MyReplies' is defined but never used.","'showDetails' is assigned a value but never used.","'setShowDetails' is assigned a value but never used.","'Mappings' is defined but never used.","'regions' is assigned a value but never used.","'hidden' is assigned a value but never used.","'setHidden' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Footer' is assigned a value but never used.","'marks' is assigned a value but never used.","'Input' is defined but never used.","'replies' is assigned a value but never used.","'handleChange' is defined but never used.","'Request' is defined but never used.","'Survey' is defined but never used.","'Get' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},"Update the dependencies array to be: [props.filter, props.location, props.user]",{"range":"466","text":"467"},"Update the dependencies array to be: [forums, props.filter]",{"range":"468","text":"469"},"Update the dependencies array to be: [count, getDiseases]",{"range":"470","text":"471"},"Update the dependencies array to be: [questions]",{"range":"472","text":"473"},"Update the dependencies array to be: [expandSurvey]",{"range":"474","text":"475"},[1809,1811],"[props.filter, props.location, props.user]",[2055,2069],"[forums, props.filter]",[1788,1795],"[count, getDiseases]",[2183,2185],"[questions]",[2719,2721],"[expandSurvey]"]
>>>>>>> 2187326acfa788bbb1445d55dbd6ad4facc6c3bf
=======
[{"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js":"1","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js":"2","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js":"3","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js":"4","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/login.js":"5","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js":"6","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js":"7","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js":"8","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js":"9","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js":"10","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js":"11","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js":"12","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/api.js":"13","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js":"14","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js":"15","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js":"16","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js":"17","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js":"18","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js":"19","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js":"20","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js":"21","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js":"22","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js":"23","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js":"24","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js":"25","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js":"26","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js":"27","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js":"28","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/mainHeader.js":"29","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/survey.js":"30"},{"size":5086,"mtime":1622216456853,"results":"31","hashOfConfig":"32"},{"size":11167,"mtime":1622803462582,"results":"33","hashOfConfig":"32"},{"size":9813,"mtime":1622816109729,"results":"34","hashOfConfig":"32"},{"size":5354,"mtime":1622216456848,"results":"35","hashOfConfig":"32"},{"size":742,"mtime":1622216456846,"results":"36","hashOfConfig":"32"},{"size":18506,"mtime":1622816131029,"results":"37","hashOfConfig":"32"},{"size":4167,"mtime":1622818128822,"results":"38","hashOfConfig":"32"},{"size":1623,"mtime":1622216456236,"results":"39","hashOfConfig":"32"},{"size":1269,"mtime":1622216456234,"results":"40","hashOfConfig":"32"},{"size":6907,"mtime":1622805785834,"results":"41","hashOfConfig":"32"},{"size":5656,"mtime":1622216456852,"results":"42","hashOfConfig":"32"},{"size":5674,"mtime":1622216456853,"results":"43","hashOfConfig":"32"},{"size":2364,"mtime":1622308635504,"results":"44","hashOfConfig":"32"},{"size":3804,"mtime":1622216456847,"results":"45","hashOfConfig":"32"},{"size":5331,"mtime":1622216456848,"results":"46","hashOfConfig":"32"},{"size":12108,"mtime":1622216456235,"results":"47","hashOfConfig":"32"},{"size":4918,"mtime":1622216456847,"results":"48","hashOfConfig":"32"},{"size":2956,"mtime":1622815569896,"results":"49","hashOfConfig":"32"},{"size":7131,"mtime":1622804051884,"results":"50","hashOfConfig":"32"},{"size":10782,"mtime":1622817688988,"results":"51","hashOfConfig":"32"},{"size":19245,"mtime":1622216456850,"results":"52","hashOfConfig":"32"},{"size":556,"mtime":1622216456234,"results":"53","hashOfConfig":"32"},{"size":4172,"mtime":1622216456236,"results":"54","hashOfConfig":"32"},{"size":4338,"mtime":1622216456852,"results":"55","hashOfConfig":"32"},{"size":9300,"mtime":1622816073472,"results":"56","hashOfConfig":"32"},{"size":1025,"mtime":1622818041182,"results":"57","hashOfConfig":"32"},{"size":3774,"mtime":1622216456233,"results":"58","hashOfConfig":"32"},{"size":3139,"mtime":1622216456852,"results":"59","hashOfConfig":"32"},{"size":1818,"mtime":1622216456235,"results":"60","hashOfConfig":"32"},{"size":2297,"mtime":1622216456853,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"27rji0",{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js",[],["140","141"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js",["142","143","144","145","146","147","148","149"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import React, {useState} from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty, Space} from 'antd';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Legend, { Plot } from '../../controls/legend/legend';\nimport {EditFilled ,UserOutlined,ExportOutlined,UserAddOutlined} from '@ant-design/icons';\nimport MainHeader from '../../components/mainHeader';\nimport {Request} from '../request/request'\nimport {Survey} from '../survey/survey'\nconst {TabPane}=Tabs;\nconst {Option}=Select;\nconst {Header}=Layout;\n\nconst Box=(props)=>{\n    const [modalState,setModalState]=useState(false);\n    const [profileName,setProfileName]=useState(props.data.username)\n    const [profileKey,setProfileKey]=useState(props.data.key)\n    console.log(props.data.key)\n    return(\n        <>\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\n        </div>\n        <Modal\n        title='Edit Profile'\n        style={{ top: 100 }}\n        width={500}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n        footer={[\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\n              Delete\n            </Button>,\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\n              Revert\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\n            Save\n          </Button>\n          ]}\n      >\n                    <div style={{display:'flex',flexDirection:'column'}}>\n                    <label >Profile Name</label>\n                        <Input\n                        type='text'\n                        value={profileName}\n                        onChange={(e)=>setProfileName(e.target.value)}\n                        size='large'\n                        style={{width:'50%',minWidth:330,marginTop:5}}\n                        />  \n                        <label style={{marginTop:8}}>Profile Key</label>\n                        <Input\n                        type='text'\n                        value={profileKey}\n                        onChange={(e)=>setProfileKey(e.target.value)}\n                        size='large'\n                        style={{width:'45%',minWidth:300,marginTop:5}}\n                        />  \n                        </div>\n\n      </Modal>\n        \n        </>\n    );\n}\nconst Activity=()=>{\n    return(\n        <div style={{height:220,border:'1px solid #adadad',margin:20}}>\n\n        </div>\n    );\n}\n\n\nconst AdminPage =()=>{\n  const [logged,setLogged]=useState(false)\n    function createData(time, amount) {\n        return { time, amount };\n      }\n      \n  /*     const data = [\n        createData('00:00', 0),\n        createData('03:00', 300),\n        createData('06:00', 600),\n        createData('09:00', 800),\n        createData('12:00', 1500),\n        createData('15:00', 2000),\n        createData('18:00', 2400),\n        createData('21:00', 2400),\n        createData('24:00', undefined),\n      ] */\n    \n    const theme = useTheme();\n   // const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\n   // let selectedAccounts=selectedOrg.org_users;\n   const data ={\n    username:\"james\",\n    id:1\n  }\n   let selectedAccounts= [data]\n    return(\n      <div className='profilePage'>\n        {\n          logged?\n          \n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n              <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>ADMIN</h1>\n              <div style={{width:'80%'}}>\n                  <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto',backgroundColor:'white',padding:30,}}>\n                  <TabPane tab=\"Build Survey \" key=\"1\" >\n                        \n                        <Survey />\n                        \n                            \n                        </TabPane>\n                        \n                          <TabPane tab=\"Manage requests\" key=\"2\" >\n                        <Request/>   \n                          </TabPane>\n                        \n                          </Tabs>\n                        \n              </div>\n        </div>\n          \n          :\n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n\n              <Card  style={{height:200,width:400,borderRadius:25}}>\n                <Space size='middle' direction='vertical'>\n                 <h2> \n                   ADMIN LOGIN\n                 </h2>\n                  <div style={{display:'flex'}}>\n                  <Input placeholder='Enter admin key' size='large' type='text'  /><Button onClick={()=>setLogged(true)} type='primary' size='large'>Login</Button>\n                  </div>\n                  </Space>\n                 \n              </Card>\n            </div>\n        }\n        \n        </div>\n\n    );\n}\nexport default AdminPage;",["187","188"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/login.js",["189"],"import React, {useState} from 'react';\nimport OrgForm from '../../components/form';\nimport SignUpCard from '../../components/signUpCard';\nimport './styles.css'\n\nconst OrgLogin =()=>{\n    const image=require('../../assets/whiteGhana.png')\n    const [login,setLogin]=useState(true);\n    return(\n        <div className='login' style={{minHeight:'100vh',height:'auto',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                {\n                    login?\n                    <OrgForm onClick={() =>{setLogin(false)}}/> \n                    :\n                    <SignUpCard onClick={() =>{setLogin(true)}}/> \n                }\n                \n                              \n\n        </div>\n    );\n}\nexport default OrgLogin;\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js",["190","191","192","193","194"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js",["195","196","197","198"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js",["199"],"import React from 'react';\n\nconst TagBox=({onClick,...props})=>{\n    const colorCode='#adff2f50';\n    return(\n        \n        <div onClick={onClick} style={{flex:'25%',maxWidth:250,margin:20,height:'auto',minHeight:200,borderWidth:'3px',borderStyle:'solid',borderColor:'lightsteelblue',borderRadius:12,padding:25}}>\n           {props.disease?\n            <>\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.disease}</h4>\n            <p>\n                These are all the forums on {props.disease}\n            </p>\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\n            </div>\n            </>:\n            <>\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.location}</h4>\n            <p>\n                These are all the forums at {props.location}\n            </p>\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\n            </div>\n            \n            </>\n            }\n            \n        </div>\n    );\n}\nexport default TagBox;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js",["200","201","202","203","204","205","206","207","208","209","210"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {UserOutlined,LockOutlined,KeyOutlined} from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\n\n\n\nconst FormInput = ({\n    name,\n    type,\n    placeholder,\n    onChange,\n    className,\n    value,\n    error,\n    children,\n    label,\n    prefix,\n    ...props\n  }) => {\n    \n    return (\n      <React.Fragment>\n      \n        <Input\n          id={name}\n          type={type}\n          placeholder={placeholder}\n          onChange={onChange}\n          value={value}\n          className={className}\n          style={error=='' ? {border:'1-x solid black'}: {border: 'solid 1px red'}}\n        />\n        { error && <p>{ error }</p>}\n      </React.Fragment>\n    )\n  }\n  \n  FormInput.defaultProps = {\n    type: \"text\",\n    className: \"\"\n  }\n  \n  FormInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n    className: PropTypes.string,\n    value: PropTypes.any,\n    onChange: PropTypes.func.isRequired\n  }\n\nexport default FormInput;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js",["211","212","213","214","215","216","217","218"],"import React, { useState } from \"react\";\nimport { Input, Card, Space, Button, Avatar, Select, Form } from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport { UserOutlined, LockOutlined, KeyOutlined, MailOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport { IconButton } from \"@material-ui/core\";\nimport axios from 'axios'\nimport { orgSignUp, userSignUp } from \"../functions\";\nconst { Option } = Select;\nconst SignUpCard = ({ onClick, ...props }) => {\n\n  // The End User states\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // The Org states\n  const [orgName, setOrgName] = useState('');\n  const [orgEmail, setOrgEmail] = useState('');\n  const [orgPassword, setOrgPassword] = useState('');\n\n\n\n  //Type of sign Up for either org \n  //or end user\n  const [loginType, setLoginType] = useState('other');\n\n\n\n//Org Form Submission\n  const handleSubmit = (e) => {\n      orgSignUp(orgEmail,orgPassword,orgName);\n  }\n  //User Form Submission\n  const handleUserSubmit = (e) => {\n    userSignUp(email,password,username)\n  }\n\n  const ChangeType = () => {\n\n  }\n\n\n\n  return (\n    <Card style={{ flex: 0.28, width: 'min(95vw,100%)', border: '1px solid graysmoke', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: 15, backgroundColor: 'white', justifyContent: 'center' }}>\n      {\n        loginType === 'other' ?\n\n\n\n\n\n          //  This is the sign up form for the end users\n          <Form layout='vertical' onFinish={handleUserSubmit}>\n\n\n            <h1 style={{ fontSize: 30, fontWeight: 'bold', textAlign: 'left' }}>Sign Up</h1>\n\n\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}><h4 style={{ fontSize: 14, color: 'lightblue', textAlign: 'left', marginRight: 6, cursor: 'pointer' }} onClick={() => setLoginType('org')}>Org SignUp</h4><span style={{ color: 'blue' }}>/</span><h4 style={{ fontSize: 14, textAlign: 'left', color: '#8a2be290', marginLeft: 6, cursor: 'pointer' }} onClick={() => setLoginType('other')}>Other</h4></div>\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input\n                size=\"small\"\n                className='formInput'\n                value={username}\n                onChange={(e) => { setUsername(e.target.value) }}\n                placeholder=\"Enter your username\"\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[{ required: true, message: 'Please input your email!' }]}\n            >\n              <Input\n                size=\"small\"\n                className='formInput'\n                value={email}\n                onChange={(e) => { setEmail(e.target.value) }}\n                placeholder=\"Enter your email\"\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n\n              <Input.Password\n                size=\"small\"\n                value={password}\n                className='formInput'\n                onChange={(e) => { setPassword(e.target.value) }}\n                placeholder=\"Enter your password\"\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Button\n              size='small'\n              block\n              style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n              htmlType='submit'\n            >\n              Sign Up\n            </Button>\n\n          </Form>\n\n\n\n\n\n\n\n          :\n\n\n          //Org Sign Up Form\n\n\n\n\n\n\n\n\n\n\n\n          <Form layout='vertical' onFinish={handleSubmit}>\n\n            <h1 style={{ fontSize: 30, marginRight: 10, fontWeight: 'bold', textAlign: 'left' }}>Org Sign Up</h1>\n\n\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}><h4 style={{ fontSize: 14, color: '#8a2be290', textAlign: 'left', marginRight: 6, cursor: 'pointer' }} onClick={() => setLoginType('org')} >Org SignUp</h4><span style={{ color: 'blue' }}>/</span><h4 style={{ fontSize: 14, textAlign: 'left', color: 'lightblue', marginLeft: 6, cursor: 'pointer' }} onClick={() => setLoginType('other')}>Other</h4></div>\n            <Form.Item\n              label=\"Org Name\"\n              name=\"org_name\"\n              rules={[{ required: true, message: 'Please enter org name!' }]}\n            >\n              <Input\n                size=\"small\"\n                className='formInput'\n                value={orgName}\n                onChange={(e) => { setOrgName(e.target.value) }}\n                placeholder=\"Enter org name\"\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Org Email\"\n              name=\"org_email\"\n              rules={[{ required: true, message: 'Please enter org email!' }]}\n            >\n              <Input\n                size=\"small\"\n                value={orgEmail}\n                className='formInput'\n                onChange={(e) => { setOrgEmail(e.target.value) }}\n                placeholder=\"Enter org email\"\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Org Password\"\n              name=\"org_password\"\n              rules={[{ required: true, message: 'Please enter org password!' }]}\n            >\n              <Input.Password\n                size=\"small\"\n                className='formInput'\n                value={orgPassword}\n                onChange={(e) => { setOrgPassword(e.target.value) }}\n                placeholder=\"Enter org password\"\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              />\n            </Form.Item>\n            <Button\n              size='small'\n              block\n              style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n              htmlType='submit'\n            >\n              Sign Up\n            </Button>\n\n          </Form>\n\n      }\n\n      <Button onClick={onClick} size={30} type='link' style={{ color: 'lightseagreen', textDecorationStyle: 'solid', textDecorationColor: 'lightseagreen', textDecorationLine: 'underline', textDecorationWidth: 1 }}>Have an Account?</Button>\n    </Card>\n\n  );\n\n}\n\nexport default SignUpCard;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js",["219","220","221","222"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js",["223","224","225","226","227"],"import React,{useEffect,useState} from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\n\n\nexport const SurveyForm = () =>{\n   const [diseases,setDiseases] = useState([]);\n   const [dis,setDis] = useState(0);\n   const [count,setCount] = useState(0);\n   var data = [];\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n\n      const postquestions = async(body) =>{\n        var url = \"questions\";\n         data = await Post(url,body);\n         \n     \n     }\n\n\n      const onFinish = values => {\n       if (dis===0){\n         alert(\"You must choose a disease\");\n         return\n       }\n        values.questions.map(value=>{\n         \n          const body = {\n            disease: dis,\n            question:value.question,\n            Keyword:value.keyword,\n            type:value.type\n          }\n        \n          const bod = JSON.stringify(body)\n       \n          postquestions(bod)\n        })\n      };\n    \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n     \n      \n\n        }\n\n        function handleChanges(value) {\n         \n          setDis(value);\n  \n          }\n     \n        const getDiseases = async() =>{\n          var url = \"diseases\";\n           data = await Get(url);\n          setDiseases(data);\n         \n       \n       }\n\n        useEffect(()=>{\n            getDiseases();\n        \n        },[count])\n\n\n    return(\n       <>\n         \n\n               <Row>\n                   <Col>\n                 \n                   <Select placeholder=\"Disease\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChanges}>\n                     \n                   {diseases.map(disease =>{\n                           return( <Option value={disease.id}>{disease.name}</Option> \n                            )})}\n                  \n                        </Select>\n\n               \n                       \n                       \n                   </Col>\n               </Row> \n           \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"questions\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'question']}\n                           fieldKey={[field.fieldKey, 'question']}\n                           rules={[{ required: true, message: 'Missing question ' }]}\n                         >\n                           <Input placeholder=\"Input question here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'keyword']}\n                           fieldKey={[field.fieldKey, 'keyword']}\n                           rules={[{ required: true, message: 'Missing keyword ' }]}\n                         >\n                           <Input placeholder=\"Input keyword here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'type']}\n                           fieldKey={[field.fieldKey, 'type']}\n                           rules={[{ required: true, message: 'Missing type ' }]}\n                         >\n                              <Select placeholder=\"Select type\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChange}>\n                                    <Option value=\"string\">string</Option>\n                                    <Option value=\"boolean\">boolean</Option>\n                                    <Option value=\"number\">number</Option>\n                                    <Option value=\"radio\">radio</Option>\n                                    <Option value=\"list\">list</Option>\n                                    <Option value=\"listpairs\">listpairs</Option>\n                              </Select>\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Question\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n       </>\n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/api.js",["228","229","230","231","232","233","234","235","236","237","238","239"],"import firebase from 'firebase'\n\nconst REACT_APP_API_URL= 'http://localhost:1337'\n\nexport const Post = async(url,body,token) => {\n  const link = `${REACT_APP_API_URL}` + '/' + url;\n  \n  if (token){\n     console.log(body)\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'POST',\n      headers: {\n         'Authorization':`Bearer ${token}`,\n          'Content-Type': 'application/json',\n      },\n     body:body\n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      console.log(data)\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n  return response; \n  }\n  else{\n  \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'POST',\n      headers: {\n           \n          'Content-Type': 'application/json',\n      },\n     body:body\n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      console.log(data)\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n \n  return response; \n \n  }\n \n\n\n\n\n}\n\n\n\nexport const Get = async(url,token) => {\n  const link = `${REACT_APP_API_URL}` + '/' + url;\n  \n  if (token){\n    \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'GET',\n      headers: {\n         'Authorization':`Bearer ${token}`,\n          'Content-Type': 'application/json',\n      },\n  \n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n  return response; \n  }\n  else{\n  \n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\n      method: 'GET',\n      headers: {\n           \n          'Content-Type': 'application/json',\n      },\n    \n   })\n     \n   if(response.ok){\n      const data = await response.json()\n      return data\n  }\n\n  const errMessage = await response.text()\n  throw new Error(errMessage)\n\n\n  return response; \n \n  }\n \n\n\n\n\n}\n\n\n\nconst firebaseConfig = {\n   apiKey: \"AIzaSyAmewLzrI0U6MGDV0Tn5xBjpy2ZNeou4-Y\",\n   authDomain: \"noguchiidcs.firebaseapp.com\",\n   projectId: \"noguchiidcs\",\n   storageBucket: \"noguchiidcs.appspot.com\",\n   messagingSenderId: \"823238592225\",\n   appId: \"1:823238592225:web:8801b8d0d25394fb44d9a0\"\n };\n\n export default firebase.initializeApp(firebaseConfig);","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js",["240","241","242","243"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar,Layout, Result} from 'antd';\nimport \"antd/dist/antd.css\";\nimport '../../App.css';\nimport Headers from \"../../components/header\";\nimport Banner from \"../../components/banner\";\nimport MainHeader from \"../../components/mainHeader\";\n\nconst ProfilePage=()=>{\n    const [disability,setDisability]=useState(true);\n    const [orgname,setOrgname]=useState('GHANA EDUCATION SERVICE')\n    const [orgUsername,setOrgUsername]=useState('GeSNoguchi');\n    const [orgPassword,setOrgPassword]=useState('osemigor123');\n    const{Header}=Layout;\n    const mee=localStorage.getItem('current_user')\n    return(\n        <div className='profilePage'>\n            <MainHeader/>\n            {\n                mee?\n                <>\n                <Headers/>\n            <div className='profileMidSection'>\n            \n                    <Card className='proCard' bordered style={{flex:0.3,height:'auto',backgroundColor:'white',textAlign:'left',display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start',flexShrink:0,margin:20,/* boxShadow:'3px 3px 20px #00000010' */minWidth:'min(95vw,350px)'}}>\n                        <h1 style={{color:'black',fontSize:30}}>\n                         PROFILE\n                        </h1>\n                        <h3 style={{color:'#40404090'}}>\n                            Name\n                        </h3>\n                        <Input type='text' value={orgname} onChange={(e)=>{setOrgname(e.target.value)}} disabled={disability} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Username\n                        </h3>\n                        <Input type='text' value={orgUsername} disabled={disability} onChange={(e)=>{setOrgUsername(e.target.value)}} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Password\n                        </h3>\n                        <Input.Password type='password' value={orgPassword} disabled={disability} size='large' onChange={(e)=>{setOrgPassword(e.target.value)}} style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <Button type='primary' size='large' onClick={()=>{setDisability(!disability)}}  block style={{marginBottom:30,backgroundColor:'#6461ff'}}>{disability?'Edit Profile':'Save'}</Button>\n                        <Button type='primary' size='large' onClick={()=>{\n                            localStorage.removeItem('current_user');\n                            window.location.href='/';\n                            }} danger block>Logout</Button>\n\n                    </Card>\n                <Card className='banner proCard' style={{flex:0.5,margin:20,minWidth:'min(95vw,350px)'}}>\n                    <h1>Take A Disease Survey</h1>\n                    <Button className='bannerButton' onClick={()=>{window.location.href='/entry';}}>Start</Button>\n                </Card>\n                \n            </div>\n            \n                \n\n                \n                </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title=\"403\"\n                \n                    subTitle=\"Sorry, you are not authorized to access this page.\"\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n       </div>     \n    );\n}\nexport default ProfilePage;",["244","245"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js",["246","247","248","249","250","251","252","253","254"],"import { Layout,Card,Table, Tag, Space, Select } from 'antd';\nimport React,{useState,useEffect} from 'react';\nimport ForumList from '../../components/forumList';\nimport MainHeader from '../../components/mainHeader';\nimport { Plot,Plot2 } from '../../controls/legend/legend';\nimport axios from 'axios';\nimport qs from 'qs';\n\nconst {Option}=Select\n\nconst column2=[\n  {\n    title: 'Keyword',\n    dataIndex: 'keyword',\n    key: 'keyword',\n  \n  },\n  {\n    title: 'Data',\n    dataIndex: 'data',\n    key: 'data',\n    render:data=><div>\n      {\n          typeof(data)==='object'?\n          typeof(data[0])==='object'?\n          data.map(dat=>Object.values(dat)).join(' | ')\n          :\n          data.join(',')\n          :\n          data\n      }\n    </div>\n  \n  }\n]\nconst columns = [\n    {\n      title: 'Year',\n      dataIndex: 'year',\n      key: 'year',\n    \n    },\n    {\n      title: 'New Cases',\n      dataIndex: 'new',\n      key: 'new',\n    },\n    {\n      title: 'Active Cases',\n      dataIndex: 'active',\n      key: 'active',\n    },\n    {\n      title: 'Recovered',\n      key: 'recover',\n      dataIndex: 'recover',\n    },\n    {\n      title: 'Deaths',\n      key: 'deaths',\n      dataIndex: 'deaths',\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      year: '2020',\n      new: 32,\n      active: 100,\n      recover: 60,\n      deaths: 0,\n    },\n    {\n        key: '2',\n        year: '2019',\n        new: 32,\n        active: 120,\n        recover: 30,\n        deaths: 7,\n      },\n      {\n        key: '3',\n        year: '2018',\n        new: 32,\n        active: 150,\n        recover: 0,\n        deaths: 13,\n      },\n  ];\n\nconst Details=(props)=>{\n\n  const [continents, setContinents] =useState([]);\n  const [current, setCurrent] =useState([]);\n  const [expandSurvey, setExpandSurvey] =useState();\n  const [questions, setQuestions] =useState();\n\n  useEffect(() => {\n    async function fetchQuestions(){\n      await axios.get('http://localhost:1337/questions')\n      .then(\n        res =>{\n          if(res.data){\n            setQuestions(res.data)\n        }} )\n      .catch((error) => {\n        console.log(error);\n      })\n    }\n    fetchQuestions();\n   console.log(questions)\n    \n},[]);\n\n  useEffect(() => {\n    async function fetchSurvey(){\n      await axios.get('http://localhost:1337/surveys',\n      {\n        params:{\n          community:localStorage.getItem('expandedCommunity'),\n        },\n        paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\n      }\n    )\n      .then(\n        res =>{\n          if(res.data){\n            setExpandSurvey(res.data)\n        }} )\n      .catch((error) => {\n        console.log(error);\n      })\n    }\n    fetchSurvey();\n    console.log(expandSurvey)\n    \n},[]);\n\nlet selectedYear=localStorage.getItem('selectedYear');\nlet expandeds;\nif(selectedYear){\nlet filterByYearSelection=expandSurvey?expandSurvey.filter(exsurvey=>exsurvey.ActualSurveyDate==selectedYear):null;\nconsole.log(filterByYearSelection)\nexpandeds = filterByYearSelection?filterByYearSelection[0].answers:null;\n}else{\n  expandeds = expandSurvey?expandSurvey[0].answers:null;\n}\n\nlet years=expandSurvey?expandSurvey.map(exs=> exs.ActualSurveyDate):null\nconsole.log(expandSurvey)\nlet data2=expandeds?expandeds.map(expanded=> ({keyword:expanded.question.Keyword,data:expanded.answer})):null\nconsole.log(data2)\n  const {Header}=Layout;\n\n const handleChange=(value)=>{\n  let selectedSurvey=expandSurvey.filter(exs=>exs.ActualSurveyDate===value);\n  let ssanswers=selectedSurvey[0]?.answers\n  \n  let tableFormat=ssanswers?ssanswers.map(ssanswer=> ({keyword:ssanswer.question.Keyword,data:ssanswer.answer.toString()})):null\n  console.log(tableFormat)\n  setCurrent(tableFormat)\n }\n\n  return(\n      <div className='profilePage' style={{maxWidth:'100vw',backgroundColor:'white',width:'100%'}}>\n        <MainHeader/>\n        <div style={{width:'100%',marginTop:'10vh',padding:'0px 50px 50px 50px'}}>\n           <div style={{display:'flex',flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\n           <h1 style={{fontSize:50}}>{expandSurvey?expandSurvey[0].community.Community:null}</h1>\n          <Select placeholder='Change Year' style={{width:150}}  onChange={(value)=>{handleChange(value)}}>\n          \n            \n            {\n              years?\n                years.map(year=><Option key={year}>{year.slice(0,4)}</Option>)\n              :\n              null\n            }\n          </Select>\n           </div>\n            <h3 style={{textAlign:'left',color:'brown'}}>\n              Current Disease: Schistosomiasis\n            </h3>\n             {\n               current.length>0?\n               <Table bordered columns={column2} dataSource={current} size='middle'/>\n               :\n               <Table bordered columns={column2} dataSource={data2} size='middle'/>\n               \n               }\n            <Card  style={{minHeight:'40vh',marginTop:20,borderRadius:5,marginBottom:40}}>\n             <Plot2 yname='Prevalence(%)'/>\n            </Card>\n\n            <Table bordered columns={columns} dataSource={data} size='middle'/>\n            <div className='adminProfiles' style={{height:'40vh',width:'100%',overflowY:'scroll',marginTop:35}}>\n           \n                <ForumList/>\n           \n            </div>\n        </div>\n        </div>\n    );\n}\nexport default Details;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js",["255","256","257","258"],"import React, {useState,useEffect} from \"react\";\nimport { Input, Radio,Card, Space, Button ,message, InputNumber, Modal,Checkbox,Form,Select} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {PlusOutlined,ArrowUpOutlined,ArrowDownOutlined,MinusCircleOutlined ,ExclamationCircleOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nimport Background from '../assets/desktop4.png';\nimport Background2 from '../assets/desktop7.png';\nimport Background3 from '../assets/desktop3.png';\n\nconst {Option}=Select\nconst SurveyCard=(props)=>{\nconst [allAnswers,setAllAnswers]=useState([])\n const [questions,setQuestions]=useState([]);\n useEffect(() => {\n    axios.get('http://localhost:1337/questions')\n    .then(\n      res =>{\n        if(res.data){\n         let alls=res.data\n          setQuestions(res.data)\n          setAllAnswers(alls.map((all)=>({question:all.id,answer:[]}))) \n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\n const [point,setPoint]=useState(1);\n let current =questions.filter((question,index)=>index===point-1) \n let input;\n    const handleChange=e=>{\n       \n        let newArr=[...allAnswers]\n        newArr[point-1].answer=e.target.value\n       setAllAnswers(newArr) \n    \n    } \n    const handleNumberChange=value=>{\n        let newArr=[...allAnswers]\n        newArr[point-1].answer=value\n       setAllAnswers(newArr) \n    }  \n    const handleCheckChange=value=>{\n      let newArr=[...allAnswers]\n      newArr[point-1].answer=value\n      setAllAnswers(newArr) \n\n      console.log(allAnswers)\n    }\n    \n    const handleFinish=(values)=>{\n      {\n                \n        if(point===questions.length){\n          if(current[0]?.type==='radiolist'||current[0]?.type==='listpairs'||current[0]?.type==='listselect'){\n            console.log(values)\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n          }\n            Modal.confirm({\n                title: 'Submit Survey',\n                content: 'Do you want to submit the survey?',\n                icon: <ExclamationCircleOutlined />,\n                onOk() {\n                  axios.post('http://localhost:1337/surveys',{\n                      surveyUID:props.surveyUID,\n                      org_user:JSON.parse(localStorage.getItem('userAndjwt')).user.id,\n                      disease:1,\n                      ActualSurveyDate:props.asDate,\n                      community:props.community,\n                      answers:allAnswers\n                       \n                  }).then(res =>{\n                        if(res.data){\n                            console.log(res.data)\n                            message.success('Survey Filled Successfully');\n                            window.location.href='/entry'\n                        }}\n\n                  )\n                  .catch((error) => {\n                    console.log(error);\n                    message.error('Entry Unsuccessful')\n                  })\n                },\n                centered:true,\n                onCancel() {\n                  console.log('Cancel');\n                },\n                cancelText:'No',\n                okText:'Yes'\n              });\n\n        }else if(current[0]?.type==='listpairs'){\n            console.log(values)\n\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n            setPoint(point+1)\n        }else if(current[0]?.type==='listselect'){\n          console.log(values)\n          let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }else if(current[0]?.type==='radiolist'){\n        console.log(values)\n        let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }\n        else {setPoint(point+1)}\n    }\n    }\n    \n  if (current[0]?.type==='boolean') {\n      input=\n      <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n      <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n        <Radio.Button value='yes'>True</Radio.Button>\n        <Radio.Button value='no'>False</Radio.Button>\n      </Radio.Group>\n      </Form.Item>\n  } else if(current[0]?.type==='check'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Checkbox.Group onChange={handleCheckChange} >\n            {current[0]?.options.map(\n              (option,index)=><Checkbox key={index} style={{ lineHeight: '32px'}} value={option}>{option}</Checkbox>\n            )}\n        </Checkbox.Group>\n    </Form.Item>\n      \n  }else if(current[0]?.type==='radio'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n          <Radio.Button value='good'>Good</Radio.Button>\n          <Radio.Button value='bad'>Bad</Radio.Button>\n          <Radio.Button value='poor'>Poor</Radio.Button>\n        </Radio.Group>\n    </Form.Item>\n      \n  } else if(current[0]?.type==='number'){\n      input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><InputNumber onChange={handleNumberChange} value={allAnswers[point-1]?.answer}    style={{marginBottom:15}}  size='large' min={0}/></Form.Item>\n}else if(current[0]?.type==='listpairs'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Input placeholder={secondpart} />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='listselect'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='radiolist'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                          <Radio.Group  style={{marginBottom:15}}  size='large'>\n                            <Radio.Button value='increasing'><ArrowUpOutlined/></Radio.Button>\n                            <Radio.Button value='decreasing'><ArrowDownOutlined/></Radio.Button>\n                          </Radio.Group>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else{\n    input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><Input  onChange={handleChange} value={allAnswers[point-1]?.answer}   style={{marginBottom:15}}  type={current[0]?.type} size='large' /></Form.Item>\n  };\n    return(\n        <>\n         <h1 style={{fontSize:'14em',lineHeight:0.4,color:'lightgrey',opacity:0.2,fontWeight:'bolder'}}>\n           {point>9?point:'0'+point}\n        </h1>\n           <Form onFinish={handleFinish}  style={{width:'100%'}}>\n            <Card  \n              actions={[\n                <Button type='default' size='large' style={{borderRadius:15}} onClick={()=>{point!==1 ? setPoint(point-1):setPoint(point);\n                 }}>Back</Button>,\n                <Button type='primary' size='large'   /* disabled */ style={{borderRadius:15}} htmlType='submit' >{point===questions.length?'Finish':'Next'}</Button>\n                ]}\n\n            >\n                <Space direction='vertical' size='large'>\n                <h1 style={{fontSize:'max(13px,1vw)',wordWrap:'break-word',textTransform:'uppercase',textAlign:'center'}}>{current[0]?.question}</h1>\n                {input}\n                </Space>\n\n\n            </Card>\n            </Form>\n      </>  \n    );\n};\nexport default SurveyCard;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js",["259","260","261","262","263"],"import React from 'react';\nimport L from 'leaflet';\nimport {useMap, MapContainer, Marker,TileLayer,Popup} from 'react-leaflet';\n/* import Boundary from '../../controls/boundary/boundary';\n */import 'leaflet/dist/leaflet.css';\nimport { Paper} from '@material-ui/core'\nimport Choropleth from 'react-leaflet-choropleth'\nimport africa from './../../controls/boundary/africa.geo.json'\nimport axios from 'axios'\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Drawer,List,Button} from 'antd';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction ChangeView({ center, zoom }) {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n}\n\n\n\n\n\n\n\nexport class Mapp extends React.Component {\n  state={\n        lat:7.946527,\n        lng: -1.023194,\n        zoom: 3,\n        json:africa,\n        open:false,\n        activeMarker:{}\n      }\n  \n      \n      \n    \n      \n    render() {\n      console.log(this.props.markers)\n      const style = {\n        fillColor: '#F28F3B',\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.5\n    };\n    const changeCenter=()=>{\n      this.setState(() => ({\n        lat:51.505, \n        \n        lng:-0.09\n      }));\n      console.log(this.state.lat,this.state.lng)\n    }\n      \n    let showingFilter=this.props.markers.map(marker=>marker.answers.filter( answer=>answer.question.Keyword==='Population'||answer.question.Keyword==='Schistosomiasis Prevalence'||answer.question.Keyword==='Schistosomiasis Control Approaches'||answer.question.Keyword==='Stakeholders and Activities'))\n\n    let prevalence=this.props.markers.map(marker=>marker.answers.filter(ans=>ans.question.Keyword==='Schistosomiasis Prevalence'))\n    let prevv=prevalence[0]\n      return (\n      \n        <MapContainer center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} scrollWheelZoom={false} >\n          <ChangeView center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} /> \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url='https://a.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          /> \n          {\n          this.props.markers.map(marker => \n          <Marker   key={marker.id} position={[marker.community.location.lat, marker.community.location.long]}>\n               <Drawer\n                title=\"Details\"\n                placement=\"right\"\n                width=\"40%\"\n                closable={true}\n                onClose={() => this.setState(() => ({\n                  open:false\n                }))}\n                visible={this.state.open}\n              >\n            <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}}  >\n            <h1 style={{textAlign:'left'}}>Recorded for {marker.community.Community}</h1>\n            <span style={{textAlign:'left',color:'slateblue'}}>{marker.published_at?.slice(0,10)}</span>\n            \n            <List\n            size=\"large\"\n            style={{width:'100%'}}\n            dataSource={showingFilter[0]}\n            renderItem={mark => <List.Item >\n            <h3 style={{textAlign:'left'}}>{mark.question.Keyword}</h3>&nbsp;<span style={{textAlign:'left',color:'grey'}}>{\n\n                    typeof(mark.answer)==='object'?\n                      typeof(mark.answer[0])==='object'?\n                        mark.answer.map(dat=>Object.values(dat)).join(' | ')\n                      :\n                        mark.answer.join(',')\n                    :\n                    mark.answer\n\n            }</span>\n            </List.Item>} \n          />\n    \n              <Button block size='large' onClick={()=>{\n               \n                localStorage.setItem('expandedCommunity',marker.community.id)\n                localStorage.setItem('selectedYear',marker.ActualSurveyDate)\n                window.location.href='/details'\n              }}  >See More</Button>\n        </div>\n        \n      </Drawer>\n            <Popup>\n              <h3>{marker.community.Community}</h3>\n              <h1>\n                {\n                  prevv[0]?.answer\n                }\n              </h1>\n              <Button variant='outlined' onClick={() => {\n                 console.log(prevalence[0].id)\n                this.setState(() => ({open:true}))\n                \n                }} >View Details</Button>\n            </Popup>\n          </Marker>)\n          }\n       \n        </MapContainer>\n       \n     \n  \n      );\n    }\n  }","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js",["264","265"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js",["266","267","268","269","270","271"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js",["272","273","274","275","276","277","278","279"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import {Modal, Button, Space,List ,Layout,Row,Col, Card,Slider,Drawer} from 'antd'\nimport React ,{useState,useEffect} from 'react';\nimport {Paper,Badge,Select,MenuItem,Typography,FormControl,InputLabel} from '@material-ui/core';\nimport axios from 'axios';\nimport Mappings, { Mapp } from '../Map/map'\nimport './home.css'\nimport MainHeader from '../../components/mainHeader';\n\nconst data=[\n    {\n        question:'Name Of Comunity',\n        answer:'Accra',\n     \n    },\n    {\n        question:'Community Location',\n        answer:'1.00,3.560',\n       \n    },\n    {\n        question:'Population',\n        answer:'10,000',\n    },\n]\n\n\nconst Home=()=>{\n  const [markers,setMarkers]=useState([])\n  const [diseases,setDiseases]=useState([])\n    useEffect(() => {\n      async function fetchDiseases(){\n        await axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n\n      }\n      fetchDiseases();\n        \n    },[]);\n    const [surveys,setSurveys]=useState([])\n    useEffect(() => {\n      async function fetchSurveys(){\n        await axios.get('http://localhost:1337/surveys')\n        .then(\n          res =>{\n            if(res.data){\n\n              setSurveys(res.data.filter(dat=>dat.evaluated===true))\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n\n      }\n      fetchSurveys();\n        \n    },[]);\n    const [continents, setContinents] =useState([]);\n    useEffect(() => {\n      async function fetchContinents(){\n        await axios.get('http://localhost:1337/continents')\n        .then(\n          res =>{\n            if(res.data){\n              setContinents(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n      fetchContinents();\n      \n  },[]);\n  \n    const [countries, setCountries] =useState([]);\n    useEffect(() => {\n      async function fetchCountries(){\n        await axios.get('http://localhost:1337/countries')\n        .then(\n          res =>{\n            if(res.data){\n              setCountries(res.data)\n            \n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n\n      fetchCountries();\n      \n  },[]);\n  const [regions, setRegions] =useState([]);\n    useEffect(() => {\n      async function fetchRegions(){\n        await axios.get('http://localhost:1337/countries')\n        .then(\n          res =>{\n            if(res.data){\n              setRegions(res.data)\n            \n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n\n      fetchRegions();\n      \n  },[]);\n  const [districts, setDistricts] =useState([]);\n  useEffect(() => {\n  axios.get('http://localhost:1337/districts')\n  .then(\n    res =>{\n      if(res.data){\n        console.log(res.data)\n        setDistricts(res.data)\n    }} )\n  .catch((error) => {\n    console.log(error);\n  })\n},[]);\n    const [hidden,setHidden]=useState(true);\n   const [state, setState] = useState({\n    isPaneOpen: false,\n    isPaneOpenLeft: false,\n    visible:false,\n    secondPaneOpen:false,\n    thirdPaneOpen:false\n  });\n  const [continent, setContinent] =useState('');\n  const [center, setCenter] =useState({});\n  const [zoom, setZoom] =useState();\n  const [country, setCountry] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [year,setYear]=useState(2020)\n    const [disease, setDisease] =useState(``);\n    const handleChange = (event) => {\n      setDisease(event.target.value);\n      let byYears;\n      \n      if(country!=''){\n        let count=countries.filter(country=>country.name===country);\n        let rejiin=count[0]?.regions\n        let id=rejiin?.map(rej=>rej.id)\n        let dis=id?districts.filter(district=>id.includes(district.region.id)):[]\n        let comms=dis?.map(di=>di.communities)\n      if(markers.length>0){\n        let oldMarkers=markers;\n        if(comms.length>0){\n          let commIds=comms[0]?.map(comm=>comm.id)\n          let byComms=oldMarkers.filter(oldMarker=>commIds.includes(oldMarkers.community.id))\n          byYears=byComms.filter(byComm=>byComm.ActualSurveyDate.includes(year))\n          setMarkers(byYears.filter(byYear=>byYear.disease.id==event.target.value))\n        }else{\n          setMarkers([])\n        }\n        \n      }else{\n        if(comms.length>0){\n          let commIds=comms[0]?.map(comm=>comm.id)\n          let byComms=surveys.filter(survey=>commIds.includes(survey.community.id))\n          byYears=byComms.filter(byComm=>byComm.ActualSurveyDate.includes(year))\n          console.log(byYears)\n          setMarkers(byYears.filter(byYear=>byYear.disease.id==event.target.value))\n        }else{\n          setMarkers([])\n        }\n      }\n    }else{\n      setMarkers([])\n    }\n      \n    \n  };\n  const handleContinent = (event) => {\n    setContinent(event.target.value);\n    localStorage.removeItem('currentContinent')\n    localStorage.setItem('currentContinent',JSON.stringify(continents.filter(continent=>continent.name==event.target.value)))\n    let contt=continents.filter(continent=>continent.name==event.target.value)\n    setFilteredCountries(countries.filter(country=>country.continent.name===event.target.value))\n    let cent=contt[0]?.center\n    setCountry('')\n    setCenter(cent)\n    setZoom(contt[0]?.zoom)\n    setMarkers([])\n\n};\nconst handleCountry=(event)=>{\n    setCountry(event.target.value);\n    let count=countries.filter(country=>country.name===event.target.value);\n    setCenter(count[0]?.center)\n    setZoom(count[0]?.zoom)\n    if(disease){\n      let yearSurveys=surveys.filter(survey=>survey.disease.id==disease)\n      let rejiin=count[0]?.regions\n        \n      let id=rejiin.map(rej=>rej.id)\n      let dis=districts.filter(district=>id.includes(district.region.id))\n      \n      let comms=dis.map(di=>di.communities)\n      \n      if(comms.length>0){\n        let commIds=comms[0]?.map(comm=>comm.id)\n        let byCommIds=yearSurveys?.filter(yearSurvey=>commIds.includes(yearSurvey.community.id))\n      console.log(byCommIds)\n      setMarkers(byCommIds?.filter(byCommId=>byCommId.ActualSurveyDate.includes(year)))\n      }else{\n        setMarkers([])\n      }\n      \n    }\n    \n\n}\n\n \n  const {Header,Footer}=Layout;\n\n  \n \n  const marks = {\n    2015: '2015',\n    2016: '2016',\n    2017: '2017',\n    2018:'2018',\n    2019:'2019',\n    2020:'2020',\n    2021:'2021'\n\n  };\n  console.log(markers)\n\n    return(\n      <div>\n        <Drawer\n        title=\"Details\"\n        placement=\"right\"\n        width='90%'\n        closable={true}\n        onClose={() => setState({ thirdPaneOpen: false })}\n        visible={state.thirdPaneOpen}\n      >\n        <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}} contenteditable >\n            <h1 style={{textAlign:'left'}}>Recorded for Accra</h1>\n            <span style={{textAlign:'left'}}>20th Nov 2019</span>\n            \n            <List\n            size=\"large\"\n            style={{width:'100%'}}\n            dataSource={data}\n            renderItem={dat => <List.Item >\n            <h3 style={{textAlign:'left'}}>{dat.question}:<span style={{textAlign:'left',color:'grey'}}>{dat.answer}</span></h3>\n            </List.Item>}\n          />\n    \n\n        </div>\n\n      </Drawer>\n         \n      <Row style={{height:\"5vh\"}}>\n      <Col xs={24}><MainHeader/></Col>\n      </Row>\n      <Col xs={24} md={0} style={{marginTop:35}}>\n      <Row  style={{height:'20vh'}} justify='center'  >\n        \n        <Col xs={10} md={0} style={{height:'100%'}} >\n        <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                <b>Total Cases</b>\n                <h1 style={{color:'red',fontWeight:'bold'}}>6093</h1>\n        </Card>\n        </Col>\n        <Col xs={10} md={0} style={{height:'100%'}}>\n          <Row style={{height:'50%'}}>\n              <Col xs={24} md={0} style={{height:'100%'}}>\n                <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                  <span>Active</span>\n                 <h3 style={{color:'red'}}>5093</h3>\n                </Card>\n              </Col>\n          </Row>\n          <Row style={{height:'50%'}}>\n            <Col xs={24} md={0} style={{height:'100%'}}>\n              <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n              <span>Recovered</span>\n                <h3 style={{color:'seagreen'}}>1000</h3>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n       \n      </Row>\n      </Col>\n    \n      <Row style={{padding:\"10px 0\"}} sm={0}>\n      <Col xs={18} md={0} style={{flex:\"0 0 64%\",paddingRight:\"5px\"}}>\n       <Button onClick={() => setState({ isPaneOpenLeft: !state.isPaneOpenLeft })} style={{fontSize:\"12px\"}}>\n         Change Disease/Location\n       </Button>\n      \n      </Col>\n      <Col xs={6} md={0}>\n      <Button onClick={()=>setState({thirdPaneOpen:!state.thirdPaneOpen})} style={{fontSize:\"12px\"}}>\n         View Details \n       </Button>\n      </Col>\n      <Drawer\n      title=\"Change Disease/Location\"\n      placement=\"bottom\"\n      height='50%'\n      closable={true}\n      onClose={() => setState({ isPaneOpenLeft: false })}\n      visible={state.isPaneOpenLeft}\n      >\n       \n        <div style={{zIndex:10000000000}}>\n        <div style={{display:'flex',alignSelf:'center',marginTop:15,flexDirection:'column',height:'20vh',justifyContent:'space-between',alignItems:'center'}}>\n        {diseases?\n        <FormControl style={{width:'80%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Disease'\n        \n          value={disease}\n          onChange={handleChange}\n        >\n          {\n            diseases.map((disease,index)=><MenuItem key={index} value={disease.id}>{disease.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {continents?\n         <FormControl style={{width:'80%',margin:2}}>\n         <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Continent'\n     \n          value={continent}\n          onChange={handleContinent}\n        >\n          {\n            continents.map((continent,index)=><MenuItem key={index} value={continent.name}>{continent.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {filteredCountries?\n        <FormControl style={{width:'80%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={country}\n          \n          onChange={handleCountry}\n        >\n          {\n            filteredCountries.map((filteredCountry,index)=><MenuItem key={index} value={filteredCountry.name}>{filteredCountry.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n                 <Select/>\n          </FormControl>\n         \n        }\n       <Button style={{marginTop:\"10px\"}} onClick={() => setState({ isPaneOpenLeft: !state.isPaneOpenLeft })}>\n         Done\n       </Button>\n        </div>\n       </div>\n      </Drawer>\n      </Row>\n   \n      \n     \n      <Row style={{height:'90vh'}}>\n        <Col xs={0} md={6} flex='250px'>\n      \n     \n        <Paper variant=\"outlined\"  style={{padding:15,margin:10}} >\n        <Typography style={{fontweight:'500',fontSize: 17,lineHeight:2,textAlign:'left'}} noWrap>\n            Total Confirmed Cases\n          </Typography>\n          <Typography style={{fontSize: 12,color:'grey',textAlign:'left'}} noWrap>\n            Updated 25 mins ago\n          </Typography>\n          <Typography variant='h3' style={{color:'red',textAlign:'left',lineHeight:1.5,}} noWrap>\n            6,092\n          </Typography>\n\n       <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Active Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={4133} max={9999} color=\"secondary\"  >\n          </Badge>\n         </div>  \n         <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Recorded Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={1733} max={9999} color=\"primary\"  >\n          </Badge>\n         </div>  \n         <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Fatal Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={31} max={9999} color=\"secondary\"  >\n          </Badge>\n         </div>  \n         \n\n        </Paper>\n      \n       \n        <div style={{display:'flex',alignSelf:'center',marginTop:15,flexDirection:'column',height:'18vh',justifyContent:'space-between',alignItems:'center'}}>\n        {diseases?\n        <FormControl style={{width:'90%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Disease'\n        \n          value={disease}\n          onChange={handleChange}\n        >\n          {\n            diseases.map((disease,index)=><MenuItem key={index} value={disease.id}>{disease.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {continents?\n         <FormControl style={{width:'90%',margin:2}}>\n         <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Continent'\n     \n          value={continent}\n          onChange={handleContinent}\n        >\n          {\n            continents.map((continent,index)=><MenuItem key={index} value={continent.name}>{continent.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {filteredCountries?\n        <FormControl style={{width:'90%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={country}\n          \n          onChange={handleCountry}\n        >\n          {\n            filteredCountries.map((filteredCountry,index)=><MenuItem key={index} value={filteredCountry.name}>{filteredCountry.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n                 <Select/>\n          </FormControl>\n         \n        }\n\n        \n\n        </div>\n       \n       \n\n        </Col>\n\n        <Col  flex='auto' style={{position:'relative'}}>       \n                   <Mapp center={center} markers={markers} zoom={zoom} onClick={()=>setState({secondPaneOpen:!state.secondPaneOpen})}/>  \n                  <div style={{position:'absolute',bottom:'0.2%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center', left:1 ,margin:'50px', width:'min(300px,70vw)', backgroundColor:'white',padding:10,borderRadius:15}}>\n                    <h4 style={{textAlign:'left',width:'100%'}}>Year</h4>\n                    <Slider min={2015} max={2021} \n                    onChange={(value)=>{\n                      setYear(value);\n                      if(country!=''){\n                        let count=countries.filter(countr=>countr.name===country);\n                        let rejiin=count[0]?.regions\n                        let id=rejiin?.map(rej=>rej.id)\n                        let dis=id?districts.filter(district=>id.includes(district.region.id)):[]\n                        let comms=dis?.map(di=>di.communities)\n                        \n                        if(comms.length>0){\n                          let commIds=comms[0]?.map(comm=>comm.id)\n                          let byCommIds=surveys.filter(survey=>commIds.includes(survey.community.id))\n                          if(disease){\n                            let yearSurveys=byCommIds.filter(byCommId=>byCommId.disease.id==disease)\n                            setMarkers(yearSurveys?.filter(yearSurvey=>yearSurvey.ActualSurveyDate.includes(value)))\n                          }\n                        }else{\n                          setMarkers([])\n                        }\n                        }else{\n                          setMarkers([])\n                        }\n                        \n                      \n                      \n                      \n                      \n                      }} tooltipPlacement='bottom' tooltipVisible={true} style={{width:'100%',color:'wheat'}} defaultValue={2020}/>\n                  </div>  \n        </Col>\n        \n        \n\n        </Row>\n\n\n      \n            \n      </div>\n   \n    );\n    \n}\n    export default Home;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js",["297","298","299","300","301","302"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport {EditFilled ,UserOutlined} from '@ant-design/icons';\n\nconst Headers=()=>{\n    return(\n        <div className=\"headerSection\">\n            \n                    <div style={{display:'flex',flexDirection:'column',alignItems:'start',margin:10}}>\n                    <Avatar size={90} icon={<UserOutlined/>}/>\n                    </div>\n                \n        </div>\n    );\n}\nexport default Headers;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js",["303","304"],"import React,{useState,useEffect} from 'react';\nimport ForumList from './forumList';\nimport { Button, Empty } from 'antd';\nimport {CloseOutlined} from '@ant-design/icons';\nimport TagBox from './tagBox';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport axios from 'axios'\nconst TagSet =(props)=>{\n    const [view,setView]=useState(false);\n    const selectedDiseaseTag=localStorage.getItem('diseaseTag');\n    const selectedLocationTag=localStorage.getItem('communityTag');\n    const [diseases,setDiseases]=useState([])\n    const [communities,setCommunities]=useState([])\n    useEffect(() => {\n        axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    useEffect(() => {\n        axios.get('http://localhost:1337/communities')\n        .then(\n          res =>{\n            if(res.data){\n              setCommunities(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    const replies = ['Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article'];\n    return(\n        <>\n        {props.disease?\n        <>\n        {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    diseases?\n                    <>\n                    {\n                        diseases.map(disease=><TagBox onClick={()=>{ setView(true);localStorage.setItem('diseaseTag',disease.id)  }} disease={disease.name} numberOfForums={disease.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n                {/* <TagBox onClick={()=>setView(true)} disease='Schistosomiasis'/>\n                <TagBox onClick={()=>setView(true)} disease='Cholera'/>\n                <TagBox onClick={()=>setView(true)} disease='Dysentry'/>\n                <TagBox onClick={()=>setView(true)} disease='Malaria'/>\n                <TagBox onClick={()=>setView(true)} disease='Diarrhoea'/> */}\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                {\n                    selectedDiseaseTag?\n                    <>\n                        <Avatar size='small'  style={{boxShadow:'2px 2px 2px  #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',color:'white',backgroundColor:'darkgreen',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                        <ForumList filter={selectedDiseaseTag} />\n                    </>\n                    :\n                    <Empty/>\n                }\n                \n\n            </div>\n\n        \n        }\n        </>\n        :\n\n        <>\n         {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    communities?\n                    <>\n                    {\n                        communities.map(community=><TagBox onClick={()=>{ setView(true);localStorage.setItem('communityTag',community.id)  }} location={community.Community} numberOfForums={community.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                <Avatar size='small'  style={{boxShadow:'3px 3px 2px #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',fontWeight:'bolder',color:'white',backgroundColor:'orange',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                <ForumList location={selectedLocationTag}/>\n\n            </div>\n\n        \n        }\n        </>\n    \n        \n        }\n        \n        </>\n    );\n}\nexport default TagSet","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js",["305","306","307","308","309","310"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js",["327"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js",["328","329"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js",["330","331","332","333","334","335","336"],"import React from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\nexport const DiseaseForm = () =>{\n\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n      const postdiseases = async(body) =>{\n        var url = \"diseases\";\n         const data = await Post(url,body);\n         \n     \n     }\n\n\n      const onFinish = values => {\n        console.log('Received values of form:', values);\n        values.diseases.map(value=>{\n          const body = {\n            name:value.disease,\n          \n          } \n          const bod = JSON.stringify(body)\n          postdiseases(bod)\n        })  \n      };\n    \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n        console.log(`selected ${value}`);\n        }\n\n\n    return(\n       <>\n         \n\n             \n           \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"diseases\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'disease']}\n                           fieldKey={[field.fieldKey, 'disease']}\n                           rules={[{ required: true, message: 'Missing disease ' }]}\n                         >\n                           <Input placeholder=\"Input disease here\" />\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Disease\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n       </>\n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/mainHeader.js",["337","338","339"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/survey.js",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"348","line":2,"column":55,"nodeType":"346","messageId":"347","endLine":2,"endColumn":63},{"ruleId":"344","severity":1,"message":"349","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":14},{"ruleId":"344","severity":1,"message":"350","line":8,"column":8,"nodeType":"346","messageId":"347","endLine":8,"endColumn":17},{"ruleId":"344","severity":1,"message":"351","line":78,"column":12,"nodeType":"346","messageId":"347","endLine":78,"endColumn":19},{"ruleId":"344","severity":1,"message":"352","line":79,"column":12,"nodeType":"346","messageId":"347","endLine":79,"endColumn":23},{"ruleId":"344","severity":1,"message":"353","line":80,"column":12,"nodeType":"346","messageId":"347","endLine":80,"endColumn":23},{"ruleId":"344","severity":1,"message":"354","line":81,"column":11,"nodeType":"346","messageId":"347","endLine":81,"endColumn":17},{"ruleId":"344","severity":1,"message":"355","line":1,"column":15,"nodeType":"346","messageId":"347","endLine":1,"endColumn":24},{"ruleId":"344","severity":1,"message":"356","line":2,"column":29,"nodeType":"346","messageId":"347","endLine":2,"endColumn":32},{"ruleId":"344","severity":1,"message":"357","line":2,"column":33,"nodeType":"346","messageId":"347","endLine":2,"endColumn":36},{"ruleId":"344","severity":1,"message":"358","line":2,"column":37,"nodeType":"346","messageId":"347","endLine":2,"endColumn":44},{"ruleId":"344","severity":1,"message":"359","line":2,"column":45,"nodeType":"346","messageId":"347","endLine":2,"endColumn":50},{"ruleId":"344","severity":1,"message":"360","line":5,"column":8,"nodeType":"346","messageId":"347","endLine":5,"endColumn":14},{"ruleId":"344","severity":1,"message":"350","line":6,"column":8,"nodeType":"346","messageId":"347","endLine":6,"endColumn":17},{"ruleId":"344","severity":1,"message":"361","line":11,"column":8,"nodeType":"346","messageId":"347","endLine":11,"endColumn":15},{"ruleId":"344","severity":1,"message":"362","line":12,"column":7,"nodeType":"346","messageId":"347","endLine":12,"endColumn":12},{"ruleId":"344","severity":1,"message":"363","line":14,"column":7,"nodeType":"346","messageId":"347","endLine":14,"endColumn":17},{"ruleId":"344","severity":1,"message":"364","line":15,"column":7,"nodeType":"346","messageId":"347","endLine":15,"endColumn":17},{"ruleId":"344","severity":1,"message":"365","line":105,"column":7,"nodeType":"346","messageId":"347","endLine":105,"endColumn":12},{"ruleId":"344","severity":1,"message":"366","line":107,"column":12,"nodeType":"346","messageId":"347","endLine":107,"endColumn":19},{"ruleId":"344","severity":1,"message":"367","line":107,"column":20,"nodeType":"346","messageId":"347","endLine":107,"endColumn":30},{"ruleId":"344","severity":1,"message":"354","line":110,"column":12,"nodeType":"346","messageId":"347","endLine":110,"endColumn":18},{"ruleId":"344","severity":1,"message":"368","line":3,"column":52,"nodeType":"346","messageId":"347","endLine":3,"endColumn":58},{"ruleId":"344","severity":1,"message":"369","line":3,"column":67,"nodeType":"346","messageId":"347","endLine":3,"endColumn":72},{"ruleId":"344","severity":1,"message":"370","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":19},{"ruleId":"344","severity":1,"message":"371","line":4,"column":21,"nodeType":"346","messageId":"347","endLine":4,"endColumn":25},{"ruleId":"344","severity":1,"message":"372","line":4,"column":27,"nodeType":"346","messageId":"347","endLine":4,"endColumn":32},{"ruleId":"344","severity":1,"message":"373","line":4,"column":34,"nodeType":"346","messageId":"347","endLine":4,"endColumn":39},{"ruleId":"344","severity":1,"message":"374","line":4,"column":41,"nodeType":"346","messageId":"347","endLine":4,"endColumn":46},{"ruleId":"344","severity":1,"message":"375","line":4,"column":48,"nodeType":"346","messageId":"347","endLine":4,"endColumn":67},{"ruleId":"344","severity":1,"message":"376","line":5,"column":8,"nodeType":"346","messageId":"347","endLine":5,"endColumn":14},{"ruleId":"344","severity":1,"message":"377","line":5,"column":18,"nodeType":"346","messageId":"347","endLine":5,"endColumn":22},{"ruleId":"344","severity":1,"message":"378","line":6,"column":9,"nodeType":"346","messageId":"347","endLine":6,"endColumn":19},{"ruleId":"344","severity":1,"message":"379","line":6,"column":21,"nodeType":"346","messageId":"347","endLine":6,"endColumn":33},{"ruleId":"344","severity":1,"message":"380","line":6,"column":34,"nodeType":"346","messageId":"347","endLine":6,"endColumn":48},{"ruleId":"344","severity":1,"message":"381","line":6,"column":49,"nodeType":"346","messageId":"347","endLine":6,"endColumn":64},{"ruleId":"344","severity":1,"message":"382","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":18},{"ruleId":"344","severity":1,"message":"383","line":11,"column":8,"nodeType":"346","messageId":"347","endLine":11,"endColumn":14},{"ruleId":"344","severity":1,"message":"354","line":12,"column":8,"nodeType":"346","messageId":"347","endLine":12,"endColumn":14},{"ruleId":"344","severity":1,"message":"384","line":14,"column":7,"nodeType":"346","messageId":"347","endLine":14,"endColumn":10},{"ruleId":"344","severity":1,"message":"385","line":67,"column":7,"nodeType":"346","messageId":"347","endLine":67,"endColumn":15},{"ruleId":"344","severity":1,"message":"386","line":78,"column":14,"nodeType":"346","messageId":"347","endLine":78,"endColumn":24},{"ruleId":"344","severity":1,"message":"387","line":94,"column":11,"nodeType":"346","messageId":"347","endLine":94,"endColumn":16},{"ruleId":"344","severity":1,"message":"388","line":101,"column":8,"nodeType":"346","messageId":"347","endLine":101,"endColumn":24},{"ruleId":"340","replacedBy":"389"},{"ruleId":"342","replacedBy":"390"},{"ruleId":"344","severity":1,"message":"365","line":7,"column":11,"nodeType":"346","messageId":"347","endLine":7,"endColumn":16},{"ruleId":"344","severity":1,"message":"368","line":1,"column":44,"nodeType":"346","messageId":"347","endLine":1,"endColumn":50},{"ruleId":"344","severity":1,"message":"369","line":1,"column":80,"nodeType":"346","messageId":"347","endLine":1,"endColumn":85},{"ruleId":"344","severity":1,"message":"361","line":66,"column":12,"nodeType":"346","messageId":"347","endLine":66,"endColumn":19},{"ruleId":"344","severity":1,"message":"391","line":102,"column":11,"nodeType":"346","messageId":"347","endLine":102,"endColumn":16},{"ruleId":"344","severity":1,"message":"392","line":106,"column":11,"nodeType":"346","messageId":"347","endLine":106,"endColumn":18},{"ruleId":"344","severity":1,"message":"393","line":3,"column":17,"nodeType":"346","messageId":"347","endLine":3,"endColumn":26},{"ruleId":"394","severity":1,"message":"395","line":85,"column":9,"nodeType":"396","endLine":85,"endColumn":11,"suggestions":"397"},{"ruleId":"394","severity":1,"message":"398","line":97,"column":9,"nodeType":"396","endLine":97,"endColumn":23,"suggestions":"399"},{"ruleId":"400","severity":1,"message":"401","line":105,"column":16,"nodeType":"402","messageId":"403","endLine":105,"endColumn":18},{"ruleId":"344","severity":1,"message":"404","line":4,"column":11,"nodeType":"346","messageId":"347","endLine":4,"endColumn":20},{"ruleId":"344","severity":1,"message":"405","line":1,"column":16,"nodeType":"346","messageId":"347","endLine":1,"endColumn":24},{"ruleId":"344","severity":1,"message":"406","line":2,"column":17,"nodeType":"346","messageId":"347","endLine":2,"endColumn":21},{"ruleId":"344","severity":1,"message":"345","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"407","line":2,"column":30,"nodeType":"346","messageId":"347","endLine":2,"endColumn":36},{"ruleId":"344","severity":1,"message":"368","line":2,"column":38,"nodeType":"346","messageId":"347","endLine":2,"endColumn":44},{"ruleId":"344","severity":1,"message":"379","line":5,"column":9,"nodeType":"346","messageId":"347","endLine":5,"endColumn":21},{"ruleId":"344","severity":1,"message":"408","line":5,"column":22,"nodeType":"346","messageId":"347","endLine":5,"endColumn":34},{"ruleId":"344","severity":1,"message":"409","line":5,"column":35,"nodeType":"346","messageId":"347","endLine":5,"endColumn":46},{"ruleId":"344","severity":1,"message":"410","line":6,"column":10,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"411","severity":1,"message":"412","line":36,"column":23,"nodeType":"413","messageId":"414","endLine":36,"endColumn":25},{"ruleId":"415","severity":1,"message":"416","line":52,"column":5,"nodeType":"417","messageId":"414","endLine":52,"endColumn":9},{"ruleId":"344","severity":1,"message":"345","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"368","line":2,"column":38,"nodeType":"346","messageId":"347","endLine":2,"endColumn":44},{"ruleId":"344","severity":1,"message":"409","line":5,"column":38,"nodeType":"346","messageId":"347","endLine":5,"endColumn":49},{"ruleId":"344","severity":1,"message":"410","line":6,"column":10,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"418","line":7,"column":10,"nodeType":"346","messageId":"347","endLine":7,"endColumn":20},{"ruleId":"344","severity":1,"message":"419","line":8,"column":8,"nodeType":"346","messageId":"347","endLine":8,"endColumn":13},{"ruleId":"344","severity":1,"message":"383","line":10,"column":9,"nodeType":"346","messageId":"347","endLine":10,"endColumn":15},{"ruleId":"344","severity":1,"message":"420","line":40,"column":9,"nodeType":"346","messageId":"347","endLine":40,"endColumn":19},{"ruleId":"344","severity":1,"message":"407","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":29},{"ruleId":"344","severity":1,"message":"421","line":5,"column":7,"nodeType":"346","messageId":"347","endLine":5,"endColumn":11},{"ruleId":"344","severity":1,"message":"422","line":16,"column":10,"nodeType":"346","messageId":"347","endLine":16,"endColumn":17},{"ruleId":"411","severity":1,"message":"412","line":161,"column":97,"nodeType":"413","messageId":"414","endLine":161,"endColumn":99},{"ruleId":"344","severity":1,"message":"423","line":10,"column":17,"nodeType":"346","messageId":"347","endLine":10,"endColumn":25},{"ruleId":"344","severity":1,"message":"424","line":12,"column":11,"nodeType":"346","messageId":"347","endLine":12,"endColumn":25},{"ruleId":"344","severity":1,"message":"425","line":22,"column":13,"nodeType":"346","messageId":"347","endLine":22,"endColumn":39},{"ruleId":"400","severity":1,"message":"401","line":43,"column":35,"nodeType":"402","messageId":"403","endLine":43,"endColumn":37},{"ruleId":"394","severity":1,"message":"426","line":85,"column":11,"nodeType":"396","endLine":85,"endColumn":18,"suggestions":"427"},{"ruleId":"344","severity":1,"message":"428","line":6,"column":9,"nodeType":"346","messageId":"347","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":6,"column":39,"nodeType":"413","messageId":"431","endLine":6,"endColumn":40},{"ruleId":"429","severity":1,"message":"430","line":10,"column":56,"nodeType":"413","messageId":"431","endLine":10,"endColumn":57},{"ruleId":"432","severity":1,"message":"433","line":28,"column":3,"nodeType":"434","messageId":"435","endLine":28,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":32,"column":56,"nodeType":"413","messageId":"431","endLine":32,"endColumn":57},{"ruleId":"432","severity":1,"message":"433","line":50,"column":3,"nodeType":"434","messageId":"435","endLine":50,"endColumn":19},{"ruleId":"344","severity":1,"message":"428","line":63,"column":9,"nodeType":"346","messageId":"347","endLine":63,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":63,"column":39,"nodeType":"413","messageId":"431","endLine":63,"endColumn":40},{"ruleId":"429","severity":1,"message":"430","line":67,"column":56,"nodeType":"413","messageId":"431","endLine":67,"endColumn":57},{"ruleId":"432","severity":1,"message":"433","line":84,"column":3,"nodeType":"434","messageId":"435","endLine":84,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":88,"column":56,"nodeType":"413","messageId":"431","endLine":88,"endColumn":57},{"ruleId":"432","severity":1,"message":"433","line":106,"column":3,"nodeType":"434","messageId":"435","endLine":106,"endColumn":19},{"ruleId":"344","severity":1,"message":"345","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"368","line":2,"column":38,"nodeType":"346","messageId":"347","endLine":2,"endColumn":44},{"ruleId":"344","severity":1,"message":"349","line":6,"column":8,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"354","line":14,"column":11,"nodeType":"346","messageId":"347","endLine":14,"endColumn":17},{"ruleId":"340","replacedBy":"436"},{"ruleId":"342","replacedBy":"437"},{"ruleId":"344","severity":1,"message":"438","line":1,"column":29,"nodeType":"346","messageId":"347","endLine":1,"endColumn":32},{"ruleId":"344","severity":1,"message":"345","line":1,"column":34,"nodeType":"346","messageId":"347","endLine":1,"endColumn":39},{"ruleId":"344","severity":1,"message":"377","line":5,"column":10,"nodeType":"346","messageId":"347","endLine":5,"endColumn":14},{"ruleId":"344","severity":1,"message":"439","line":94,"column":10,"nodeType":"346","messageId":"347","endLine":94,"endColumn":20},{"ruleId":"344","severity":1,"message":"440","line":94,"column":22,"nodeType":"346","messageId":"347","endLine":94,"endColumn":35},{"ruleId":"394","severity":1,"message":"441","line":114,"column":3,"nodeType":"396","endLine":114,"endColumn":5,"suggestions":"442"},{"ruleId":"394","severity":1,"message":"443","line":138,"column":3,"nodeType":"396","endLine":138,"endColumn":5,"suggestions":"444"},{"ruleId":"411","severity":1,"message":"412","line":143,"column":95,"nodeType":"413","messageId":"414","endLine":143,"endColumn":97},{"ruleId":"344","severity":1,"message":"354","line":154,"column":10,"nodeType":"346","messageId":"347","endLine":154,"endColumn":16},{"ruleId":"344","severity":1,"message":"445","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":18},{"ruleId":"344","severity":1,"message":"446","line":8,"column":8,"nodeType":"346","messageId":"347","endLine":8,"endColumn":19},{"ruleId":"344","severity":1,"message":"447","line":9,"column":8,"nodeType":"346","messageId":"347","endLine":9,"endColumn":19},{"ruleId":"448","severity":1,"message":"449","line":52,"column":7,"nodeType":"450","messageId":"451","endLine":120,"endColumn":6},{"ruleId":"344","severity":1,"message":"452","line":6,"column":10,"nodeType":"346","messageId":"347","endLine":6,"endColumn":15},{"ruleId":"344","severity":1,"message":"453","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":18},{"ruleId":"344","severity":1,"message":"419","line":9,"column":8,"nodeType":"346","messageId":"347","endLine":9,"endColumn":13},{"ruleId":"344","severity":1,"message":"362","line":50,"column":13,"nodeType":"346","messageId":"347","endLine":50,"endColumn":18},{"ruleId":"344","severity":1,"message":"454","line":58,"column":11,"nodeType":"346","messageId":"347","endLine":58,"endColumn":23},{"ruleId":"344","severity":1,"message":"455","line":3,"column":9,"nodeType":"346","messageId":"347","endLine":3,"endColumn":19},{"ruleId":"400","severity":1,"message":"401","line":67,"column":24,"nodeType":"402","messageId":"403","endLine":67,"endColumn":26},{"ruleId":"344","severity":1,"message":"456","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":17},{"ruleId":"344","severity":1,"message":"368","line":2,"column":46,"nodeType":"346","messageId":"347","endLine":2,"endColumn":52},{"ruleId":"344","severity":1,"message":"409","line":5,"column":35,"nodeType":"346","messageId":"347","endLine":5,"endColumn":46},{"ruleId":"344","severity":1,"message":"410","line":6,"column":10,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"419","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":13},{"ruleId":"344","severity":1,"message":"457","line":8,"column":8,"nodeType":"346","messageId":"347","endLine":8,"endColumn":10},{"ruleId":"344","severity":1,"message":"360","line":6,"column":8,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"350","line":7,"column":8,"nodeType":"346","messageId":"347","endLine":7,"endColumn":17},{"ruleId":"344","severity":1,"message":"458","line":9,"column":9,"nodeType":"346","messageId":"347","endLine":9,"endColumn":15},{"ruleId":"344","severity":1,"message":"393","line":9,"column":17,"nodeType":"346","messageId":"347","endLine":9,"endColumn":26},{"ruleId":"344","severity":1,"message":"459","line":13,"column":8,"nodeType":"346","messageId":"347","endLine":13,"endColumn":16},{"ruleId":"344","severity":1,"message":"460","line":19,"column":12,"nodeType":"346","messageId":"347","endLine":19,"endColumn":23},{"ruleId":"344","severity":1,"message":"461","line":19,"column":24,"nodeType":"346","messageId":"347","endLine":19,"endColumn":38},{"ruleId":"344","severity":1,"message":"365","line":20,"column":11,"nodeType":"346","messageId":"347","endLine":20,"endColumn":16},{"ruleId":"344","severity":1,"message":"359","line":1,"column":9,"nodeType":"346","messageId":"347","endLine":1,"endColumn":14},{"ruleId":"344","severity":1,"message":"345","line":1,"column":24,"nodeType":"346","messageId":"347","endLine":1,"endColumn":29},{"ruleId":"344","severity":1,"message":"462","line":5,"column":8,"nodeType":"346","messageId":"347","endLine":5,"endColumn":16},{"ruleId":"344","severity":1,"message":"463","line":99,"column":10,"nodeType":"346","messageId":"347","endLine":99,"endColumn":17},{"ruleId":"344","severity":1,"message":"464","line":130,"column":12,"nodeType":"346","messageId":"347","endLine":130,"endColumn":18},{"ruleId":"344","severity":1,"message":"465","line":130,"column":19,"nodeType":"346","messageId":"347","endLine":130,"endColumn":28},{"ruleId":"411","severity":1,"message":"466","line":149,"column":17,"nodeType":"413","messageId":"414","endLine":149,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":161,"column":62,"nodeType":"413","messageId":"414","endLine":161,"endColumn":64},{"ruleId":"411","severity":1,"message":"412","line":172,"column":62,"nodeType":"413","messageId":"414","endLine":172,"endColumn":64},{"ruleId":"411","severity":1,"message":"412","line":186,"column":103,"nodeType":"413","messageId":"414","endLine":186,"endColumn":105},{"ruleId":"411","severity":1,"message":"412","line":187,"column":58,"nodeType":"413","messageId":"414","endLine":187,"endColumn":60},{"ruleId":"411","severity":1,"message":"412","line":202,"column":63,"nodeType":"413","messageId":"414","endLine":202,"endColumn":65},{"ruleId":"344","severity":1,"message":"354","line":225,"column":10,"nodeType":"346","messageId":"347","endLine":225,"endColumn":16},{"ruleId":"344","severity":1,"message":"467","line":225,"column":17,"nodeType":"346","messageId":"347","endLine":225,"endColumn":23},{"ruleId":"344","severity":1,"message":"468","line":229,"column":9,"nodeType":"346","messageId":"347","endLine":229,"endColumn":14},{"ruleId":"411","severity":1,"message":"466","line":535,"column":33,"nodeType":"413","messageId":"414","endLine":535,"endColumn":35},{"ruleId":"411","severity":1,"message":"412","line":546,"column":91,"nodeType":"413","messageId":"414","endLine":546,"endColumn":93},{"ruleId":"344","severity":1,"message":"405","line":1,"column":16,"nodeType":"346","messageId":"347","endLine":1,"endColumn":24},{"ruleId":"344","severity":1,"message":"469","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":15},{"ruleId":"344","severity":1,"message":"406","line":2,"column":17,"nodeType":"346","messageId":"347","endLine":2,"endColumn":21},{"ruleId":"344","severity":1,"message":"345","line":2,"column":23,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"407","line":2,"column":30,"nodeType":"346","messageId":"347","endLine":2,"endColumn":36},{"ruleId":"344","severity":1,"message":"378","line":5,"column":9,"nodeType":"346","messageId":"347","endLine":5,"endColumn":19},{"ruleId":"344","severity":1,"message":"407","line":3,"column":10,"nodeType":"346","messageId":"347","endLine":3,"endColumn":16},{"ruleId":"344","severity":1,"message":"470","line":36,"column":11,"nodeType":"346","messageId":"347","endLine":36,"endColumn":18},{"ruleId":"344","severity":1,"message":"423","line":9,"column":17,"nodeType":"346","messageId":"347","endLine":9,"endColumn":25},{"ruleId":"344","severity":1,"message":"424","line":10,"column":11,"nodeType":"346","messageId":"347","endLine":10,"endColumn":25},{"ruleId":"344","severity":1,"message":"425","line":20,"column":13,"nodeType":"346","messageId":"347","endLine":20,"endColumn":39},{"ruleId":"344","severity":1,"message":"421","line":29,"column":16,"nodeType":"346","messageId":"347","endLine":29,"endColumn":20},{"ruleId":"400","severity":1,"message":"401","line":36,"column":37,"nodeType":"402","messageId":"403","endLine":36,"endColumn":39},{"ruleId":"344","severity":1,"message":"471","line":54,"column":18,"nodeType":"346","messageId":"347","endLine":54,"endColumn":30},{"ruleId":"344","severity":1,"message":"370","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":19},{"ruleId":"344","severity":1,"message":"371","line":4,"column":21,"nodeType":"346","messageId":"347","endLine":4,"endColumn":25},{"ruleId":"344","severity":1,"message":"372","line":4,"column":27,"nodeType":"346","messageId":"347","endLine":4,"endColumn":32},{"ruleId":"344","severity":1,"message":"373","line":4,"column":34,"nodeType":"346","messageId":"347","endLine":4,"endColumn":39},{"ruleId":"344","severity":1,"message":"374","line":4,"column":41,"nodeType":"346","messageId":"347","endLine":4,"endColumn":46},{"ruleId":"344","severity":1,"message":"375","line":4,"column":48,"nodeType":"346","messageId":"347","endLine":4,"endColumn":67},{"ruleId":"344","severity":1,"message":"376","line":5,"column":8,"nodeType":"346","messageId":"347","endLine":5,"endColumn":14},{"ruleId":"344","severity":1,"message":"378","line":6,"column":9,"nodeType":"346","messageId":"347","endLine":6,"endColumn":19},{"ruleId":"344","severity":1,"message":"379","line":6,"column":21,"nodeType":"346","messageId":"347","endLine":6,"endColumn":33},{"ruleId":"344","severity":1,"message":"380","line":6,"column":34,"nodeType":"346","messageId":"347","endLine":6,"endColumn":48},{"ruleId":"344","severity":1,"message":"472","line":8,"column":9,"nodeType":"346","messageId":"347","endLine":8,"endColumn":16},{"ruleId":"344","severity":1,"message":"473","line":9,"column":9,"nodeType":"346","messageId":"347","endLine":9,"endColumn":15},{"ruleId":"344","severity":1,"message":"354","line":14,"column":8,"nodeType":"346","messageId":"347","endLine":14,"endColumn":14},{"ruleId":"344","severity":1,"message":"385","line":69,"column":7,"nodeType":"346","messageId":"347","endLine":69,"endColumn":15},{"ruleId":"344","severity":1,"message":"386","line":79,"column":14,"nodeType":"346","messageId":"347","endLine":79,"endColumn":24},{"ruleId":"344","severity":1,"message":"387","line":97,"column":11,"nodeType":"346","messageId":"347","endLine":97,"endColumn":16},{"ruleId":"344","severity":1,"message":"404","line":5,"column":11,"nodeType":"346","messageId":"347","endLine":5,"endColumn":20},{"ruleId":"344","severity":1,"message":"404","line":6,"column":11,"nodeType":"346","messageId":"347","endLine":6,"endColumn":20},{"ruleId":"344","severity":1,"message":"404","line":100,"column":11,"nodeType":"346","messageId":"347","endLine":100,"endColumn":20},{"ruleId":"344","severity":1,"message":"474","line":4,"column":9,"nodeType":"346","messageId":"347","endLine":4,"endColumn":12},{"ruleId":"344","severity":1,"message":"424","line":7,"column":11,"nodeType":"346","messageId":"347","endLine":7,"endColumn":25},{"ruleId":"344","severity":1,"message":"425","line":17,"column":13,"nodeType":"346","messageId":"347","endLine":17,"endColumn":39},{"ruleId":"344","severity":1,"message":"421","line":26,"column":16,"nodeType":"346","messageId":"347","endLine":26,"endColumn":20},{"ruleId":"400","severity":1,"message":"401","line":34,"column":34,"nodeType":"402","messageId":"403","endLine":34,"endColumn":36},{"ruleId":"344","severity":1,"message":"383","line":45,"column":15,"nodeType":"346","messageId":"347","endLine":45,"endColumn":21},{"ruleId":"344","severity":1,"message":"471","line":48,"column":18,"nodeType":"346","messageId":"347","endLine":48,"endColumn":30},{"ruleId":"344","severity":1,"message":"356","line":1,"column":10,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"344","severity":1,"message":"368","line":3,"column":16,"nodeType":"346","messageId":"347","endLine":3,"endColumn":22},{"ruleId":"344","severity":1,"message":"379","line":5,"column":44,"nodeType":"346","messageId":"347","endLine":5,"endColumn":56},"no-native-reassign",["475"],"no-negated-in-lhs",["476"],"no-unused-vars","'Space' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Banner' is defined but never used.","'ForumCard' is defined but never used.","'orgname' is assigned a value but never used.","'orgUsername' is assigned a value but never used.","'orgPassword' is assigned a value but never used.","'Header' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'TagBox' is defined but never used.","'TabPane' is assigned a value but never used.","'style' is assigned a value but never used.","'adminStyle' is assigned a value but never used.","'loginStyle' is assigned a value but never used.","'image' is assigned a value but never used.","'noUsers' is assigned a value but never used.","'setNoUsers' is assigned a value but never used.","'Avatar' is defined but never used.","'Empty' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Label' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","'Plot' is defined but never used.","'EditFilled' is defined but never used.","'UserOutlined' is defined but never used.","'ExportOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'MainHeader' is defined but never used.","'Option' is assigned a value but never used.","'Box' is assigned a value but never used.","'Activity' is assigned a value but never used.","'createData' is defined but never used.","'theme' is assigned a value but never used.","'selectedAccounts' is assigned a value but never used.",["475"],["476"],"'error' is assigned a value but never used.","'content' is assigned a value but never used.","'MyReplies' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.filter', 'props.location', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["477"],"React Hook useEffect has a missing dependency: 'forums'. Either include it or remove the dependency array. You can also do a functional update 'setForums(f => ...)' if you only need 'forums' in the 'setForums' call.",["478"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'colorCode' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'LockOutlined' is defined but never used.","'KeyOutlined' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","'IconButton' is defined but never used.","'axios' is defined but never used.","'ChangeType' is assigned a value but never used.","'data' is assigned a value but never used.","'surveys' is assigned a value but never used.","'setCount' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDiseases'. Either include it or remove the dependency array.",["479"],"'link' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["475"],["476"],"'Tag' is defined but never used.","'continents' is assigned a value but never used.","'setContinents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["481"],"'Background' is defined but never used.","'Background2' is defined but never used.","'Background3' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Paper' is defined but never used.","'Choropleth' is defined but never used.","'changeCenter' is assigned a value but never used.","'useHistory' is defined but never used.","'message' is defined but never used.","'qs' is defined but never used.","'MyCard' is defined but never used.","'firebase' is defined but never used.","'showDetails' is assigned a value but never used.","'setShowDetails' is assigned a value but never used.","'Mappings' is defined but never used.","'regions' is assigned a value but never used.","'hidden' is assigned a value but never used.","'setHidden' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Footer' is assigned a value but never used.","'marks' is assigned a value but never used.","'Input' is defined but never used.","'replies' is assigned a value but never used.","'handleChange' is defined but never used.","'Request' is defined but never used.","'Survey' is defined but never used.","'Get' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},"Update the dependencies array to be: [props.filter, props.location, props.user]",{"range":"492","text":"493"},"Update the dependencies array to be: [forums, props.filter]",{"range":"494","text":"495"},"Update the dependencies array to be: [count, getDiseases]",{"range":"496","text":"497"},"Update the dependencies array to be: [questions]",{"range":"498","text":"499"},"Update the dependencies array to be: [expandSurvey]",{"range":"500","text":"501"},[1900,1902],"[props.filter, props.location, props.user]",[2146,2160],"[forums, props.filter]",[1788,1795],"[count, getDiseases]",[2183,2185],"[questions]",[2719,2721],"[expandSurvey]"]
>>>>>>> Stashed changes
