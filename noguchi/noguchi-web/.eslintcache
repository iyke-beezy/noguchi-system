[{"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/index.js":"1","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js":"2","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js":"3","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js":"4","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js":"5","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js":"6","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/evaluationSession.js":"7","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js":"8","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/mainHeader.js":"9","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js":"10","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js":"11","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js":"12","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js":"13","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js":"14","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/App.js":"15","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js":"16","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js":"17","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js":"18","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js":"19","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js":"20","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/controls/legend/legend.js":"21","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js":"22","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js":"23","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/RecordCases.js":"24","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/banner.js":"25","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js":"26","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js":"27","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js":"28","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js":"29","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js":"30","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/survey.js":"31","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/endUserProtected.js":"32","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js":"33","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js":"34","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/miniheader.js":"35","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/userlogin.js":"36","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/orglogin.js":"37","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/caseRoutes.js":"38","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js":"39"},{"size":503,"mtime":1622216456845,"results":"40","hashOfConfig":"41"},{"size":3804,"mtime":1622216456847,"results":"42","hashOfConfig":"41"},{"size":5331,"mtime":1622216456848,"results":"43","hashOfConfig":"41"},{"size":9956,"mtime":1623074920468,"results":"44","hashOfConfig":"41"},{"size":5354,"mtime":1622216456848,"results":"45","hashOfConfig":"41"},{"size":9813,"mtime":1622911402806,"results":"46","hashOfConfig":"41"},{"size":3580,"mtime":1622911383833,"results":"47","hashOfConfig":"41"},{"size":556,"mtime":1622216456234,"results":"48","hashOfConfig":"41"},{"size":1818,"mtime":1622216456235,"results":"49","hashOfConfig":"41"},{"size":12108,"mtime":1622216456235,"results":"50","hashOfConfig":"41"},{"size":1269,"mtime":1622216456234,"results":"51","hashOfConfig":"41"},{"size":6833,"mtime":1622911383835,"results":"52","hashOfConfig":"41"},{"size":3307,"mtime":1623075061966,"results":"53","hashOfConfig":"41"},{"size":4338,"mtime":1622216456852,"results":"54","hashOfConfig":"41"},{"size":2390,"mtime":1623074967079,"results":"55","hashOfConfig":"41"},{"size":8369,"mtime":1623075699438,"results":"56","hashOfConfig":"41"},{"size":9300,"mtime":1622816073472,"results":"57","hashOfConfig":"41"},{"size":5083,"mtime":1623062504292,"results":"58","hashOfConfig":"41"},{"size":1027,"mtime":1623075610530,"results":"59","hashOfConfig":"41"},{"size":4172,"mtime":1622216456236,"results":"60","hashOfConfig":"41"},{"size":6631,"mtime":1622216456845,"results":"61","hashOfConfig":"41"},{"size":5674,"mtime":1622216456853,"results":"62","hashOfConfig":"41"},{"size":18506,"mtime":1622816131029,"results":"63","hashOfConfig":"41"},{"size":11255,"mtime":1622911383834,"results":"64","hashOfConfig":"41"},{"size":368,"mtime":1622216456233,"results":"65","hashOfConfig":"41"},{"size":3774,"mtime":1622216456233,"results":"66","hashOfConfig":"41"},{"size":4918,"mtime":1622216456847,"results":"67","hashOfConfig":"41"},{"size":3139,"mtime":1622216456852,"results":"68","hashOfConfig":"41"},{"size":19245,"mtime":1622216456850,"results":"69","hashOfConfig":"41"},{"size":1623,"mtime":1622216456236,"results":"70","hashOfConfig":"41"},{"size":2297,"mtime":1622216456853,"results":"71","hashOfConfig":"41"},{"size":373,"mtime":1623060929476,"results":"72","hashOfConfig":"41"},{"size":5933,"mtime":1623073935165,"results":"73","hashOfConfig":"41"},{"size":4167,"mtime":1622911402804,"results":"74","hashOfConfig":"41"},{"size":2089,"mtime":1623075070117,"results":"75","hashOfConfig":"41"},{"size":757,"mtime":1623062433041,"results":"76","hashOfConfig":"41"},{"size":752,"mtime":1623062427457,"results":"77","hashOfConfig":"41"},{"size":453,"mtime":1623062995443,"results":"78","hashOfConfig":"41"},{"size":5086,"mtime":1622216456853,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"27rji0",{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"109"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"109"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"109"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/index.js",[],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Profile/profile.js",["195","196","197","198"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar,Layout, Result} from 'antd';\nimport \"antd/dist/antd.css\";\nimport '../../App.css';\nimport Headers from \"../../components/header\";\nimport Banner from \"../../components/banner\";\nimport MainHeader from \"../../components/mainHeader\";\n\nconst ProfilePage=()=>{\n    const [disability,setDisability]=useState(true);\n    const [orgname,setOrgname]=useState('GHANA EDUCATION SERVICE')\n    const [orgUsername,setOrgUsername]=useState('GeSNoguchi');\n    const [orgPassword,setOrgPassword]=useState('osemigor123');\n    const{Header}=Layout;\n    const mee=localStorage.getItem('current_user')\n    return(\n        <div className='profilePage'>\n            <MainHeader/>\n            {\n                mee?\n                <>\n                <Headers/>\n            <div className='profileMidSection'>\n            \n                    <Card className='proCard' bordered style={{flex:0.3,height:'auto',backgroundColor:'white',textAlign:'left',display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start',flexShrink:0,margin:20,/* boxShadow:'3px 3px 20px #00000010' */minWidth:'min(95vw,350px)'}}>\n                        <h1 style={{color:'black',fontSize:30}}>\n                         PROFILE\n                        </h1>\n                        <h3 style={{color:'#40404090'}}>\n                            Name\n                        </h3>\n                        <Input type='text' value={orgname} onChange={(e)=>{setOrgname(e.target.value)}} disabled={disability} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Username\n                        </h3>\n                        <Input type='text' value={orgUsername} disabled={disability} onChange={(e)=>{setOrgUsername(e.target.value)}} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <h3 style={{color:'#40404090'}}>\n                            Password\n                        </h3>\n                        <Input.Password type='password' value={orgPassword} disabled={disability} size='large' onChange={(e)=>{setOrgPassword(e.target.value)}} style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\n                        <Button type='primary' size='large' onClick={()=>{setDisability(!disability)}}  block style={{marginBottom:30,backgroundColor:'#6461ff'}}>{disability?'Edit Profile':'Save'}</Button>\n                        <Button type='primary' size='large' onClick={()=>{\n                            localStorage.removeItem('current_user');\n                            window.location.href='/';\n                            }} danger block>Logout</Button>\n\n                    </Card>\n                <Card className='banner proCard' style={{flex:0.5,margin:20,minWidth:'min(95vw,350px)'}}>\n                    <h1>Take A Disease Survey</h1>\n                    <Button className='bannerButton' onClick={()=>{window.location.href='/entry';}}>Start</Button>\n                </Card>\n                \n            </div>\n            \n                \n\n                \n                </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title=\"403\"\n                \n                    subTitle=\"Sorry, you are not authorized to access this page.\"\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n       </div>     \n    );\n}\nexport default ProfilePage;",["199","200"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/details.js",["201","202","203","204","205","206","207","208","209"],"import { Layout,Card,Table, Tag, Space, Select } from 'antd';\nimport React,{useState,useEffect} from 'react';\nimport ForumList from '../../components/forumList';\nimport MainHeader from '../../components/mainHeader';\nimport { Plot,Plot2 } from '../../controls/legend/legend';\nimport axios from 'axios';\nimport qs from 'qs';\n\nconst {Option}=Select\n\nconst column2=[\n  {\n    title: 'Keyword',\n    dataIndex: 'keyword',\n    key: 'keyword',\n  \n  },\n  {\n    title: 'Data',\n    dataIndex: 'data',\n    key: 'data',\n    render:data=><div>\n      {\n          typeof(data)==='object'?\n          typeof(data[0])==='object'?\n          data.map(dat=>Object.values(dat)).join(' | ')\n          :\n          data.join(',')\n          :\n          data\n      }\n    </div>\n  \n  }\n]\nconst columns = [\n    {\n      title: 'Year',\n      dataIndex: 'year',\n      key: 'year',\n    \n    },\n    {\n      title: 'New Cases',\n      dataIndex: 'new',\n      key: 'new',\n    },\n    {\n      title: 'Active Cases',\n      dataIndex: 'active',\n      key: 'active',\n    },\n    {\n      title: 'Recovered',\n      key: 'recover',\n      dataIndex: 'recover',\n    },\n    {\n      title: 'Deaths',\n      key: 'deaths',\n      dataIndex: 'deaths',\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      year: '2020',\n      new: 32,\n      active: 100,\n      recover: 60,\n      deaths: 0,\n    },\n    {\n        key: '2',\n        year: '2019',\n        new: 32,\n        active: 120,\n        recover: 30,\n        deaths: 7,\n      },\n      {\n        key: '3',\n        year: '2018',\n        new: 32,\n        active: 150,\n        recover: 0,\n        deaths: 13,\n      },\n  ];\n\nconst Details=(props)=>{\n\n  const [continents, setContinents] =useState([]);\n  const [current, setCurrent] =useState([]);\n  const [expandSurvey, setExpandSurvey] =useState();\n  const [questions, setQuestions] =useState();\n\n  useEffect(() => {\n    async function fetchQuestions(){\n      await axios.get('http://localhost:1337/questions')\n      .then(\n        res =>{\n          if(res.data){\n            setQuestions(res.data)\n        }} )\n      .catch((error) => {\n        console.log(error);\n      })\n    }\n    fetchQuestions();\n   console.log(questions)\n    \n},[]);\n\n  useEffect(() => {\n    async function fetchSurvey(){\n      await axios.get('http://localhost:1337/surveys',\n      {\n        params:{\n          community:localStorage.getItem('expandedCommunity'),\n        },\n        paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\n      }\n    )\n      .then(\n        res =>{\n          if(res.data){\n            setExpandSurvey(res.data)\n        }} )\n      .catch((error) => {\n        console.log(error);\n      })\n    }\n    fetchSurvey();\n    console.log(expandSurvey)\n    \n},[]);\n\nlet selectedYear=localStorage.getItem('selectedYear');\nlet expandeds;\nif(selectedYear){\nlet filterByYearSelection=expandSurvey?expandSurvey.filter(exsurvey=>exsurvey.ActualSurveyDate==selectedYear):null;\nconsole.log(filterByYearSelection)\nexpandeds = filterByYearSelection?filterByYearSelection[0].answers:null;\n}else{\n  expandeds = expandSurvey?expandSurvey[0].answers:null;\n}\n\nlet years=expandSurvey?expandSurvey.map(exs=> exs.ActualSurveyDate):null\nconsole.log(expandSurvey)\nlet data2=expandeds?expandeds.map(expanded=> ({keyword:expanded.question.Keyword,data:expanded.answer})):null\nconsole.log(data2)\n  const {Header}=Layout;\n\n const handleChange=(value)=>{\n  let selectedSurvey=expandSurvey.filter(exs=>exs.ActualSurveyDate===value);\n  let ssanswers=selectedSurvey[0]?.answers\n  \n  let tableFormat=ssanswers?ssanswers.map(ssanswer=> ({keyword:ssanswer.question.Keyword,data:ssanswer.answer.toString()})):null\n  console.log(tableFormat)\n  setCurrent(tableFormat)\n }\n\n  return(\n      <div className='profilePage' style={{maxWidth:'100vw',backgroundColor:'white',width:'100%'}}>\n        <MainHeader/>\n        <div style={{width:'100%',marginTop:'10vh',padding:'0px 50px 50px 50px'}}>\n           <div style={{display:'flex',flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\n           <h1 style={{fontSize:50}}>{expandSurvey?expandSurvey[0].community.Community:null}</h1>\n          <Select placeholder='Change Year' style={{width:150}}  onChange={(value)=>{handleChange(value)}}>\n          \n            \n            {\n              years?\n                years.map(year=><Option key={year}>{year.slice(0,4)}</Option>)\n              :\n              null\n            }\n          </Select>\n           </div>\n            <h3 style={{textAlign:'left',color:'brown'}}>\n              Current Disease: Schistosomiasis\n            </h3>\n             {\n               current.length>0?\n               <Table bordered columns={column2} dataSource={current} size='middle'/>\n               :\n               <Table bordered columns={column2} dataSource={data2} size='middle'/>\n               \n               }\n            <Card  style={{minHeight:'40vh',marginTop:20,borderRadius:5,marginBottom:40}}>\n             <Plot2 yname='Prevalence(%)'/>\n            </Card>\n\n            <Table bordered columns={columns} dataSource={data} size='middle'/>\n            <div className='adminProfiles' style={{height:'40vh',width:'100%',overflowY:'scroll',marginTop:35}}>\n           \n                <ForumList/>\n           \n            </div>\n        </div>\n        </div>\n    );\n}\nexport default Details;",["210","211"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/otherProfile/otherProfile.js",["212","213","214","215","216","217","218","219","220","221","222","223"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/admin.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"import React, {useState} from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty, Space} from 'antd';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Legend, { Plot } from '../../controls/legend/legend';\nimport {EditFilled ,UserOutlined,ExportOutlined,UserAddOutlined} from '@ant-design/icons';\nimport MainHeader from '../../components/mainHeader';\nimport {Request} from '../request/request'\nimport {Survey} from '../survey/survey'\nconst {TabPane}=Tabs;\nconst {Option}=Select;\nconst {Header}=Layout;\n\nconst Box=(props)=>{\n    const [modalState,setModalState]=useState(false);\n    const [profileName,setProfileName]=useState(props.data.username)\n    const [profileKey,setProfileKey]=useState(props.data.key)\n    console.log(props.data.key)\n    return(\n        <>\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\n        </div>\n        <Modal\n        title='Edit Profile'\n        style={{ top: 100 }}\n        width={500}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n        footer={[\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\n              Delete\n            </Button>,\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\n              Revert\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\n            Save\n          </Button>\n          ]}\n      >\n                    <div style={{display:'flex',flexDirection:'column'}}>\n                    <label >Profile Name</label>\n                        <Input\n                        type='text'\n                        value={profileName}\n                        onChange={(e)=>setProfileName(e.target.value)}\n                        size='large'\n                        style={{width:'50%',minWidth:330,marginTop:5}}\n                        />  \n                        <label style={{marginTop:8}}>Profile Key</label>\n                        <Input\n                        type='text'\n                        value={profileKey}\n                        onChange={(e)=>setProfileKey(e.target.value)}\n                        size='large'\n                        style={{width:'45%',minWidth:300,marginTop:5}}\n                        />  \n                        </div>\n\n      </Modal>\n        \n        </>\n    );\n}\nconst Activity=()=>{\n    return(\n        <div style={{height:220,border:'1px solid #adadad',margin:20}}>\n\n        </div>\n    );\n}\n\n\nconst AdminPage =()=>{\n  const [logged,setLogged]=useState(false)\n    function createData(time, amount) {\n        return { time, amount };\n      }\n      \n  /*     const data = [\n        createData('00:00', 0),\n        createData('03:00', 300),\n        createData('06:00', 600),\n        createData('09:00', 800),\n        createData('12:00', 1500),\n        createData('15:00', 2000),\n        createData('18:00', 2400),\n        createData('21:00', 2400),\n        createData('24:00', undefined),\n      ] */\n    \n    const theme = useTheme();\n   // const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\n   // let selectedAccounts=selectedOrg.org_users;\n   const data ={\n    username:\"james\",\n    id:1\n  }\n   let selectedAccounts= [data]\n    return(\n      <div className='profilePage'>\n        {\n          logged?\n          \n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n              <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>ADMIN</h1>\n              <div style={{width:'80%'}}>\n                  <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto',backgroundColor:'white',padding:30,}}>\n                  <TabPane tab=\"Build Survey \" key=\"1\" >\n                        \n                        <Survey />\n                        \n                            \n                        </TabPane>\n                        \n                          <TabPane tab=\"Manage requests\" key=\"2\" >\n                        <Request/>   \n                          </TabPane>\n                        \n                          </Tabs>\n                        \n              </div>\n        </div>\n          \n          :\n          <div style={{display:'flex',width:'100%',height:'100vh',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n\n              <Card  style={{height:200,width:400,borderRadius:25}}>\n                <Space size='middle' direction='vertical'>\n                 <h2> \n                   ADMIN LOGIN\n                 </h2>\n                  <div style={{display:'flex'}}>\n                  <Input placeholder='Enter admin key' size='large' type='text'  /><Button onClick={()=>setLogged(true)} type='primary' size='large'>Login</Button>\n                  </div>\n                  </Space>\n                 \n              </Card>\n            </div>\n        }\n        \n        </div>\n\n    );\n}\nexport default AdminPage;",["246","247"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAccounts/orgAccountss.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React,{useEffect, useState} from 'react';\nimport { Button, Card, Tabs,Row,Col,Divider,Modal ,Layout,Form,Space,Input,Result} from 'antd';\nimport FormInput from '../../components/input'\nimport  '../../components/components.css';\nimport TagBox from '../../components/tagBox';\nimport ForumCard from '../../components/forumCard';\nimport axios from 'axios';\nimport firebase from '../../api';\nimport qs from 'qs';\nimport MainHeader from '../../components/mainHeader';\nconst {TabPane}=Tabs;\nconst style = { background: '#0092ff', padding: '8px 0',height:'180px', marginBottom:'10px',\ncolor:'white',display:'flex',flexDirection:'Column',alignItems:'flex-start',fontSize:'15px' };\nconst adminStyle = { background: '#0092ff', padding: '8px 0',height:'180px' };\nconst loginStyle={\n    backgroundColor:\"red\"\n}\n\n\nconst Box=(props)=>{\n    const [modalState,setModalState]=useState(false);\n    const [key,setKey]=useState('')\n    return(\n        <>\n        {\n        props.admin?\n        <>\n         <div style={{height:180,border:'4px solid #ff9633',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)} onDoubleClick={()=>setModalState(false)}>\n          <div hidden={modalState}>\n                <h3>Admin</h3>\n                <span>Click to Login</span>\n          </div>\n          <div hidden={!modalState} style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-between',padding:5,height:'50%'}}>\n          <FormInput value={key} onChange={(e)=>setKey(e.target.value)} name=\"key\" type=\"text\" placeholder=\"Enter Admin Key\"  required style={{width:'95%'}} />\n          <Button key=\"submit\" type=\"primary\"  onClick={() => {\n                axios.get('http://localhost:1337/org-admins',\n                {\n                  params:{\n                    username:props.data.username,\n                    key:key\n                  },\n                  paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\n                }\n              )\n                    .then(response => {\n                        localStorage.setItem('org_admin',JSON.stringify(response.data))\n                        window.location.href='/orgAdmin'\n                    }\n                    )\n                    .catch((error) => {\n                      console.log(error);\n                    })\n                \n            \n                \n                }}>\n                Enter\n          </Button>\n          </div>\n        </div>\n        \n        </>\n    :\n       <>\n        <div style={{height:180,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}  onDoubleClick={()=>setModalState(false)}>\n        <div hidden={modalState}>\n                <h3>{props.data.username}</h3>\n                <span>Click to Login</span>\n          </div>\n        <div hidden={!modalState} style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-between',padding:5,height:'50%'}}>\n          <FormInput value={key} onChange={(e)=>setKey(e.target.value)} name=\"key\" type=\"text\" placeholder=\"Enter Profile Key\"  required style={{width:'95%'}} />\n          <Button key=\"submit\" type=\"primary\"  onClick={() => {\n              axios.get('http://localhost:1337/org-users',\n              {\n                params:{\n                  username:props.data.username,\n                  key:key\n                },\n                paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\n              }\n            )\n                  .then(response => {\n                      localStorage.setItem('current_user',JSON.stringify(response.data))\n                      window.location.href='/profile'\n                  }\n                  )\n                  .catch((error) => {\n                    console.log(error);\n                  })\n              \n               \n                \n                }}>\n                Enter\n          </Button>\n          </div>\n        </div>\n         \n       </>     \n        }\n       \n        </>\n    );\n}\nconst image=require('../../assets/whiteGhana.png');\nconst OrgAccountss=()=> {\n    const [noUsers,setNoUsers]=useState(true)\n    const [username,setUsername]=useState('')\n    const [password,setPassword]=useState('')\n    const {Header}=Layout;\n\n    const selectedOrg=localStorage.getItem('selectedOrg');\n    let selectedAdmin=selectedOrg?.org_admin;\n    let selectedAccounts\n    let accounts=[]\n    if(selectedAdmin){\n        selectedAccounts=selectedOrg.org_users\n        accounts=[selectedAdmin,...selectedAccounts]\n    }\n    \n   \n    const addAdmin=(e)=>{\n      console.log(selectedOrg)\n     firebase.firestore().collection('organisations').doc(selectedOrg).update({\n       admin:{\n         username:username,\n         password:password,\n       }\n     }).then(()=>{\n       window.location.href='/orgAdmin'\n     })\n      \n      \n        /* const user = {\n          name: username,\n          privateKey: password,\n          company:\"5fbcf73e612071290c2a3046\",\n          role:'admin'\n        }\n        console.log(user)\n        axios.post('http://localhost:5002/auth/userSignUp', user)\n          .then(\n            res =>{\n              if(res.data){\n                console.log(res.data)\n            }}\n      \n          \n          )\n          .catch((error) => {\n            console.log(error);\n          })\n       */\n    }\n    let cur_org=localStorage.getItem('selectedOrg')\n    return(\n        <div style={{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column'/* ,justifyContent:'center' */,alignItems:'center'}}>\n            <MainHeader/>\n            {\n                cur_org?\n                <>\n            <div  style={{height:'80vh',width:'85%',marginTop:'10vh'}}>\n                {\n                    selectedAdmin?\n                    <h1 style={{fontSize:'max(4vw,30px)',color:'white'}}>ORGANIZATION PROFILES</h1>\n                    :\n                    null\n                }\n                \n                {!selectedAdmin?\n                \n                <div className='orgAccountsBox' style={{padding:10,display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',overflowY:'scroll',height:'70vh'}}>\n                        <h1 style={{fontSize:'max(4vw,30px)',color:'white',textAlign:'left',fontFamily: \"'Poppins', sans-serif\"}}>Create Admin Account</h1>\n                        <Card style={{width:'min(500px,80vw)',height:'auto',borderRadius:30}}>\n                        <Form layout='vertical' onFinish={addAdmin}>\n                            <Space direction='vertical' size={5}>\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"username\"\n                                rules={[{ required: true, message: 'Please input admin name!' }]}\n                            >\n                            <Input \n                            size=\"large\"\n                            className='formInput'\n                            value={username}\n                            placeholder=\"Enter Admin name\" \n                            onChange={(e)=>setUsername(e.target.value)}\n                            />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Password\"\n                                name=\"password\"\n                                rules={[{ required: true, message: 'Please input admin password!' }]}\n                            >\n                            <Input.Password \n                            size=\"large\"\n                            className='formInput'\n                            value={password}\n                            placeholder=\"Enter Admin password\" \n                            onChange={(e)=>setPassword(e.target.value)}\n                           \n                            />\n                            </Form.Item>\n                            <Button \n                            size='large'\n                            block\n                            style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:3,borderRadius:8}}\n                            htmlType='submit'\n                            >\n                            Create\n                            </Button>\n                            </Space>\n                            </Form>\n                        </Card>\n                                              \n                </div>\n                    :\n                    <div className='orgAccountsBox' style={{padding:10,display:'grid',gridTemplateColumns:'repeat(auto-fill,minmax(230px,1fr))',overflowY:'scroll',height:'55vh'}}>\n                            \n                            {\n                                accounts.map((account,index)=><Box admin={index===0}  key={account} data={account}/>)\n                            }\n                                     \n                    </div>\n                }\n                \n            </div> \n            </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title={<span style={{color:'white'}}>Unauthorized Access</span>}\n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\n                    extra={<Button size='large' onClick={()=>window.location.href='/home'} type=\"primary\">Back to Home</Button>}\n                />\n                </>\n                \n            }\n        </div>\n      \n    );\n  \n}\nexport default OrgAccountss;",["263","264"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/admin/evaluationSession.js",[],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/header.js",["265","266","267","268","269","270"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport {EditFilled ,UserOutlined} from '@ant-design/icons';\n\nconst Headers=()=>{\n    return(\n        <div className=\"headerSection\">\n            \n                    <div style={{display:'flex',flexDirection:'column',alignItems:'start',margin:10}}>\n                    <Avatar size={90} icon={<UserOutlined/>}/>\n                    </div>\n                \n        </div>\n    );\n}\nexport default Headers;",["271","272"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/mainHeader.js",["273","274","275"],"import { Row,Layout,Menu } from 'antd'\nimport React, {useEffect, useState} from 'react'\nimport {Button,Avatar} from '@material-ui/core';\n\nimport {MessageOutlined,FileSearchOutlined,UserOutlined} from '@ant-design/icons';\nimport { MiniMiniHeader } from './miniheader';\nconst {Header}=Layout\n\nconst MainHeader=()=>{\n    const [online,setOnline]=useState(false)\n    \n    useEffect(()=>{\n        if(localStorage.getItem('currentUser')||localStorage.getItem('current_user')||localStorage.getItem('org_admin')){\n            setOnline(true)\n        }\n    },[])\n    \n    return(\n        <Header style={{position:'fixed',top:0,height:'auto',borderBottom:'1px solid whitesmoke',zIndex:1,backgroundColor:\"white\",width:'100%',display:'flex',flexDirection:'row',justifyContent:'space-between'}}>\n            <div className=\"logo\" onClick={()=>{window.location.href='/home';}}><span style={{fontWeight:'bold',cursor:'pointer'}} >IDCS</span ></div>\n            <Menu theme=\"light\"  mode=\"horizontal\"  style={{borderBottom:'none',width:'30%',display:'flex',justifyContent:'flex-end'}}>\n                <Menu.Item icon={<MessageOutlined/>} key=\"1\" onClick={()=>{window.location.href='/forum';}}>Forums</Menu.Item>\n                <Menu.Item icon={<FileSearchOutlined/>} key=\"2\" onClick={()=>{window.location.href='/cases';}}>Explore Cases </Menu.Item>\n                {\n                    online?\n                    <Menu.Item key=\"3\" style={{border:'none'}}><MiniMiniHeader onClick={()=>setOnline(false)}/></Menu.Item>\n                    :\n                    <Menu.Item key=\"3\" style={{border:'none'}}><Button variant=\"contained\" color='primary' disableElevation onClick={()=>{window.location.href='/login';}}>Login</Button></Menu.Item>\n\n                }\n            </Menu>\n         </Header>\n    );\n}\nexport default MainHeader;",["276","277"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/surveyCard.js",["278","279","280","281"],"import React, {useState,useEffect} from \"react\";\nimport { Input, Radio,Card, Space, Button ,message, InputNumber, Modal,Checkbox,Form,Select} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {PlusOutlined,ArrowUpOutlined,ArrowDownOutlined,MinusCircleOutlined ,ExclamationCircleOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nimport Background from '../assets/desktop4.png';\nimport Background2 from '../assets/desktop7.png';\nimport Background3 from '../assets/desktop3.png';\n\nconst {Option}=Select\nconst SurveyCard=(props)=>{\nconst [allAnswers,setAllAnswers]=useState([])\n const [questions,setQuestions]=useState([]);\n useEffect(() => {\n    axios.get('http://localhost:1337/questions')\n    .then(\n      res =>{\n        if(res.data){\n         let alls=res.data\n          setQuestions(res.data)\n          setAllAnswers(alls.map((all)=>({question:all.id,answer:[]}))) \n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\n const [point,setPoint]=useState(1);\n let current =questions.filter((question,index)=>index===point-1) \n let input;\n    const handleChange=e=>{\n       \n        let newArr=[...allAnswers]\n        newArr[point-1].answer=e.target.value\n       setAllAnswers(newArr) \n    \n    } \n    const handleNumberChange=value=>{\n        let newArr=[...allAnswers]\n        newArr[point-1].answer=value\n       setAllAnswers(newArr) \n    }  \n    const handleCheckChange=value=>{\n      let newArr=[...allAnswers]\n      newArr[point-1].answer=value\n      setAllAnswers(newArr) \n\n      console.log(allAnswers)\n    }\n    \n    const handleFinish=(values)=>{\n      {\n                \n        if(point===questions.length){\n          if(current[0]?.type==='radiolist'||current[0]?.type==='listpairs'||current[0]?.type==='listselect'){\n            console.log(values)\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n          }\n            Modal.confirm({\n                title: 'Submit Survey',\n                content: 'Do you want to submit the survey?',\n                icon: <ExclamationCircleOutlined />,\n                onOk() {\n                  axios.post('http://localhost:1337/surveys',{\n                      surveyUID:props.surveyUID,\n                      org_user:JSON.parse(localStorage.getItem('userAndjwt')).user.id,\n                      disease:1,\n                      ActualSurveyDate:props.asDate,\n                      community:props.community,\n                      answers:allAnswers\n                       \n                  }).then(res =>{\n                        if(res.data){\n                            console.log(res.data)\n                            message.success('Survey Filled Successfully');\n                            window.location.href='/entry'\n                        }}\n\n                  )\n                  .catch((error) => {\n                    console.log(error);\n                    message.error('Entry Unsuccessful')\n                  })\n                },\n                centered:true,\n                onCancel() {\n                  console.log('Cancel');\n                },\n                cancelText:'No',\n                okText:'Yes'\n              });\n\n        }else if(current[0]?.type==='listpairs'){\n            console.log(values)\n\n            let newArr=[...allAnswers]\n            newArr[point-1].answer=Object.values(values)[0];\n            setAllAnswers(newArr) \n            console.log(allAnswers)\n            setPoint(point+1)\n        }else if(current[0]?.type==='listselect'){\n          console.log(values)\n          let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }else if(current[0]?.type==='radiolist'){\n        console.log(values)\n        let newArr=[...allAnswers]\n          newArr[point-1].answer=Object.values(values)[0];\n          setAllAnswers(newArr) \n          console.log(allAnswers)\n          setPoint(point+1)\n      }\n        else {setPoint(point+1)}\n    }\n    }\n    \n  if (current[0]?.type==='boolean') {\n      input=\n      <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n      <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n        <Radio.Button value='yes'>True</Radio.Button>\n        <Radio.Button value='no'>False</Radio.Button>\n      </Radio.Group>\n      </Form.Item>\n  } else if(current[0]?.type==='check'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Checkbox.Group onChange={handleCheckChange} >\n            {current[0]?.options.map(\n              (option,index)=><Checkbox key={index} style={{ lineHeight: '32px'}} value={option}>{option}</Checkbox>\n            )}\n        </Checkbox.Group>\n    </Form.Item>\n      \n  }else if(current[0]?.type==='radio'){\n    input=\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\n         <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\n          <Radio.Button value='good'>Good</Radio.Button>\n          <Radio.Button value='bad'>Bad</Radio.Button>\n          <Radio.Button value='poor'>Poor</Radio.Button>\n        </Radio.Group>\n    </Form.Item>\n      \n  } else if(current[0]?.type==='number'){\n      input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><InputNumber onChange={handleNumberChange} value={allAnswers[point-1]?.answer}    style={{marginBottom:15}}  size='large' min={0}/></Form.Item>\n}else if(current[0]?.type==='listpairs'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Input placeholder={secondpart} />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='listselect'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Input placeholder={firstpart}  />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else if(current[0]?.type==='radiolist'){\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\n  input=\n        <Form.List name={current[0]?.Keyword} >\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, firstpart]}\n                    fieldKey={[field.fieldKey, firstpart]}\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\n                  >\n                    <Select style={{width:200}}>\n                      {\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\n                      }\n                    </Select>\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, secondpart]}\n                    fieldKey={[field.fieldKey, secondpart]}\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\n                  >\n                          <Radio.Group  style={{marginBottom:15}}  size='large'>\n                            <Radio.Button value='increasing'><ArrowUpOutlined/></Radio.Button>\n                            <Radio.Button value='decreasing'><ArrowDownOutlined/></Radio.Button>\n                          </Radio.Group>\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n  \n\n}else{\n    input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><Input  onChange={handleChange} value={allAnswers[point-1]?.answer}   style={{marginBottom:15}}  type={current[0]?.type} size='large' /></Form.Item>\n  };\n    return(\n        <>\n         <h1 style={{fontSize:'14em',lineHeight:0.4,color:'lightgrey',opacity:0.2,fontWeight:'bolder'}}>\n           {point>9?point:'0'+point}\n        </h1>\n           <Form onFinish={handleFinish}  style={{width:'100%'}}>\n            <Card  \n              actions={[\n                <Button type='default' size='large' style={{borderRadius:15}} onClick={()=>{point!==1 ? setPoint(point-1):setPoint(point);\n                 }}>Back</Button>,\n                <Button type='primary' size='large'   /* disabled */ style={{borderRadius:15}} htmlType='submit' >{point===questions.length?'Finish':'Next'}</Button>\n                ]}\n\n            >\n                <Space direction='vertical' size='large'>\n                <h1 style={{fontSize:'max(13px,1vw)',wordWrap:'break-word',textTransform:'uppercase',textAlign:'center'}}>{current[0]?.question}</h1>\n                {input}\n                </Space>\n\n\n            </Card>\n            </Form>\n      </>  \n    );\n};\nexport default SurveyCard;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/input.js",["282","283","284","285","286","287","288","289","290","291","292"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport {UserOutlined,LockOutlined,KeyOutlined} from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\n\n\n\nconst FormInput = ({\n    name,\n    type,\n    placeholder,\n    onChange,\n    className,\n    value,\n    error,\n    children,\n    label,\n    prefix,\n    ...props\n  }) => {\n    \n    return (\n      <React.Fragment>\n      \n        <Input\n          id={name}\n          type={type}\n          placeholder={placeholder}\n          onChange={onChange}\n          value={value}\n          className={className}\n          style={error=='' ? {border:'1-x solid black'}: {border: 'solid 1px red'}}\n        />\n        { error && <p>{ error }</p>}\n      </React.Fragment>\n    )\n  }\n  \n  FormInput.defaultProps = {\n    type: \"text\",\n    className: \"\"\n  }\n  \n  FormInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n    className: PropTypes.string,\n    value: PropTypes.any,\n    onChange: PropTypes.func.isRequired\n  }\n\nexport default FormInput;",["293","294"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/request/request.js",["295","296","297","298"],"import React, { useEffect, useState } from \"react\";\nimport { List, Drawer, Button, Divider, Row, Col, Switch, message } from \"antd\";\nimport {} from \"@ant-design/icons\";\nimport Axios from \"axios\";\nconst data = [\n  \"Racing car sprays burning fuel into crowd.\",\n  \"Japanese princess to wed commoner.\",\n  \"Australian walks 100km after outback crash.\",\n  \"Man charged over missing wedding girl.\",\n  \"Los Angeles battles huge wildfires.\",\n];\n\nexport const Request = () => {\n  const [filteredSurveys, setFilteredSurveys] = useState([]);\n  const [surveys, setSurveys] = useState([]);\n  useEffect(() => {\n    async function fetchSurveys() {\n      await Axios.get(\"http://localhost:1337/surveys\")\n        .then((res) => {\n          if (res.data) {\n            setSurveys(res.data);\n            setFilteredSurveys(\n              res.data.filter((dat) => dat.evaluated === null)\n            );\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    fetchSurveys();\n  }, []);\n\n  const [orgs, setOrgs] = useState([]);\n  useEffect(() => {\n    async function fetchOrgs() {\n      await Axios.get(\"http://localhost:1337/organizations\")\n        .then((res) => {\n          if (res.data) {\n            setOrgs(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    fetchOrgs();\n  }, []);\n  console.log(orgs, filteredSurveys);\n\n  const [visible, setVisible] = useState(false);\n  const [clickedSurvey, setClickedSurvey] = useState([]);\n  return (\n    <>\n      <Drawer\n        title=\"Details\"\n        placement=\"right\"\n        width=\"50%\"\n        closable={true}\n        onClose={() => setVisible(false)}\n        visible={visible}\n      >\n        <div\n          style={{\n            zIndex: 100000000000,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          <h1 style={{ textAlign: \"left\" }}>\n            Recorded for {clickedSurvey.community?.Community}\n          </h1>\n          <h3 style={{ textAlign: \"left\", color: \"steelblue\" }}>\n            {clickedSurvey.published_at?.slice(0, 10)}\n          </h3>\n\n          <Row style={{ width: \"100%\" }}>\n            <Col md={24}>\n              {clickedSurvey.answers?.map((answer, index) => (\n                <Row\n                  key={index}\n                  style={{\n                    width: \"100%\",\n                    paddingTop: 20,\n                    paddingBottom: 20,\n                    borderBottom: \"1px solid whitesmoke\",\n                  }}\n                >\n                  <Col md={12}>\n                    <b>{answer.question.Keyword}</b>\n                  </Col>\n                  <Col md={12}>\n                    {typeof answer.answer === \"object\" ? (\n                      answer.answer.length > 0 ? (\n                        typeof answer.answer[0] === \"object\" ? (\n                          <>\n                            <Row style={{ width: \"100%\" }}>\n                              {Object.keys(answer.answer[0]).map((key) => (\n                                <Col md={12}>\n                                  <b>{key}</b>\n                                </Col>\n                              ))}\n                            </Row>\n                            <Row style={{ width: \"100%\" }}>\n                              <Col md={24}>\n                                {answer.answer.map((ans, index) => (\n                                  <Row\n                                    style={{\n                                      borderBottom: \"1px dashed whitesmoke\",\n                                      paddingBottom: 5,\n                                      paddingTop: 5,\n                                    }}\n                                  >\n                                    {Object.values(ans).map((key) => (\n                                      <Col md={12}>{key}</Col>\n                                    ))}\n                                  </Row>\n                                ))}\n                              </Col>\n                            </Row>\n                          </>\n                        ) : (\n                          <Row style={{ width: \"100%\" }}>\n                            <Col md={24}>\n                              {answer.answer.map((ans, index) => (\n                                <text style={{ display: \"block\" }} key={index}>\n                                  {ans}\n                                </text>\n                              ))}\n                            </Col>\n                          </Row>\n                        )\n                      ) : (\n                        \"empty object\"\n                      )\n                    ) : typeof answer.answer === \"boolean\" ? (\n                      answer.answer.toString()\n                    ) : (\n                      answer.answer\n                    )}\n                  </Col>\n                </Row>\n              ))}\n            </Col>\n          </Row>\n        </div>\n      </Drawer>\n\n      <Divider orientation=\"left\">Requests</Divider>\n      <List\n        size=\"large\"\n        header={<div></div>}\n        bordered\n        dataSource={filteredSurveys}\n        renderItem={(item) => (\n          <List.Item>\n            <Row style={{ width: \"100%\" }}>\n              <Col\n                md={22}\n                onClick={() => {\n                  setClickedSurvey(item);\n                  setVisible(true);\n                }}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                }}\n              >\n                <h2>{item.surveyUID}</h2>\n                <text style={{ fontSize: \"10px\" }}>\n                  by{\" \"}\n                  {item.org_user.organization\n                    ? orgs.filter(\n                        (org) => org.id == item.org_user.organization\n                      )[0]?.name\n                    : \"\"}\n                </text>\n              </Col>\n              <Col md={2}>\n                <Switch\n                  onChange={() => {\n                    /* console.log('turned') */\n\n                    Axios.put(\"http://localhost:1337/surveys/\" + item.id, {\n                      evaluated: true,\n                    })\n                      .then((res) => {\n                        if (res.data) {\n                          message.success(\"Survey has been evaluated\");\n                          window.location.href = \"/admin\";\n                        }\n                      })\n                      .catch((error) => {\n                        console.log(error);\n                      });\n                  }}\n                />\n              </Col>\n            </Row>\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/functions.js",["299","300"],"import { message } from 'antd'\nimport firebase from './api'\nimport {useHistory} from 'react-router-dom'\n\nexport const userSignUp=(email,password,name)=>{\n    firebase.auth().createUserWithEmailAndPassword(email,password).then(()=>{\n        \n        localStorage.setItem('currentUser',JSON.stringify(firebase.auth().currentUser))\n\n        message.success('User Created Successfully')\n\n        firebase.firestore().collection('endUsers').add({\n\n            userID:firebase.auth().currentUser.uid,\n            name:name,\n        }).then(\n            ()=>window.location.href='/userprofile'\n\n        )\n    }).catch((error)=>{\n        message.error(error.message)\n    })\n}\n\nexport const orgSignUp=(email,password,name)=>{\n    firebase.auth().createUserWithEmailAndPassword(email,password).then(()=>{\n        localStorage.setItem('selectedOrg',JSON.stringify(firebase.auth().currentUser))\n        message.success('Org Created Successfully')\n        firebase.firestore().collection('organisations').add({\n            organisationId:firebase.auth().currentUser.uid,\n            organisationName:name,\n        }).then(()=>{\n            window.location.href='/orgAccounts'\n        })\n    }).catch((error)=>{\n        message.error(error.message)\n    })\n}\n\n\nexport const UserLogin= async (email,password)=>{\n    firebase.auth().signInWithEmailAndPassword(email,password).then(()=>{\n        let result=firebase.firestore().collection('endUsers').where('userID','==',firebase.auth().currentUser.uid)\n        \n        if(result){\n            message.success('Successfully Logged In')\n            localStorage.setItem('currentUser',JSON.stringify(firebase.auth().currentUser))\n            window.location.href='/userprofile'\n        }\n        else{\n            message.error('Wrong Credentials')\n        }\n    }).catch((error)=>{\n        message.error(error.message)\n\n    })\n}\n\n\nexport const OrgLogin=(email,password)=>{\n    firebase.auth().signInWithEmailAndPassword(email,password).then(()=>{\n        let result=firebase.firestore().collection('organisations').where('organisationId','==',firebase.auth().currentUser.uid)\n        let mainUser=[];\n        result.onSnapshot(\n            snapshot=>{\n                snapshot.docs.map(\n                    (d)=>{\n                        console.log(d.id)\n                        mainUser.push(d.id)\n                        \n                    }\n                )\n                console.log(mainUser)\n                if(result){\n                    let main1=mainUser[0]\n                    message.success('Successfully Logged In')\n                    console.log(main1)\n                    localStorage.setItem('current_user',JSON.stringify(main1));\n                    window.location.href='/entry'\n                }\n                else{\n                    message.error('Wrong Credentials')\n                }\n                    }\n                )\n        \n    }).catch((error)=>{\n        message.error(error.message)\n\n    })\n}\n\n\n// Create A Forum\n\nexport const createForum=(params)=>{\n    firebase.firestore().collection('forums').add({\n        author:params.author,\n        community:params.community,\n        content:params.content,\n        description:params.description,\n        disease:params.disease,\n        replies:[],\n        title:params.title,\n    })\n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/communityForm.js",["301","302","303","304","305","306"],"import React,{useEffect, useState} from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\n\n\nexport const CommunityForm = () =>{\n   const [districts,setDistricts] = useState([])\n   const [count,setCount] = useState(0)\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n      const postcommunities = async(body) =>{\n        var url = \"communities\";\n         const data = await Post(url,body);\n         \n     \n     }\n\n      const onFinish = values => {\n        console.log('Received values of form:', values);\n        values.communities.map(value=>{\n          console.log(value.community)\n          const body = {\n            community:value.community,\n            district:value.district\n          } \n          const bod = JSON.stringify(body)\n          postcommunities(bod)\n        })\n      \n      };\n    \n\n      \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n        console.log(`selected ${value}`);\n        }\n\n        const getDistrict = async() =>{\n          var url = \"districts\";\n          const  data = await Get(url);\n           console.log(data)\n          setDistricts(data);\n       \n       }\n\n       useEffect(()=>{\n           getDistrict();\n       \n       },[count])\n\n\n    return(\n     \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"communities\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'community']}\n                           fieldKey={[field.fieldKey, 'community']}\n                           rules={[{ required: true, message: 'Missing community ' }]}\n                         >\n                           <Input placeholder=\"Input community name here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'district']}\n                           fieldKey={[field.fieldKey, 'district']}\n                           rules={[{ required: true, message: 'Missing district ' }]}\n                         >\n                            <Select placeholder=\"Add District\" defaultValue={undefined} style={{ width: 120 }} >\n                       {districts.map(district =>{\n                         return(\n                              <Option value={district.id}>{district.district}</Option>\n                         )\n                       })} \n                        \n                            </Select>\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Community\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n    \n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/App.js",["307","308","309","310","311","312","313","314"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport OrgLogin from \"./pages/Login/orglogin\";\nimport ProfilePage from \"./pages/Profile/profile\";\nimport Entry from \"./pages/entry/entry\";\nimport OtherProfile from \"./pages/otherProfile/otherProfile\";\nimport OtherForum from \"./pages/forum/otherForum\";\nimport OrgAdminPage from \"./pages/orgAdmin/orgAdmin\";\nimport OrgAccountss from \"./pages/orgAccounts/orgAccountss\";\nimport Home from \"./pages/homePage/home\";\nimport Details from \"./pages/detailsPage/details\";\nimport RecordCases from \"./pages/detailsPage/RecordCases\";\nimport AdminPage from \"./pages/admin/admin\";\nimport EvaluationSession from \"./pages/admin/evaluationSession\";\nimport ProtectedUserRoutes from \"./endUserProtected\";\nimport { UserForm } from \"./components/form\";\nimport UserLoginForm from \"./pages/Login/userlogin\";\nimport CaseRoutes from \"./pages/detailsPage/caseRoutes\";\n\nfunction App() {\n  require(\"react-dom\");\n  window.React2 = require(\"react\");\n  console.log(window.React1 === window.React2);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* End User Routes */}\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <UserLoginForm />\n          </Route>\n          <Route path=\"/forum\">\n            <OtherForum />\n          </Route>\n          <Route path=\"/cases\">\n           <CaseRoutes/>\n          </Route>\n          <Route path=\"/userprofile\">\n            <ProtectedUserRoutes component={OtherProfile}/>\n          </Route>\n          \n       \n          {/* <Route path=\"/profile\">\n            <ProfilePage />\n          </Route> */}\n          \n          {/* organisation routes */}\n          \n          <Route path=\"/OrgAccounts\">\n            <OrgAccountss />\n          </Route>\n          <Route path=\"/orgadmin\">\n            <OrgAdminPage />\n          </Route>\n          <Route path=\"/entry\">\n            <Entry />\n          </Route>\n          \n            \n       \n         \n          {/* <Route path=\"/admin\">\n            <AdminPage />\n          </Route>\n          <Route path=\"/esession\">\n            <EvaluationSession />\n          </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/forum/otherForum.js",["315","316","317","318","319","320","321","322","323","324","325"],"import React, { useState, useEffect } from 'react';\nimport { Button, Card, Tabs, Form, Col, Row, Result, Input, Radio, Select,Empty } from 'antd';\nimport '../../components/components.css';\nimport ForumCard from '../../components/forumCard';\nimport ForumList from '../../components/forumList';\nimport MainHeader from '../../components/mainHeader';\nimport { Switch, Route, useRouteMatch,Link } from 'react-router-dom';\nimport { createForum } from '../../functions';\nimport firebase from '../../api'\n\nconst { Option } = Select\nconst { TextArea } = Input\nconst OtherForum = () => {\n  const [showDetails, setShowDetails] = useState(false);\n  const [firebaseForums, setFirebaseForums] = useState([])\n\n  const image = require('../../assets/whiteGhana.png')\n  const { TabPane } = Tabs;\n  let me = JSON.parse(localStorage.getItem('currentUser'))\n  let otherMe = JSON.parse(localStorage.getItem('current_user'))\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [content, setContent] = useState('');\n  const [disease, setDisease] = useState('')\n  const [community, setCommunity] = useState('');\n  const [diseases, setDiseases] = useState('')\n  const [communities, setCommunities] = useState('');\n  let { path, url } = useRouteMatch();\n  useEffect(() => {\n    firebase.firestore().collection('forums').onSnapshot(\n      snapshot => {\n        let allForums = []\n        snapshot.docs.map(\n          d => {\n            allForums.push(d.data())\n          }\n        )\n        setFirebaseForums(allForums)\n      }\n    )\n    firebase.firestore().collection('diseases').onSnapshot(\n      snapshot=>{\n        let allDiseases=[]\n        snapshot.docs.map(\n          d=>{\n            allDiseases.push(d.data())\n            console.log(d.data())\n          }\n        )\n        setDiseases(allDiseases)\n      }\n    )\n  }, [])\n\n\n  const create = () => {\n    let params={disease,community,description,title,content}\n    createForum(params)\n  }\n\n  return (\n    <div >\n      <MainHeader />\n      <div className='login not_mobi' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n\n\n        <Card title={<h1 style={{ fontSize: 15, textAlign: 'left' }}>Forums</h1>} style={{ height: '75vh', width: '85%', borderRadius: 15 }}>\n          <Tabs tabPosition='left' defaultActiveKey='1' size='small' style={{ height: 'auto' }}>\n            <TabPane tab=\"All Forums\" key=\"1\" >\n              <div className='adminProfiles' style={{ height: '63vh' }}>\n                <Switch>\n                  <Route exact path={path}>\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', width:'100%'  }}>\n                      {\n\n                        firebaseForums ?\n                        \n                          firebaseForums.map((forum) => <ForumCard id={forum.title} key={forum.title} data={forum} />)\n                          :\n                          <Empty description='No Forums' />\n                      }\n\n                    </div>\n                  </Route>\n                  <Route path={`${path}/:forumID`}>\n                \n              \n                  </Route>\n\n                </Switch>\n\n\n\n              </div>\n\n            </TabPane>\n            <TabPane tab=\"Create Forum\" key=\"2\" >\n              {\n                localStorage.getItem('current_user') || localStorage.getItem('currentUser') ?\n                  <div className='adminProfiles' style={{ height: '63vh' }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', justifyContent: 'space-around' }}>\n                      <h1 style={{ color: 'lightslategray', margin: 8 }}>\n                        NEW FORUM\n                            </h1>\n                      <Form  onFinish={create}>\n\n                        <Form.Item\n                          label=\"Forum Title\"\n                          name=\"forumTitle\"\n                          rules={[{ required: true, message: 'Please input Forum Title!' }]}\n                        >\n                          <Input\n                            type='text'\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            size='large'\n\n\n                          />\n\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Forum Description\"\n                          name=\"forumDescription\"\n                          rules={[{ required: true, message: 'Please input Forum Description!' }]}\n                        >\n                          <Input\n                            type='text'\n                            size='large'\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n\n\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Forum Content\"\n                          name=\"forumContent\"\n                          rules={[{ required: true, message: 'Please input Forum Content!' }]}\n                        >\n                          <TextArea rows={4} value={content} onChange={(e) => setContent(e.target.value)} />\n\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Select Disease Tag\"\n                          name=\"diseaseTag\"\n                          rules={[{ required: true, message: 'Please select disease tag!' }]}\n                        >\n                          <Radio.Group  value={disease} onChange={(e) => setDisease(e.target.value)} style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', flexWrap: 'wrap' }} size='large' >\n\n                            {\n                              diseases ?\n                                diseases.map((dis, index) => <Radio.Button key={index} value={dis.disease} style={{ margin: 2 }}>{dis.disease}</Radio.Button>)\n                                :\n                                null\n                            }\n                          </Radio.Group>\n\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Select Community\"\n                          name=\"communityTag\"\n                          rules={[{ required: true, message: 'Please select community tag!' }]}\n                        >\n                          <Select onChange={(value) => setCommunity(value)} >\n                            {\n                              communities ?\n                                communities.map((comm, index) => <Option key={index} value={comm.id}>{comm.Community}</Option>)\n                                :\n                                null\n                            }\n                          </Select>\n                        </Form.Item>\n                        <Form.Item>\n                          <Button type='primary' htmlType='submit' size='large' block>Create</Button>\n\n                        </Form.Item>\n                      </Form>\n                    </div>\n                  </div>\n                  :\n                  <Result\n                    status=\"error\"\n                    title=\"403\"\n                    subTitle=\"Sorry, you are not authorized to create a forum.\"\n                    extra={<Button size='large' onClick={() => window.location.href = '/login'} type=\"primary\">Go to Login</Button>}\n                  />\n\n              }\n\n\n            </TabPane>\n          </Tabs>\n\n        </Card>\n\n\n      </div>\n\n      <Row className=\"mobi\">\n        <Col style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: '10vh' }} xs={24} md={0}>\n          <h5 style={{ width: '50%' }}>Survey And Preview</h5></Col>\n\n\n        <Tabs style={{ width: '100%' }} centered defaultActiveKey=\"1\" >\n          <TabPane tab=\"All Forums\" key=\"1\">\n            <div style={{ padding: 35 }}>\n\n              <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'center', overflowY: 'scroll', height: '63vh' }}>\n                {/* <ForumList /> */}\n\n              </div>\n\n\n            </div>\n          </TabPane>\n          \n\n        </Tabs>\n      </Row>\n\n    </div>\n  );\n}\nexport default OtherForum;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/orgAdmin/orgAdmin.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React, {useState} from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty,Form,Result} from 'antd';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Legend, { Plot } from '../../controls/legend/legend';\nimport {EditFilled ,UserOutlined,ExportOutlined,UserAddOutlined} from '@ant-design/icons';\nimport MainHeader from '../../components/mainHeader';\nimport {Request} from '../request/request'\nimport {Survey} from '../survey/survey'\nimport Axios from 'axios';\n\nconst {TabPane}=Tabs;\nconst {Option}=Select;\nconst {Header}=Layout;\n\nconst Box=(props)=>{\n    const [modalState,setModalState]=useState(false);\n    const [profileName,setProfileName]=useState(props.data.username)\n    const [profileKey,setProfileKey]=useState(props.data.key)\n    console.log(props.data.key)\n    return(\n        <>\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\n        </div>\n        <Modal\n        title='Edit Profile'\n        style={{ top: 100 }}\n        width={500}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n        footer={[\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\n              Delete\n            </Button>,\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\n              Revert\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\n            Save\n          </Button>\n          ]}\n      >\n                    <div style={{display:'flex',flexDirection:'column'}}>\n                    <label >Profile Name</label>\n                        <Input\n                        type='text'\n                        value={profileName}\n                        onChange={(e)=>setProfileName(e.target.value)}\n                        size='large'\n                        style={{width:'50%',minWidth:330,marginTop:5}}\n                        />  \n                        <label style={{marginTop:8}}>Profile Key</label>\n                        <Input\n                        type='text'\n                        value={profileKey}\n                        onChange={(e)=>setProfileKey(e.target.value)}\n                        size='large'\n                        style={{width:'45%',minWidth:300,marginTop:5}}\n                        />  \n                        </div>\n\n      </Modal>\n        \n        </>\n    );\n}\nconst Activity=()=>{\n    return(\n        <div style={{height:220,border:'1px solid #adadad',margin:20}}>\n\n        </div>\n    );\n}\n\n\nconst OrgAdminPage =()=>{\n    function createData(time, amount) {\n        return { time, amount };\n      }\n      \n  /*     const data = [\n        createData('00:00', 0),\n        createData('03:00', 300),\n        createData('06:00', 600),\n        createData('09:00', 800),\n        createData('12:00', 1500),\n        createData('15:00', 2000),\n        createData('18:00', 2400),\n        createData('21:00', 2400),\n        createData('24:00', undefined),\n      ] */\n    \n    const [username,setUsername]=useState('')\n    const [password,setPassword]=useState('')\n    const theme = useTheme();\n    const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\n    let selectedAccounts=selectedOrg.org_users\n\n    const createOrgUser=()=>{\n      Axios.post('http://localhost:1337/org-users', \n      {\n        username: username,\n        key: password,\n        organization:JSON.parse(localStorage.getItem('selectedOrg'))[0].id\n      }\n      )\n        .then(\n          res =>{\n            if(res.data){\n              console.log(res.data)\n          }}\n\n        \n        )\n        .catch((error) => {\n          console.log(error);\n        })\n    \n    }\n    let me=localStorage.getItem('org_admin')\n    return(\n      <div className='profilePage' style={{backgroundColor:'white'}}>\n       <MainHeader/>\n\n       {\n                me?\n                <>\n        <div style={{display:'flex',marginTop:'10vh',width:'100%',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n        <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>username ADMIN DASHBOARD</h1>\n        <div style={{width:'80%'}}>\n            <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto'}}>\n                    <TabPane tab=\"Manage Profiles\" key=\"1\" >\n                        <div className='adminProfiles' style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(230px,1fr))',height:'55vh'}}>\n                           {\n                             selectedAccounts?\n                              <>\n                                {\n                                selectedAccounts.map((selectedAccount,index)=><Box   key={selectedAccount} data={selectedAccount}/>)\n                               }\n                              </>\n                             :\n                             <Empty/>\n                           }  \n                          \n\n                        </div>\n                        \n                    </TabPane>\n                    \n                    <TabPane tab=\"Profile Activities\" key=\"2\"  >\n                        \n                        <div style={{display:'flex',flexDirection:'column',height:'55vh'}}>\n                         <Select defaultValue='kofi' size='large' style={{maxWidth:'max(20%,100px)'}}>\n                           <Option value='kofi'>Kofi</Option> \n                           <Option value='ama'>Ama</Option> \n                           <Option value='tetteh'>Tetteh</Option> \n                           <Option value='kookor'>Kookor</Option> \n                           <Option value='baba'>Baba</Option> \n                           <Option value='timo'>Timo</Option> \n                           <Option value='man'>Manoo</Option>  \n                         </Select>\n                         <Card  style={{minHeight:'40vh',marginTop:20,borderRadius:5}}>\n                            <Plot yname='No of Entries'/>\n                         </Card>\n                          \n                        </div>\n                        \n                        \n                        \n                        \n                    </TabPane>\n                    <TabPane tab=\"New Profile\" key=\"3\" >\n                    <Form layout='vertical' onFinish={createOrgUser} style={{display:'flex',flexDirection:'column',height:'55vh',alignItems:'flex-start'}}>\n\n                        <h1 style={{fontSize:'min(35px,8vw)',color:'lightslategray'}}>New Profile</h1> \n\n                        \n                        <Avatar shape='square' size='large' icon={<UserAddOutlined/>} />\n                        <label style={{marginTop:10,color:'lightgray'}}>Profile Name</label>\n                        <Form.Item\n                          name=\"username\"\n                          rules={[{ required: true, message: 'Please input profile name!' }]}\n                        >\n                        <Input\n                        type='text'\n                        placeholder='Enter profile name'\n                        size='large'\n                        value={username}\n                        style={{width:'max(50%,55vw)',margin:5}}\n                        onChange={(e)=>setUsername(e.target.value)}\n                        />  \n                        </Form.Item>\n                        <label style={{marginTop:15,color:'lightgray'}}>Profile Key</label>\n                        <Form.Item\n                        \n                          name=\"password\"\n                          rules={[{ required: true, message: 'Please input profile key!' }]}\n                        >\n                        <Input\n                        type='text'\n                        placeholder='Enter profile key'\n                        size='large'\n                        value={password}\n                        style={{width:'max(45%,50vw)',margin:5}}\n                        onChange={(e)=>setPassword(e.target.value)}\n                        /> \n                        </Form.Item> \n                       <Button type='primary' htmlType='submit' style={{alignSelf:'flex-end',height:45,marginTop:30,backgroundColor:'lightslategray',borderColor:'lightslategray'}}>Create Profile</Button>\n                    </Form>\n                        \n                    </TabPane>\n\n                  \n                    </Tabs>\n                  \n        </div>\n        </div>\n        </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh'}}\n                    status=\"403\"\n                    title=\"Unauthorized Access\"\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\n                    extra={<Button size='large' onClick={()=>window.location.href='/home'} type=\"primary\">Back to Home</Button>}\n                />\n                </>\n                \n            }\n        </div>\n\n    );\n}\nexport default OrgAdminPage;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/form.js",["342","343","344"],"import React, { useState } from \"react\";\nimport { message, Input, Card, Space, Button, Avatar, Form } from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\n// import axios from 'axios';\n// import qs from 'qs';\nimport { OrgLogin, UserLogin } from \"../functions\";\n\nconst OrgForm = ({ onClick, ...props }) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e) => {\n    OrgLogin(username, password)\n  }\n  return (\n    <Card style={{ flex: 0.28, width: 'min(95vw,100%)', border: '1px solid graysmoke', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: 15, backgroundColor: 'white', justifyContent: 'center' }}>\n          <Form layout='vertical' onFinish={handleSubmit}>\n            <Space direction='vertical' size={10}>\n              <h1 style={{ fontSize: 30, fontWeight: 'bold', textAlign: 'left' }}>Org Sign In</h1>\n              <Form.Item\n                label=\"Org Username\"\n                name=\"org_username\"\n                rules={[{ required: true, message: \"Please input the organization's username!\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  className='formInput'\n                  onChange={(e) => { setUsername(e.target.value) }}\n                  placeholder=\"Enter org username\"\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Org Password\"\n                name=\"org_password\"\n                rules={[{ required: true, message: \"Please input the organization's password!\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  className='formInput'\n                  onChange={(e) => { setPassword(e.target.value) }}\n                  placeholder=\"Enter org password\"\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                />\n              </Form.Item>\n              <Button\n                size='large'\n                block\n                style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n                htmlType='submit'\n              >\n                Sign In\n    </Button>\n            </Space>\n          </Form>\n\n    \n\n      <Button size={30} onClick={onClick} type='link' style={{ color: 'lightseagreen', textDecorationStyle: 'solid', textDecorationColor: 'lightseagreen', textDecorationLine: 'underline', textDecorationWidth: 1 }}>Do Not Have An Account?</Button>\n    </Card>\n  );\n\n}\n\nexport default OrgForm;\n\n\n\nexport const UserForm = ({ onClick, ...props }) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  const handleSubmit2 = (e) => {\n    UserLogin(username, password);\n  }\n  return (\n    <Card style={{ flex: 0.28, width: 'min(95vw,100%)', border: '1px solid graysmoke', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: 15, backgroundColor: 'white', justifyContent: 'center' }}>\n     \n          <Form layout='vertical' onFinish={handleSubmit2}>\n            <Space direction='vertical' size={10}>\n              <h1 style={{ fontSize: 32, fontWeight: 'bold', textAlign: 'left' }}>Sign In</h1>\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[{ required: true, message: 'Please input your username!' }]}\n              >\n                <Input\n                  size=\"large\"\n                  className='formInput'\n                  onChange={(e) => { setUsername(e.target.value) }}\n                  placeholder=\"Enter your username\"\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[{ required: true, message: 'Please input your password!' }]}\n              >\n                <Input.Password\n                  size=\"large\"\n                  className='formInput'\n                  onChange={(e) => { setPassword(e.target.value) }}\n                  placeholder=\"Enter your password\"\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                />\n              </Form.Item>\n              <Button\n                size='large'\n                block\n                style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n                htmlType='submit'\n              >\n                Sign In\n         </Button>\n            </Space>\n          </Form>\n         \n\n      <Button size={30} onClick={onClick} type='link' style={{ color: 'lightseagreen', textDecorationStyle: 'solid', textDecorationColor: 'lightseagreen', textDecorationLine: 'underline', textDecorationWidth: 1 }}>Do Not Have An Account?</Button>\n    </Card>\n  );\n\n}\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumCard.js",["345"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagSet.js",["346","347"],"import React,{useState,useEffect} from 'react';\nimport ForumList from './forumList';\nimport { Button, Empty } from 'antd';\nimport {CloseOutlined} from '@ant-design/icons';\nimport TagBox from './tagBox';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport axios from 'axios'\nconst TagSet =(props)=>{\n    const [view,setView]=useState(false);\n    const selectedDiseaseTag=localStorage.getItem('diseaseTag');\n    const selectedLocationTag=localStorage.getItem('communityTag');\n    const [diseases,setDiseases]=useState([])\n    const [communities,setCommunities]=useState([])\n    useEffect(() => {\n        axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    useEffect(() => {\n        axios.get('http://localhost:1337/communities')\n        .then(\n          res =>{\n            if(res.data){\n              setCommunities(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n    const replies = ['Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article'];\n    return(\n        <>\n        {props.disease?\n        <>\n        {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    diseases?\n                    <>\n                    {\n                        diseases.map(disease=><TagBox onClick={()=>{ setView(true);localStorage.setItem('diseaseTag',disease.id)  }} disease={disease.name} numberOfForums={disease.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n                {/* <TagBox onClick={()=>setView(true)} disease='Schistosomiasis'/>\n                <TagBox onClick={()=>setView(true)} disease='Cholera'/>\n                <TagBox onClick={()=>setView(true)} disease='Dysentry'/>\n                <TagBox onClick={()=>setView(true)} disease='Malaria'/>\n                <TagBox onClick={()=>setView(true)} disease='Diarrhoea'/> */}\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                {\n                    selectedDiseaseTag?\n                    <>\n                        <Avatar size='small'  style={{boxShadow:'2px 2px 2px  #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',color:'white',backgroundColor:'darkgreen',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                        <ForumList filter={selectedDiseaseTag} />\n                    </>\n                    :\n                    <Empty/>\n                }\n                \n\n            </div>\n\n        \n        }\n        </>\n        :\n\n        <>\n         {\n            !view?\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\n                {\n                    communities?\n                    <>\n                    {\n                        communities.map(community=><TagBox onClick={()=>{ setView(true);localStorage.setItem('communityTag',community.id)  }} location={community.Community} numberOfForums={community.forums.length}/>)\n                      }\n                      </>\n                    :\n                    <Empty/>\n                }\n            </div>:\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\n                <Avatar size='small'  style={{boxShadow:'3px 3px 2px #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',fontWeight:'bolder',color:'white',backgroundColor:'orange',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\n                <ForumList location={selectedLocationTag}/>\n\n            </div>\n\n        \n        }\n        </>\n    \n        \n        }\n        \n        </>\n    );\n}\nexport default TagSet",["348","349"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/controls/legend/legend.js",["350","351"],"/* import { MapControl, withLeaflet,useLeflet } from \"react-leaflet\";\nimport React from 'react';\nimport L from \"leaflet\";\nimport 'leaflet-choropleth';\nimport {Button} from 'antd';\nimport 'antd/dist/antd.css';\n/* import './App.css' \n\nclass Legend extends MapControl {\n\n  \n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d ===0\n        ? \"#800026\"\n        : d ===1\n        ? \"#FEB24C\"\n        : \"#FFEDA0\";\n    };\n\n    const legend = L.control({ position: \"bottomleft\" });\n    \n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = ['Malaria', 'COVID-19', 'Diabetes'];\n      let labels = [];\n      let from;\n      for (let i = 0; i < grades.length; i++) {\n\n        from=grades[i];\n\n        labels.push(\n\n          '<button type=\"link\" class=\"btn ant-btn\" >' +from+'</button>'\n           \n        );\n      }\n\n      div.innerHTML = labels.join(\"<br><br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend); */\n\nimport React from 'react';\nimport { Card } from 'antd';\nimport { Paper,Select,MenuItem,Typography } from '@material-ui/core';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer,Tooltip,BarChart,Bar} from 'recharts';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction createData(time, prevalence) {\n  return { time, prevalence };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n]\nconst data2 = [\n  createData('Jan', 0),\n  createData('Feb', 1),\n  createData('Mar', 3),\n  createData('Apr', 4),\n  createData('May', 1),\n  createData('Jun', 0),\n  createData('Jul', 0),\n  createData('Aug', 2),\n  createData('Sep', 3),\n  createData('Oct', 1),\n  createData('Nov', 4),\n  createData('Dec', 7),\n]\nconst data3 = [\n  createData('2017', 7),\n  createData('2018', 5),\n]\n\nexport const Plot =(props)=>{\n  const theme = useTheme();\n  return(\n    <div style={{height:'45vh',paddingBottom:20}}>\n    <ResponsiveContainer>\n              <LineChart\n                data={data2}\n                margin={{\n                  top: 16,\n                  right: 16,\n                  bottom: 0,\n                  left: 16,\n                }}\n              >\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} padding={{ left: 30, right: 30 }} />\n                <Tooltip />\n                <YAxis stroke={theme.palette.text.secondary}>\n                  <Label\n                    angle={270}\n                    position=\"left\"\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n                  >\n                   {props.yname}\n                  </Label>\n                </YAxis>\n                <Line type=\"monotone\" dataKey=\"prevalence\" stroke={theme.palette.primary.main} dot={false} />\n              </LineChart>\n      </ResponsiveContainer>  \n\n      </div>\n  );\n\n}\nexport const Plot2 =(props)=>{\n  const theme = useTheme();\n  return(\n    <div style={{height:'45vh',paddingBottom:20}}>\n    <ResponsiveContainer>\n              <BarChart\n                data={data3}\n                margin={{\n                  top: 16,\n                  right: 16,\n                  bottom: 0,\n                  left: 16,\n                }}\n              >\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} padding={{ left: 30, right: 30 }} />\n                <Tooltip />\n                <YAxis stroke={theme.palette.text.secondary}>\n                  <Label\n                    angle={270}\n                    position=\"left\"\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n                  >\n                   {props.yname}\n                  </Label>\n                </YAxis>\n                <Bar type=\"monotone\" dataKey=\"prevalence\"  fill=\"#8884d8\" />\n              </BarChart>\n      </ResponsiveContainer>  \n\n      </div>\n  );\n\n}\nconst Legend =()=>{\n\n\n  const theme = useTheme();\n    const [age, setAge] = React.useState('new');\n    const [caseType,setCaseType]=React.useState('New prevalence')\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        setCaseType(setCaseTypes(event.target.value))\n    };\n    const setCaseTypes=(age)=>{\n      if(age==='new' ){\n        return 'New prevalence'\n      }\n      else if(age==='fatal'){\n        return 'Fatal prevalence'\n      }else{\n        return 'Recovered prevalence'\n      }\n    }; \n  \n    return (\n        <div style={{width:'100%',display:'flex',flexDirection:'column',alignItemns:'center'}}>\n            \n            <Paper style={{height:'15vh',marginBottom:20}} >\n                <span >Legend info goes here</span>\n            </Paper>\n            <Paper>\n                <h3>New and fatal prevalence</h3>\n                <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={age}\n                onChange={handleChange}\n                >\n                <MenuItem value={'new'}>New prevalence</MenuItem>\n                <MenuItem value={'fatal'}>Fatal prevalence</MenuItem>\n                <MenuItem value={'recovered'}>Recovered prevalence</MenuItem>\n                </Select>\n                <Paper style={{height:'45vh',paddingBottom:20}}>\n                <h3 >\n                  {caseType}\n              </h3>  \n              <ResponsiveContainer>\n              <LineChart\n                data={data}\n                margin={{\n                  top: 16,\n                  right: 16,\n                  bottom: 0,\n                  left: 16,\n                }}\n              >\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n                <YAxis stroke={theme.palette.text.secondary}>\n                  <Label\n                    angle={270}\n                    position=\"left\"\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n                  >\n                    prevalence (100)\n                  </Label>\n                </YAxis>\n                <Line type=\"monotone\" dataKey=\"prevalence\" stroke={theme.palette.primary.main} dot={false} />\n              </LineChart>\n      </ResponsiveContainer>                 \n                </Paper>\n\n            </Paper>\n        </div>\n    );\n}\n\nexport default Legend;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/surveyForm.js",["352","353","354","355","356"],"import React,{useEffect,useState} from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\n\n\nexport const SurveyForm = () =>{\n   const [diseases,setDiseases] = useState([]);\n   const [dis,setDis] = useState(0);\n   const [count,setCount] = useState(0);\n   var data = [];\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n\n      const postquestions = async(body) =>{\n        var url = \"questions\";\n         data = await Post(url,body);\n         \n     \n     }\n\n\n      const onFinish = values => {\n       if (dis===0){\n         alert(\"You must choose a disease\");\n         return\n       }\n        values.questions.map(value=>{\n         \n          const body = {\n            disease: dis,\n            question:value.question,\n            Keyword:value.keyword,\n            type:value.type\n          }\n        \n          const bod = JSON.stringify(body)\n       \n          postquestions(bod)\n        })\n      };\n    \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n     \n      \n\n        }\n\n        function handleChanges(value) {\n         \n          setDis(value);\n  \n          }\n     \n        const getDiseases = async() =>{\n          var url = \"diseases\";\n           data = await Get(url);\n          setDiseases(data);\n         \n       \n       }\n\n        useEffect(()=>{\n            getDiseases();\n        \n        },[count])\n\n\n    return(\n       <>\n         \n\n               <Row>\n                   <Col>\n                 \n                   <Select placeholder=\"Disease\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChanges}>\n                     \n                   {diseases.map(disease =>{\n                           return( <Option value={disease.id}>{disease.name}</Option> \n                            )})}\n                  \n                        </Select>\n\n               \n                       \n                       \n                   </Col>\n               </Row> \n           \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"questions\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'question']}\n                           fieldKey={[field.fieldKey, 'question']}\n                           rules={[{ required: true, message: 'Missing question ' }]}\n                         >\n                           <Input placeholder=\"Input question here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'keyword']}\n                           fieldKey={[field.fieldKey, 'keyword']}\n                           rules={[{ required: true, message: 'Missing keyword ' }]}\n                         >\n                           <Input placeholder=\"Input keyword here\" />\n                         </Form.Item>\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'type']}\n                           fieldKey={[field.fieldKey, 'type']}\n                           rules={[{ required: true, message: 'Missing type ' }]}\n                         >\n                              <Select placeholder=\"Select type\" defaultValue={undefined} style={{ width: 120 }} onChange={handleChange}>\n                                    <Option value=\"string\">string</Option>\n                                    <Option value=\"boolean\">boolean</Option>\n                                    <Option value=\"number\">number</Option>\n                                    <Option value=\"radio\">radio</Option>\n                                    <Option value=\"list\">list</Option>\n                                    <Option value=\"listpairs\">listpairs</Option>\n                              </Select>\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Question\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n       </>\n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/entry/entry.js",["357","358","359","360","361"],"import {message,Tabs,Row, Col,Modal,Input, Avatar, Button, Form ,List, Result, Empty, Select} from \"antd\";\nimport React,{useState,useEffect} from \"react\";\nimport {UserOutlined,ExportOutlined} from '@ant-design/icons';\nimport SurveyCard from \"../../components/surveyCard\";\nimport MainHeader from '../../components/mainHeader';\nimport axios from 'axios';\n\nconst {Option}=Select;\nconst MiniCard=(props)=>{\n\n    const [modalState,setModalState]=useState(false);\n    const [questions,setQuestions]=useState([])\n    \n        useEffect(() => {\n            axios.get('http://localhost:1337/questions')\n            .then(\n              res =>{\n                if(res.data){\n                  console.log(res.data)\n                  setQuestions(res.data)\n              }} )\n            .catch((error) => {\n              console.log(error);\n            })\n        },[]);\n    \n    \n\n      let filtered=questions.filter(question=>question.disease?.name===props.text)\n      \n \n    return(\n      \n        <>\n        <Button className='diseaseButton' style={{height:50,margin:10,borderRadius:20,fontWeight:'500'}} onClick={() => setModalState(true)}>\n            {props.text}\n        </Button>\n        <Modal\n        title={props.text}\n        centered\n        style={{ top: '20%'}}\n        width={920}\n        visible={modalState}\n        onOk={() => setModalState(false)}\n        onCancel={() => setModalState(false)}\n      >\n        {\n            filtered?\n            <List\n            className='adminProfiles'\n                    size='medium'\n                    style={{height:'35vh',overflowY:'scroll'}}\n                    dataSource={filtered}\n                    renderItem={item => <List.Item>{item.question}</List.Item>}\n                />\n                :\n                <List/>\n\n        }\n       \n      </Modal>\n      </>\n    );\n}\nconst Entry=()=>{\n    const {TabPane} = Tabs;\n\n    const [surveyUID,setSurveyUID]=useState('')\n    const [selectedCommunity,setSelectedCommunity]=useState();\n    const [asDate,setAsDate]=useState('')\n\n    const [start,setStart]=useState(false)\n    const [step,setStep]=useState(false)\n    const [diseases,setDiseases]=useState([])\n    const [communities,setCommunities]=useState([])\n    useEffect(() => {\n        axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              console.log(res.data)\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n\n    useEffect(() => {\n        axios.get('http://localhost:1337/communities')\n        .then(\n          res =>{\n            if(res.data){\n              console.log(res.data)\n              setCommunities(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n    },[]);\n\n    const error = () => {\n        message.error('This is an error message');\n      };\n\n    const content = (\n        <div style={{display:'flex',flexDirection:'column'}}>\n          <Button type='link' size='large' onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\n        </div>\n      );\n      const [preview,setPreview]=useState(true);\n      const mee=localStorage.getItem('current_user')\n      let style=mee?{}:{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column',alignItems:'center'}\n    return(\n        \n        <div style={style}>\n            <MainHeader/>\n            {\n                mee?\n                <>\n            <Row  sm={24} >\n           \n            <Row className='entryPoint'>\n                <Col md={start?0:4}  className='links' style={{backgroundColor:'#f5f5f580'}}>\n                {/* <Popover content={content} trigger=\"click\">\n                    <Avatar size={70} icon={<UserOutlined/>} style={{marginTop:30,marginBottom:20}}/>\n                </Popover> */}\n                    <Button block  size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(true)}}>Preview</Button>\n                    <Button  block size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(false)}}>Take A Survey</Button>\n                </Col>\n                <Col md={start?24:20} className='entryContent'>\n                    {\n                        preview?\n                        <div style={{padding:35}}>\n                        <h1 style={{fontSize:40,color:'white',textAlign:'left',marginBottom:40}}>Click A Disease to Preview</h1>\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\n                        {\n                            diseases.map(\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\n                                \n                            )\n                        }\n\n                        </div>\n                        \n                        \n                    </div>\n                    :\n                    <div className='selectDisease'>\n                        <Row style={{width:'100%',height:'100%'}}>\n                            \n                            \n                            <Col md={12} className='svgee' >\n\n\n                            </Col>\n                            <Col md={12} flex='auto' style={{backgroundColor:'#4e54c8'}}>\n                                {\n                                    !step?\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\n                                    <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\n                                    {\n                                        diseases.map(\n                                            (disease)=><Button onClick={()=>{\n                                                setStep(disease.questions.length>0?true:false)\n                                                if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\n                                            }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\n                                            \n                                        )\n                                    }\n                                    </div>\n                                    </div>\n                                    \n                                    :\n                                    <>\n                                        {\n                                    start?\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \n                                    \n                                    <Row style={{width:'100%'}}>\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n                                        <SurveyCard surveyUID={surveyUID} asDate={asDate} community={selectedCommunity}/>\n                                        </Col>\n                                    </Row>          \n                                    \n                                </div> \n                                    :\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                                    <Form\n                                        layout='vertical'  \n                                        onFinish={()=>setStart(true)}\n                                        \n                                    >\n                                        \n                                        <Form.Item name=\"surveyUID\" label=\"SurveyUID\" rules={[{ required: true, message: 'Please input a surveyUID!' }]}>\n                                        <Input className='formInput' placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item name=\"ActualSurveyDate\" label=\"Actual Survey Date\" rules={[{ required: true, message: 'Please enter the actual survey date!' }]}>\n                                        <Input className='formInput' type='date' placeholder=\"Enter Actual Survey Date\" size='large' onChange={(e)=>setAsDate(e.target.value)} value={asDate} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item name=\"community\" label=\"Community\" rules={[{ required: true, message: 'Please select a community' }]}>\n                                        <Select className='formInput' value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\n                                            {\n                                                communities?\n                                                communities.map(\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\n                                                )\n                                                :\n                                                null\n                                                \n                                            }\n                                        </Select>\n                                        </Form.Item>\n                                        <Form.Item >\n                                        <Button type=\"primary\" block size='large' htmlType='submit' >Next</Button>\n                                        </Form.Item> \n                                    </Form>\n                                    </div>\n                                    \n                                    </div>\n                                }\n                                    </>\n                                }\n                                \n                                \n                                \n\n                            </Col>\n                        </Row>\n\n\n                    </div>\n                    }\n                    \n                </Col>\n            </Row>\n                 \n            </Row>\n            {//Code for mobile version\n            }\n            {/* <Row className=\"entryMobile\">\n                <div style={{height:'92vh',marginTop:'8vh',width:'100%'}}>\n                <Col style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',height:'10vh'}}  xs={24} md={0}>\n                    <h5 style={{width:'50%'}}>Survey And Preview</h5>\n                </Col>\n               \n               \n                <Tabs style={{width:'100%'}} centered defaultActiveKey=\"1\" >\n                    <TabPane tab=\"Preview\" key=\"1\">\n                    <div className='adminProfiles' style={{padding:35,height:'80vh'}}>\n                        <h6 style={{fontSize:15,color:'gray',textAlign:'center',marginBottom:40}}>Click A Disease to Preview</h6>\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\n                        {\n                            diseases.map(\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\n                                \n                            )\n                        }\n\n                        </div>\n                        \n                        \n                    </div>\n                    </TabPane>\n                    <TabPane tab=\"Take Survey\" key=\"2\">\n                    <div className='adminProfiles' style={{display:'flex',flexDirection:'column',alignItems:'center',height:'80vh'}}>\n                    {\n                                    !step?\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                                    <Form\n                                        layout='vertical'   \n                                    >\n                                        \n                                        <Form.Item label=\"SurveyUID\">\n                                        <Input placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\n                                        </Form.Item>\n                                        <Form.Item label=\"Community\">\n                                        <Select value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\n                                            {\n                                                communities?\n                                                communities.map(\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\n                                                )\n                                                :\n                                                null\n                                                \n                                            }\n                                        </Select>\n                                        </Form.Item>\n                                        <Form.Item >\n                                        <Button type=\"primary\" block size='large' \n                                        onClick={()=>{\n                                            setStep(true)\n                                        }} >Next</Button>\n                                        </Form.Item> \n                                    </Form>\n                                    </div>\n                                    \n                                    </div>\n                                    :\n                                    <>\n                                        {\n                                    start?\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \n                                    \n                                    <Row style={{width:'100%'}}>\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n                                        <SurveyCard surveyUID={surveyUID} community={selectedCommunity}/>\n                                        </Col>\n                                    </Row>          \n                                    \n                                </div> \n                                    :\n                                <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\n                                <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\n                                <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\n                                {\n                                    diseases.map(\n                                        (disease)=><Button onClick={()=>{\n                                            setStart(disease.questions.length>0?true:false)\n                                            if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\n                                        }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\n                                        \n                                    )\n                                }\n                                </div>\n                                </div>\n                                }\n                                    </>\n                                }\n                                \n                    </div>\n                    </TabPane>\n                   \n                </Tabs>\n                </div>\n             \n            </Row> */}\n            </>\n                :\n                <>\n                <Result\n                    style={{marginTop:'8vh',color:'white'}}\n                    status=\"403\"\n                    \n                    title={<span style={{color:'white'}}>403</span>}\n                \n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\n                />\n                </>\n                \n            }\n        </div>\n    );\n};\n\n\nexport default Entry;\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/RecordCases.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"import { Layout,Card,Table, Tag, Space,Col,Row,Input,Select, Empty, Divider,Spin, Button } from 'antd';\nimport {renderToString} from 'react-dom/server'\nimport React,{useState,useEffect} from 'react';\nimport ForumList from '../../components/forumList';\nimport MainHeader from '../../components/mainHeader';\nimport { Plot,Plot2 } from '../../controls/legend/legend';\nimport { jsPDF } from \"jspdf\";\nimport 'jspdf-autotable'\nimport axios from 'axios'\n\nconst doc = new jsPDF('l');\n\nconst RecordCard=(props)=>{\n  console.log(props.disease)\n  console.log(props.data.surveys)\n  let savey;\n  if(props.disease){\n    savey=props.data.surveys.filter(survey=>survey.disease==props.disease)\n  }else{\n    savey=props.data.surveys\n  }\n const handleClick=()=>{\n  if(savey.length>0){\n       localStorage.setItem('expandedCommunity',props.data.id);\n       window.location.href='/details';\n      }\n }\n    return(\n        <Card onClick={handleClick} style={{height:160,margin:10,display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n            <h1 >{props.data.Community}</h1>\n            \n            {\n              savey.length>0?\n              <span>{savey.length} surveys</span>\n              :\n              <span>No surveys</span>\n            }\n            \n            \n\n        </Card>\n    );\n}\n\n\nconst RecordCases=()=>{\n  const [selectedCountry,setSelectedCountry]=useState();\n  const [selectedContinent,setSelectedContinent]=useState();\n  const [selectedDisease,setSelectedDisease]=useState();\n  const [diseases,setDiseases]=useState([])\n  const [filteredCommunities,setFilteredCommunities]=useState([])\n  const [filteredCountries,setFilteredCountries]=useState([])\n  useEffect(() => {\n      axios.get('http://localhost:1337/diseases')\n      .then(\n        res =>{\n          if(res.data){\n            setDiseases(res.data)\n        }} )\n      .catch((error) => {\n        console.log(error);\n      })\n  },[]);\n  const [continents, setContinents] =useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:1337/continents')\n    .then(\n      res =>{\n        if(res.data){\n          setContinents(res.data)\n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\n\n  const [countries, setCountries] =useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:1337/countries')\n    .then(\n      res =>{\n        if(res.data){\n          setCountries(res.data)\n          \n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\nconsole.log(countries)\nconst [communities, setCommunities] =useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:1337/communities')\n    .then(\n      res =>{\n        if(res.data){\n          console.log(res.data)\n          setCommunities(res.data)\n      }} )\n    .catch((error) => {\n      console.log(error);\n    })\n},[]);\n\nconst [regions, setRegions] =useState([]);\nuseEffect(() => {\n  axios.get('http://localhost:1337/regions')\n  .then(\n    res =>{\n      if(res.data){\n        console.log(res.data)\n        setRegions(res.data)\n    }} )\n  .catch((error) => {\n    console.log(error);\n  })\n},[]);\nconst [surveys, setSurveys] =useState([]);\nconst [surveyAnswers,setSurveyAnswers]=useState([])\nuseEffect(() => {\n  axios.get('http://localhost:1337/surveys')\n  .then(\n    res =>{\n      if(res.data){\n        console.log(res.data)\n        setSurveys(res.data)\n    }} )\n  .catch((error) => {\n    console.log(error);\n  })\n},[]);\nconst [districts, setDistricts] =useState([]);\nuseEffect(() => {\n  axios.get('http://localhost:1337/districts')\n  .then(\n    res =>{\n      if(res.data){\n        console.log(res.data)\n        setDistricts(res.data)\n    }} )\n  .catch((error) => {\n    console.log(error);\n  })\n},[]);\n\n\n  const { Search } = Input;\n  const { Option } = Select;\n  const onSearch = value => {\n    console.log(value)\n    setSelectedDisease(1)\n    setFilteredCommunities(communities.filter(community=>community.Community===value))\n\n  };\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n  const handleDisease=(value)=>{\n    setSelectedDisease(value)\n    console.log(value)\n  }\n  const handleCountry=(value)=>{\n    setSelectedCountry(value)\n    let country=countries.filter(country=>country.id===value)\n      let rejiin=country[0]?.regions\n\n      let id=rejiin.map(rej=>rej.id)\n     let dis=districts.filter(district=>id.includes(district.region.id))\n     \n     console.log('districts:',rejiin)\n     if(dis[0]?.communities.length>0){\n     setFilteredCommunities(dis[0]?.communities) \n    }else{\n      setFilteredCommunities([]) \n    }\n      \n    }\n  \n  const onContinentChange=(value)=>{\n    setSelectedContinent(value)\n    setFilteredCountries(countries.filter(country=>country.continent.id===value));\n    console.log(countries.filter(country=>country.continent.id===value));\n    setFilteredCommunities([])\n    setSelectedCountry('');\n    /* if (results.length>0){\n      const nouveau=results.map(result=>({name:result.name}));\n      setCountries(nouveau);\n    }else{\n      setCountries([]);\n    } */\n  }\n \n    const{Header} = Layout;\n    let filteredCommIds=filteredCommunities.map(fc=>fc.id)\n    let neatSurvey=surveys.filter(survey=>filteredCommIds.includes(survey.community.id)&& survey.disease.id===selectedDisease)\n  \n    return(\n        <div className='profilePage' style={{maxWidth:'100vw',backgroundColor:'white',width:'auto'}}>\n          <MainHeader/>\n          <div style={{marginTop:'10vh',width:'100%'}}>\n           <Row style={{position:'fixed',zIndex:1,width:'100%'}}>\n           <Col xs={24} style={{display:\"flex\",justifyContent:\"center\"}}>\n           {\n            communities?\n            <Select \n            showSearch\n            style={{ width: 'min(500px,90vw)' }}\n                    placeholder=\"Search  Communities\"\n                    optionFilterProp=\"children\"\n                    /* onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}*/\n                    onChange={onSearch}\n            \n            >\n              {\n                communities.map(community=><Option value={community.Community}>{community.Community}</Option>)\n              }\n          </Select>\n            :\n            <Select/>\n          }\n           </Col>\n           </Row>\n           <Row style={{padding:\"20px 25% 20px \",marginTop:'2vh'}}>\n           <Col style={{padding:\"10px 0px\"}} xs={24} md={8}>\n          {\n            diseases?\n            <>\n              <label style={{display:'block'}}>Select Disease</label>\n            <Select value={selectedDisease} style={{ width: 120 }} onChange={handleDisease}>\n              {\n                diseases.map(disease=><Option value={disease.id}>{disease.name}</Option>)\n              }\n            </Select>\n            </>\n            :\n            <Select/>\n          }\n           </Col>\n           <Col style={{padding:\"10px 0px\"}} xs={24} md={8}>\n            \n           {\n            continents?\n            <>\n              <label style={{display:'block'}}>Select Continent</label>\n            <Select value={selectedContinent}  style={{ width: 120 }} onChange={onContinentChange}> \n               {\n              continents.map(continent=><Option value={continent.id}>{continent.name}</Option>)\n             }\n          </Select>\n          </>\n            :\n            <Select/>\n          }\n           \n           </Col>\n           <Col style={{padding:\"10px 0px\"}} xs={24} md={8}>\n           {\n            filteredCountries.length>0?\n            <>\n              <label style={{display:'block'}}>Select Country</label>\n              <Select value={selectedCountry}  style={{ width: 120 }} onChange={handleCountry}>\n                {\n                    countries.map((country,index)=><Option key={index} value={country.id}>{country.name}</Option>)\n                  }\n              </Select>\n            </>\n            :\n            <>\n            <label style={{display:'block'}}>Select Country</label>\n            <Select style={{width:120}} />\n            </>\n          }\n           \n           </Col>\n           </Row>\n           <Divider orientation=\"left\">Communities</Divider>\n           \n           <Row style={{padding:30}}>\n\n              {\n                \n                filteredCommunities.length>0?\n                filteredCommunities.map((community,index)=><Col key={index} xs={24} md={6}><RecordCard key={index} disease={selectedDisease} data={community}/></Col>)\n                \n                :\n                <Col xs={24}>\n                  <Empty description='Search for a Community'/>\n                </Col>\n                \n              }\n\n             \n             \n           </Row>\n           <Divider orientation=\"left\">Reports</Divider>\n            {/* <div style={{display:'flex',flexDirection:'row'}}>\n              <div style={{width:300,height:300}}>\n                Report List\n              </div>\n              <div style={{width:300,height:300}}>\n                Report Charts\n              </div>\n            </div> */}\n            <div style={{display:'flex',justifyContent:'center',padding:20}}>\n            {\n                neatSurvey.length>0?\n                  \n            <Button block type='primary' style={{height:150,fontSize:18,borderRadius:15,}} onClick={()=>{\n                \n              \n              let surveyAnswersMap=neatSurvey.map(survey=>survey.answers)\n              let comms=neatSurvey.map(survey=>survey.community);\n              let commselect=comms.map(comm=>([comm.Community,Object.values(comm.location)]))\n              let selectedFews=surveyAnswersMap.map(sams=>sams.filter(sam=>sam.question.Keyword==='Schistosomiasis Prevalence'||sam.question.Keyword==='Population'||sam.question.Keyword==='Schistosomiasis Control Approaches'))\n              let Stakeholders=surveyAnswersMap.map(sams=>sams.filter(sam=>(sam.question.Keyword==='Stakeholders and Activities') ))\n              let STanswers=Stakeholders.map(stakeholder=>stakeholder[0]?.answer?stakeholder[0].answer:'')\n              let selectfilter=selectedFews.map(selectedFew=>selectedFew.map(sfw=>(sfw.answer))) \n\n              let stfinal=STanswers.map(STanswer=>STanswer.length>0?\n\n                  STanswer.map(\n                    sta=>Object.values(sta)\n                  ).join(' | ')\n                :'')\n              \n              let complete=commselect.map((co,index)=>co.concat(selectfilter[index],stfinal[index]))\n              \n              let reportName=(diseases.filter(disease=>disease.id===selectedDisease)[0]?.name+' ' +'SURVEYS IN'+' ' +countries.filter(country=>country.id===selectedCountry)[0]?.name).toUpperCase()\n              /* console.log(complete,Stakeholders,STanswers,stfinal) */\n              var head = [['NAME', 'GEO REFERENCE', 'POPULATION', 'PREVALENCE','CONTROL APPROACHES','STAKEHOLDERS AND ACTIVITIES']]\n              var body = complete \n              doc.text(reportName,10,10)\n              doc.autoTable({ head: head, body: body })\n              doc.save('table.pdf')\n              \n \n            console.log(neatSurvey)\n            } }>PRINT REPORT</Button>\n                :\n                <Empty description='No reports to Print'/>\n            }\n            </div>\n           </div>\n        </div>\n    );\n}\nexport default RecordCases;\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/banner.js",["379","380","381","382","383"],"import React, {useState} from \"react\";\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css'\n\n\nconst Banner =()=>{\n    return(\n        <div className='banner'>\n            <h1>Take A Disease Survey</h1>\n            <Button className='bannerButton'>Start</Button>\n        </div>\n    );\n}\nexport default Banner;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/card.js",["384","385"],"import React,{useState} from 'react';\nimport axios from 'axios'\nimport {Button,Modal,message} from 'antd';\nimport FormInput from './input'\nconst MyCard=({ ...props})=>{\n    const colorCode='#adff2f50';\n    const [showModal,setShowModal] = useState(false);\n    const [reply,setReply] = useState('');\n    let normalUser=JSON.parse(localStorage.getItem('currentUser'))\n    let orgUser=JSON.parse(localStorage.getItem('current_user'))\n    const handleReply=()=>{\n        if(normalUser){\n            \n            axios.post('http://localhost:1337/replies', \n            {\n              user: normalUser.id,\n              forum:props.data.id,\n              reply: reply\n            }\n            )\n              .then(\n                res =>{\n                  if(res.data){\n                   \n                    message.success('Replied Successfully')\n                }}\n          \n              \n              )\n              .catch((error) => {\n                console.log(error);\n              }) \n              \n        }else if(orgUser){\n            axios.post('http://localhost:1337/replies', \n            {\n              org_user: orgUser.id,\n              forum:props.data.id,\n              reply: reply\n            }\n            )\n              .then(\n                res =>{\n                  if(res.data){\n                    console.log(res.data)\n                    message.success('Replied Successfully')\n                    setShowModal(!showModal)\n                }}\n          \n              \n              )\n              .catch((error) => {\n                console.log(error);\n              })\n        }\n    }\n    \n\n    return(\n        \n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\n          \n            <h3 style={{textAlign:'left'}}>{props.data.title}</h3>\n             <p>{props.data.content}</p>\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end'}}>\n            <Button onClick={()=> {\n                if(normalUser||orgUser){\n                    setShowModal(!showModal)\n                }else{\n                    message.error('You must login to reply a forum')\n                }\n            } }>\n            <span>Reply</span>\n            </Button>\n            <Modal\n                        title=\"Enter Your Reply\"\n                        visible={showModal}\n                        onOk={handleReply}\n                        onCancel={()=>{setShowModal(!showModal)}}\n                        >\n                       <FormInput\n                             \n                              name=\"key\"\n                              type=\"textArea\"\n                              value={reply}\n                              onChange={(e)=>{setReply(e.target.value)}}\n                              placeholder=\"Enter Reply\"\n                              error ={false}\n                              required\n                              className=\"formInput\"\n                       />\n                       \n                          </Modal>\n            </div>\n        </div>\n        \n    );\n}\nconst MyReplies=({title,replies,...props})=>{\n    const colorCode='#adff2f50';\n    const listItems = replies.map((reply) =>\n    <p key={reply.id} style={{textAlign:'left'}}>{reply.reply}</p>\n  );\n    return(\n        \n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\n          \n            <h3 style={{textAlign:'left'}}>{title}</h3>\n            <div>{listItems}</div>\n          \n            \n            \n            \n        </div>\n        \n    );\n}\nexport {MyCard};\nexport {MyReplies};","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Map/map.js",["386","387","388","389","390"],"import React from 'react';\nimport L from 'leaflet';\nimport {useMap, MapContainer, Marker,TileLayer,Popup} from 'react-leaflet';\n/* import Boundary from '../../controls/boundary/boundary';\n */import 'leaflet/dist/leaflet.css';\nimport { Paper} from '@material-ui/core'\nimport Choropleth from 'react-leaflet-choropleth'\nimport africa from './../../controls/boundary/africa.geo.json'\nimport axios from 'axios'\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Drawer,List,Button} from 'antd';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction ChangeView({ center, zoom }) {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n}\n\n\n\n\n\n\n\nexport class Mapp extends React.Component {\n  state={\n        lat:7.946527,\n        lng: -1.023194,\n        zoom: 3,\n        json:africa,\n        open:false,\n        activeMarker:{}\n      }\n  \n      \n      \n    \n      \n    render() {\n      console.log(this.props.markers)\n      const style = {\n        fillColor: '#F28F3B',\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.5\n    };\n    const changeCenter=()=>{\n      this.setState(() => ({\n        lat:51.505, \n        \n        lng:-0.09\n      }));\n      console.log(this.state.lat,this.state.lng)\n    }\n      \n    let showingFilter=this.props.markers.map(marker=>marker.answers.filter( answer=>answer.question.Keyword==='Population'||answer.question.Keyword==='Schistosomiasis Prevalence'||answer.question.Keyword==='Schistosomiasis Control Approaches'||answer.question.Keyword==='Stakeholders and Activities'))\n\n    let prevalence=this.props.markers.map(marker=>marker.answers.filter(ans=>ans.question.Keyword==='Schistosomiasis Prevalence'))\n    let prevv=prevalence[0]\n      return (\n      \n        <MapContainer center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} scrollWheelZoom={false} >\n          <ChangeView center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} /> \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url='https://a.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          /> \n          {\n          this.props.markers.map(marker => \n          <Marker   key={marker.id} position={[marker.community.location.lat, marker.community.location.long]}>\n               <Drawer\n                title=\"Details\"\n                placement=\"right\"\n                width=\"40%\"\n                closable={true}\n                onClose={() => this.setState(() => ({\n                  open:false\n                }))}\n                visible={this.state.open}\n              >\n            <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}}  >\n            <h1 style={{textAlign:'left'}}>Recorded for {marker.community.Community}</h1>\n            <span style={{textAlign:'left',color:'slateblue'}}>{marker.published_at?.slice(0,10)}</span>\n            \n            <List\n            size=\"large\"\n            style={{width:'100%'}}\n            dataSource={showingFilter[0]}\n            renderItem={mark => <List.Item >\n            <h3 style={{textAlign:'left'}}>{mark.question.Keyword}</h3>&nbsp;<span style={{textAlign:'left',color:'grey'}}>{\n\n                    typeof(mark.answer)==='object'?\n                      typeof(mark.answer[0])==='object'?\n                        mark.answer.map(dat=>Object.values(dat)).join(' | ')\n                      :\n                        mark.answer.join(',')\n                    :\n                    mark.answer\n\n            }</span>\n            </List.Item>} \n          />\n    \n              <Button block size='large' onClick={()=>{\n               \n                localStorage.setItem('expandedCommunity',marker.community.id)\n                localStorage.setItem('selectedYear',marker.ActualSurveyDate)\n                window.location.href='/details'\n              }}  >See More</Button>\n        </div>\n        \n      </Drawer>\n            <Popup>\n              <h3>{marker.community.Community}</h3>\n              <h1>\n                {\n                  prevv[0]?.answer\n                }\n              </h1>\n              <Button variant='outlined' onClick={() => {\n                 console.log(prevalence[0].id)\n                this.setState(() => ({open:true}))\n                \n                }} >View Details</Button>\n            </Popup>\n          </Marker>)\n          }\n       \n        </MapContainer>\n       \n     \n  \n      );\n    }\n  }","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/diseaseForm.js",["391","392","393","394","395","396","397"],"import React from 'react'\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Get,Post} from '../../api'\nexport const DiseaseForm = () =>{\n\n    const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      };\n\n      const postdiseases = async(body) =>{\n        var url = \"diseases\";\n         const data = await Post(url,body);\n         \n     \n     }\n\n\n      const onFinish = values => {\n        console.log('Received values of form:', values);\n        values.diseases.map(value=>{\n          const body = {\n            name:value.disease,\n          \n          } \n          const bod = JSON.stringify(body)\n          postdiseases(bod)\n        })  \n      };\n    \n\n      const { Option } = Select;\n\n\n        function handleChange(value) {\n        console.log(`selected ${value}`);\n        }\n\n\n    return(\n       <>\n         \n\n             \n           \n\n\n\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n             <Row>\n                \n               <Form.List name=\"diseases\">\n                 {(fields, { add, remove }) => (\n                   <>\n                    <Col xs=\"24\" md=\"12\">\n                     {fields.map(field => (\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\n                         <Form.Item\n                           {...field}\n                           name={[field.name, 'disease']}\n                           fieldKey={[field.fieldKey, 'disease']}\n                           rules={[{ required: true, message: 'Missing disease ' }]}\n                         >\n                           <Input placeholder=\"Input disease here\" />\n                         </Form.Item>\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\n                       </Space>\n                     ))}\n                     </Col>\n                     <Col xs=\"24\" md=\"12\">\n                     <Form.Item>\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                         Add Disease\n                       </Button>\n                     </Form.Item>\n                     </Col>\n                   </>\n                 )}\n               </Form.List>\n             <Col md=\"12\" xs=\"24\">\n             <Form.Item>\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\n                   Submit\n                 </Button>\n               </Form.Item>\n             </Col>\n             <Col md=\"12\" xs=\"24\">\n            \n             </Col>\n              \n               </Row>\n             </Form>\n       </>\n    );\n\n    \n  \n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/homePage/home.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"import {Modal, Button, Space,List ,Layout,Row,Col, Card,Slider,Drawer} from 'antd'\nimport React ,{useState,useEffect} from 'react';\nimport {Paper,Badge,Select,MenuItem,Typography,FormControl,InputLabel} from '@material-ui/core';\nimport axios from 'axios';\nimport Mappings, { Mapp } from '../Map/map'\nimport './home.css'\nimport MainHeader from '../../components/mainHeader';\n\nconst data=[\n    {\n        question:'Name Of Comunity',\n        answer:'Accra',\n     \n    },\n    {\n        question:'Community Location',\n        answer:'1.00,3.560',\n       \n    },\n    {\n        question:'Population',\n        answer:'10,000',\n    },\n]\n\n\nconst Home=()=>{\n  const [markers,setMarkers]=useState([])\n  const [diseases,setDiseases]=useState([])\n    useEffect(() => {\n      async function fetchDiseases(){\n        await axios.get('http://localhost:1337/diseases')\n        .then(\n          res =>{\n            if(res.data){\n              setDiseases(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n\n      }\n      fetchDiseases();\n        \n    },[]);\n    const [surveys,setSurveys]=useState([])\n    useEffect(() => {\n      async function fetchSurveys(){\n        await axios.get('http://localhost:1337/surveys')\n        .then(\n          res =>{\n            if(res.data){\n\n              setSurveys(res.data.filter(dat=>dat.evaluated===true))\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n\n      }\n      fetchSurveys();\n        \n    },[]);\n    const [continents, setContinents] =useState([]);\n    useEffect(() => {\n      async function fetchContinents(){\n        await axios.get('http://localhost:1337/continents')\n        .then(\n          res =>{\n            if(res.data){\n              setContinents(res.data)\n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n      fetchContinents();\n      \n  },[]);\n  \n    const [countries, setCountries] =useState([]);\n    useEffect(() => {\n      async function fetchCountries(){\n        await axios.get('http://localhost:1337/countries')\n        .then(\n          res =>{\n            if(res.data){\n              setCountries(res.data)\n            \n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n\n      fetchCountries();\n      \n  },[]);\n  const [regions, setRegions] =useState([]);\n    useEffect(() => {\n      async function fetchRegions(){\n        await axios.get('http://localhost:1337/countries')\n        .then(\n          res =>{\n            if(res.data){\n              setRegions(res.data)\n            \n          }} )\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n\n      fetchRegions();\n      \n  },[]);\n  const [districts, setDistricts] =useState([]);\n  useEffect(() => {\n  axios.get('http://localhost:1337/districts')\n  .then(\n    res =>{\n      if(res.data){\n        console.log(res.data)\n        setDistricts(res.data)\n    }} )\n  .catch((error) => {\n    console.log(error);\n  })\n},[]);\n    const [hidden,setHidden]=useState(true);\n   const [state, setState] = useState({\n    isPaneOpen: false,\n    isPaneOpenLeft: false,\n    visible:false,\n    secondPaneOpen:false,\n    thirdPaneOpen:false\n  });\n  const [continent, setContinent] =useState('');\n  const [center, setCenter] =useState({});\n  const [zoom, setZoom] =useState();\n  const [country, setCountry] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [year,setYear]=useState(2020)\n    const [disease, setDisease] =useState(``);\n    const handleChange = (event) => {\n      setDisease(event.target.value);\n      let byYears;\n      \n      if(country!=''){\n        let count=countries.filter(country=>country.name===country);\n        let rejiin=count[0]?.regions\n        let id=rejiin?.map(rej=>rej.id)\n        let dis=id?districts.filter(district=>id.includes(district.region.id)):[]\n        let comms=dis?.map(di=>di.communities)\n      if(markers.length>0){\n        let oldMarkers=markers;\n        if(comms.length>0){\n          let commIds=comms[0]?.map(comm=>comm.id)\n          let byComms=oldMarkers.filter(oldMarker=>commIds.includes(oldMarkers.community.id))\n          byYears=byComms.filter(byComm=>byComm.ActualSurveyDate.includes(year))\n          setMarkers(byYears.filter(byYear=>byYear.disease.id==event.target.value))\n        }else{\n          setMarkers([])\n        }\n        \n      }else{\n        if(comms.length>0){\n          let commIds=comms[0]?.map(comm=>comm.id)\n          let byComms=surveys.filter(survey=>commIds.includes(survey.community.id))\n          byYears=byComms.filter(byComm=>byComm.ActualSurveyDate.includes(year))\n          console.log(byYears)\n          setMarkers(byYears.filter(byYear=>byYear.disease.id==event.target.value))\n        }else{\n          setMarkers([])\n        }\n      }\n    }else{\n      setMarkers([])\n    }\n      \n    \n  };\n  const handleContinent = (event) => {\n    setContinent(event.target.value);\n    localStorage.removeItem('currentContinent')\n    localStorage.setItem('currentContinent',JSON.stringify(continents.filter(continent=>continent.name==event.target.value)))\n    let contt=continents.filter(continent=>continent.name==event.target.value)\n    setFilteredCountries(countries.filter(country=>country.continent.name===event.target.value))\n    let cent=contt[0]?.center\n    setCountry('')\n    setCenter(cent)\n    setZoom(contt[0]?.zoom)\n    setMarkers([])\n\n};\nconst handleCountry=(event)=>{\n    setCountry(event.target.value);\n    let count=countries.filter(country=>country.name===event.target.value);\n    setCenter(count[0]?.center)\n    setZoom(count[0]?.zoom)\n    if(disease){\n      let yearSurveys=surveys.filter(survey=>survey.disease.id==disease)\n      let rejiin=count[0]?.regions\n        \n      let id=rejiin.map(rej=>rej.id)\n      let dis=districts.filter(district=>id.includes(district.region.id))\n      \n      let comms=dis.map(di=>di.communities)\n      \n      if(comms.length>0){\n        let commIds=comms[0]?.map(comm=>comm.id)\n        let byCommIds=yearSurveys?.filter(yearSurvey=>commIds.includes(yearSurvey.community.id))\n      console.log(byCommIds)\n      setMarkers(byCommIds?.filter(byCommId=>byCommId.ActualSurveyDate.includes(year)))\n      }else{\n        setMarkers([])\n      }\n      \n    }\n    \n\n}\n\n \n  const {Header,Footer}=Layout;\n\n  \n \n  const marks = {\n    2015: '2015',\n    2016: '2016',\n    2017: '2017',\n    2018:'2018',\n    2019:'2019',\n    2020:'2020',\n    2021:'2021'\n\n  };\n  console.log(markers)\n\n    return(\n      <div>\n        <Drawer\n        title=\"Details\"\n        placement=\"right\"\n        width='90%'\n        closable={true}\n        onClose={() => setState({ thirdPaneOpen: false })}\n        visible={state.thirdPaneOpen}\n      >\n        <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}} contenteditable >\n            <h1 style={{textAlign:'left'}}>Recorded for Accra</h1>\n            <span style={{textAlign:'left'}}>20th Nov 2019</span>\n            \n            <List\n            size=\"large\"\n            style={{width:'100%'}}\n            dataSource={data}\n            renderItem={dat => <List.Item >\n            <h3 style={{textAlign:'left'}}>{dat.question}:<span style={{textAlign:'left',color:'grey'}}>{dat.answer}</span></h3>\n            </List.Item>}\n          />\n    \n\n        </div>\n\n      </Drawer>\n         \n      <Row style={{height:\"5vh\"}}>\n      <Col xs={24}><MainHeader/></Col>\n      </Row>\n      <Col xs={24} md={0} style={{marginTop:35}}>\n      <Row  style={{height:'20vh'}} justify='center'  >\n        \n        <Col xs={10} md={0} style={{height:'100%'}} >\n        <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                <b>Total Cases</b>\n                <h1 style={{color:'red',fontWeight:'bold'}}>6093</h1>\n        </Card>\n        </Col>\n        <Col xs={10} md={0} style={{height:'100%'}}>\n          <Row style={{height:'50%'}}>\n              <Col xs={24} md={0} style={{height:'100%'}}>\n                <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                  <span>Active</span>\n                 <h3 style={{color:'red'}}>5093</h3>\n                </Card>\n              </Col>\n          </Row>\n          <Row style={{height:'50%'}}>\n            <Col xs={24} md={0} style={{height:'100%'}}>\n              <Card hoverable style={{height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\n              <span>Recovered</span>\n                <h3 style={{color:'seagreen'}}>1000</h3>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n       \n      </Row>\n      </Col>\n    \n      <Row style={{padding:\"10px 0\"}} sm={0}>\n      <Col xs={18} md={0} style={{flex:\"0 0 64%\",paddingRight:\"5px\"}}>\n       <Button onClick={() => setState({ isPaneOpenLeft: !state.isPaneOpenLeft })} style={{fontSize:\"12px\"}}>\n         Change Disease/Location\n       </Button>\n      \n      </Col>\n      <Col xs={6} md={0}>\n      <Button onClick={()=>setState({thirdPaneOpen:!state.thirdPaneOpen})} style={{fontSize:\"12px\"}}>\n         View Details \n       </Button>\n      </Col>\n      <Drawer\n      title=\"Change Disease/Location\"\n      placement=\"bottom\"\n      height='50%'\n      closable={true}\n      onClose={() => setState({ isPaneOpenLeft: false })}\n      visible={state.isPaneOpenLeft}\n      >\n       \n        <div style={{zIndex:10000000000}}>\n        <div style={{display:'flex',alignSelf:'center',marginTop:15,flexDirection:'column',height:'20vh',justifyContent:'space-between',alignItems:'center'}}>\n        {diseases?\n        <FormControl style={{width:'80%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Disease'\n        \n          value={disease}\n          onChange={handleChange}\n        >\n          {\n            diseases.map((disease,index)=><MenuItem key={index} value={disease.id}>{disease.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {continents?\n         <FormControl style={{width:'80%',margin:2}}>\n         <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Continent'\n     \n          value={continent}\n          onChange={handleContinent}\n        >\n          {\n            continents.map((continent,index)=><MenuItem key={index} value={continent.name}>{continent.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {filteredCountries?\n        <FormControl style={{width:'80%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={country}\n          \n          onChange={handleCountry}\n        >\n          {\n            filteredCountries.map((filteredCountry,index)=><MenuItem key={index} value={filteredCountry.name}>{filteredCountry.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'80%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n                 <Select/>\n          </FormControl>\n         \n        }\n       <Button style={{marginTop:\"10px\"}} onClick={() => setState({ isPaneOpenLeft: !state.isPaneOpenLeft })}>\n         Done\n       </Button>\n        </div>\n       </div>\n      </Drawer>\n      </Row>\n   \n      \n     \n      <Row style={{height:'90vh'}}>\n        <Col xs={0} md={6} flex='250px'>\n      \n     \n        <Paper variant=\"outlined\"  style={{padding:15,margin:10}} >\n        <Typography style={{fontweight:'500',fontSize: 17,lineHeight:2,textAlign:'left'}} noWrap>\n            Total Confirmed Cases\n          </Typography>\n          <Typography style={{fontSize: 12,color:'grey',textAlign:'left'}} noWrap>\n            Updated 25 mins ago\n          </Typography>\n          <Typography variant='h3' style={{color:'red',textAlign:'left',lineHeight:1.5,}} noWrap>\n            6,092\n          </Typography>\n\n       <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Active Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={4133} max={9999} color=\"secondary\"  >\n          </Badge>\n         </div>  \n         <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Recorded Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={1733} max={9999} color=\"primary\"  >\n          </Badge>\n         </div>  \n         <div style={{display:'flex',flexDirection:'row',justifyContent:'space-around',width:'80%',marginBottom:\"10px\"}}>\n      \n          <Typography style={{fontSize: 13,textAlign:'left'}} noWrap>\n            Fatal Cases\n          </Typography>\n          <Badge style={{marginTop:\"10px\"}}  badgeContent={31} max={9999} color=\"secondary\"  >\n          </Badge>\n         </div>  \n         \n\n        </Paper>\n      \n       \n        <div style={{display:'flex',alignSelf:'center',marginTop:15,flexDirection:'column',height:'18vh',justifyContent:'space-between',alignItems:'center'}}>\n        {diseases?\n        <FormControl style={{width:'90%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Disease'\n        \n          value={disease}\n          onChange={handleChange}\n        >\n          {\n            diseases.map((disease,index)=><MenuItem key={index} value={disease.id}>{disease.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Disease</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {continents?\n         <FormControl style={{width:'90%',margin:2}}>\n         <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label='Select Continent'\n     \n          value={continent}\n          onChange={handleContinent}\n        >\n          {\n            continents.map((continent,index)=><MenuItem key={index} value={continent.name}>{continent.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Continent</InputLabel>\n                 <Select/>\n          </FormControl>\n        }\n        {filteredCountries?\n        <FormControl style={{width:'90%',margin:2}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n        <Select \n        variant=\"outlined\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={country}\n          \n          onChange={handleCountry}\n        >\n          {\n            filteredCountries.map((filteredCountry,index)=><MenuItem key={index} value={filteredCountry.name}>{filteredCountry.name}</MenuItem>)\n          }\n        </Select>\n        </FormControl>\n          :\n          <FormControl style={{width:'90%',margin:2}}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\" style={{paddingLeft:5}}>Select Country</InputLabel>\n                 <Select/>\n          </FormControl>\n         \n        }\n\n        \n\n        </div>\n       \n       \n\n        </Col>\n\n        <Col  flex='auto' style={{position:'relative'}}>       \n                   <Mapp center={center} markers={markers} zoom={zoom} onClick={()=>setState({secondPaneOpen:!state.secondPaneOpen})}/>  \n                  <div style={{position:'absolute',bottom:'0.2%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center', left:1 ,margin:'50px', width:'min(300px,70vw)', backgroundColor:'white',padding:10,borderRadius:15}}>\n                    <h4 style={{textAlign:'left',width:'100%'}}>Year</h4>\n                    <Slider min={2015} max={2021} \n                    onChange={(value)=>{\n                      setYear(value);\n                      if(country!=''){\n                        let count=countries.filter(countr=>countr.name===country);\n                        let rejiin=count[0]?.regions\n                        let id=rejiin?.map(rej=>rej.id)\n                        let dis=id?districts.filter(district=>id.includes(district.region.id)):[]\n                        let comms=dis?.map(di=>di.communities)\n                        \n                        if(comms.length>0){\n                          let commIds=comms[0]?.map(comm=>comm.id)\n                          let byCommIds=surveys.filter(survey=>commIds.includes(survey.community.id))\n                          if(disease){\n                            let yearSurveys=byCommIds.filter(byCommId=>byCommId.disease.id==disease)\n                            setMarkers(yearSurveys?.filter(yearSurvey=>yearSurvey.ActualSurveyDate.includes(value)))\n                          }\n                        }else{\n                          setMarkers([])\n                        }\n                        }else{\n                          setMarkers([])\n                        }\n                        \n                      \n                      \n                      \n                      \n                      }} tooltipPlacement='bottom' tooltipVisible={true} style={{width:'100%',color:'wheat'}} defaultValue={2020}/>\n                  </div>  \n        </Col>\n        \n        \n\n        </Row>\n\n\n      \n            \n      </div>\n   \n    );\n    \n}\n    export default Home;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/tagBox.js",["415"],"import React from 'react';\n\nconst TagBox=({onClick,...props})=>{\n    const colorCode='#adff2f50';\n    return(\n        \n        <div onClick={onClick} style={{flex:'25%',maxWidth:250,margin:20,height:'auto',minHeight:200,borderWidth:'3px',borderStyle:'solid',borderColor:'lightsteelblue',borderRadius:12,padding:25}}>\n           {props.disease?\n            <>\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.disease}</h4>\n            <p>\n                These are all the forums on {props.disease}\n            </p>\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\n            </div>\n            </>:\n            <>\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.location}</h4>\n            <p>\n                These are all the forums at {props.location}\n            </p>\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\n            </div>\n            \n            </>\n            }\n            \n        </div>\n    );\n}\nexport default TagBox;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/survey/survey.js",[],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/endUserProtected.js",[],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/signUpCard.js",["416","417","418","419","420","421","422"],"import React, { useState } from \"react\";\nimport { Input, Card, Space, Button, Avatar, Select, Form } from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport { UserOutlined, LockOutlined, KeyOutlined, MailOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport { IconButton } from \"@material-ui/core\";\nimport axios from 'axios'\nimport { orgSignUp, userSignUp } from \"../functions\";\nconst { Option } = Select;\nconst SignUpCard = ({ onClick, ...props }) => {\n\n  // The End User states\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  //User Form Submission\n  const handleUserSubmit = (e) => {\n    userSignUp(email, password, username)\n  }\n\n  return (\n    <Card style={{ flex: 0.28, width: 'min(95vw,100%)', border: '1px solid graysmoke', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: 15, backgroundColor: 'white', justifyContent: 'center' }}>\n      {/* This is the sign up form for the end users */}\n      <Form layout='vertical' onFinish={handleUserSubmit}>\n\n\n        <h1 style={{ fontSize: 30, fontWeight: 'bold', textAlign: 'left' }}>Sign Up</h1>\n\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input\n            size=\"small\"\n            className='formInput'\n            value={username}\n            onChange={(e) => { setUsername(e.target.value) }}\n            placeholder=\"Enter your username\"\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Please input your email!' }]}\n        >\n          <Input\n            size=\"small\"\n            className='formInput'\n            value={email}\n            onChange={(e) => { setEmail(e.target.value) }}\n            placeholder=\"Enter your email\"\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n\n          <Input.Password\n            size=\"small\"\n            value={password}\n            className='formInput'\n            onChange={(e) => { setPassword(e.target.value) }}\n            placeholder=\"Enter your password\"\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Button\n          size='small'\n          block\n          style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n          htmlType='submit'\n        >\n          Sign Up\n            </Button>\n\n      </Form>\n\n\n\n      <Button onClick={onClick} size={30} type='link' style={{ color: 'lightseagreen', textDecorationStyle: 'solid', textDecorationColor: 'lightseagreen', textDecorationLine: 'underline', textDecorationWidth: 1 }}>Have an Account?</Button>\n    </Card>\n\n  );\n\n}\n\nexport default SignUpCard;\n\n\n\nexport const OrgSignUpCard = ({ onClick, ...props }) => {\n  // The Org states\n  const [orgName, setOrgName] = useState('');\n  const [orgEmail, setOrgEmail] = useState('');\n  const [orgPassword, setOrgPassword] = useState('');\n\n  //Org Form Submission\n  const handleSubmit = (e) => {\n    orgSignUp(orgEmail, orgPassword, orgName);\n  }\n\n\n  return (\n    <Card style={{ flex: 0.28, width: 'min(95vw,100%)', border: '1px solid graysmoke', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: 15, backgroundColor: 'white', justifyContent: 'center' }}>\n\n      {/* Org Sign Up Form */}\n\n\n      <Form layout='vertical' onFinish={handleSubmit}>\n\n        <h1 style={{ fontSize: 30, marginRight: 10, fontWeight: 'bold', textAlign: 'left' }}>Org Sign Up</h1>\n\n\n\n        <Form.Item\n          label=\"Org Name\"\n          name=\"org_name\"\n          rules={[{ required: true, message: 'Please enter org name!' }]}\n        >\n          <Input\n            size=\"small\"\n            className='formInput'\n            value={orgName}\n            onChange={(e) => { setOrgName(e.target.value) }}\n            placeholder=\"Enter org name\"\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Org Email\"\n          name=\"org_email\"\n          rules={[{ required: true, message: 'Please enter org email!' }]}\n        >\n          <Input\n            size=\"small\"\n            value={orgEmail}\n            className='formInput'\n            onChange={(e) => { setOrgEmail(e.target.value) }}\n            placeholder=\"Enter org email\"\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Org Password\"\n          name=\"org_password\"\n          rules={[{ required: true, message: 'Please enter org password!' }]}\n        >\n          <Input.Password\n            size=\"small\"\n            className='formInput'\n            value={orgPassword}\n            onChange={(e) => { setOrgPassword(e.target.value) }}\n            placeholder=\"Enter org password\"\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          />\n        </Form.Item>\n        <Button\n          size='small'\n          block\n          style={{ height: 55, backgroundColor: '#247aeb', color: 'white', marginTop: 20, borderRadius: 8 }}\n          htmlType='submit'\n        >\n          Sign Up\n            </Button>\n\n      </Form>\n\n\n\n      <Button onClick={onClick} size={30} type='link' style={{ color: 'lightseagreen', textDecorationStyle: 'solid', textDecorationColor: 'lightseagreen', textDecorationLine: 'underline', textDecorationWidth: 1 }}>Have an Account?</Button>\n    </Card>\n\n  );\n\n}\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/forumList.js",["423","424","425","426"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/components/miniheader.js",["427","428","429","430","431"],"import React, {useState} from \"react\";\nimport { Input, Card, Button, Popover ,Avatar, Divider} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './components.css';\nimport {EditFilled ,UserOutlined,ExportOutlined} from '@ant-design/icons';\n\n\nexport const MiniMiniHeader=(props)=>{\n  const content = (\n      <div style={{display:'flex',flexDirection:'column'}}>\n        <Button className='popoverButtons' type='link' size='large' onClick={()=>{\n          if(localStorage.getItem('current_user')){\n            window.location.href='/profile'\n          }else if(localStorage.getItem('currentUser')){\n            window.location.href='/userprofile'\n          }else if(localStorage.getItem('org_admin')){\n            window.location.href='/orgadmin'\n          }\n          }}><UserOutlined/>Profile</Button>\n        <Button className='popoverButtons' type='link' size='large' danger \n        onClick={()=>{\n          localStorage.removeItem('current_user');\n          localStorage.removeItem('currentUser');\n          localStorage.removeItem('org_admin');\n          window.location.href='/';\n        }}><ExportOutlined/>Logout</Button>\n      </div>\n    );\n  return(\n      <div>\n          \n          <Popover style={{zIndex:100000000000000}} content={content} placement='bottomLeft'  trigger='hover'>\n                  <Avatar size={35} icon={<UserOutlined/>}/>\n        </Popover>\n              \n      </div>\n  );\n}\n\n\nconst MiniHeader=()=>{\n    const content = (\n        <div style={{display:'flex',flexDirection:'column'}}>\n          <Button type='link' size='large' style={{color:'#6461ff'}} onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\n        </div>\n      );\n    return(\n        <div className=\"miniHeaderSection\">\n            \n            <Popover content={content} trigger=\"click\">\n\n                    <Avatar size={70} icon={<UserOutlined/>}/>\n        </Popover>\n                \n        </div>\n    );\n}\nexport default MiniHeader;","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/userlogin.js",["432"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/Login/orglogin.js",["433"],"import React, {useState} from 'react';\nimport OrgForm from '../../components/form';\nimport { OrgSignUpCard } from '../../components/signUpCard';\nimport './styles.css'\n\nconst OrgLogin =()=>{\n    const image=require('../../assets/whiteGhana.png')\n    const [login,setLogin]=useState(true);\n    return(\n        <div className='login' style={{minHeight:'100vh',height:'auto',display:'flex',justifyContent:'center',alignItems:'center'}}>\n                {\n                    login?\n                    <OrgForm onClick={() =>{setLogin(false)}}/> \n                    :\n                    <OrgSignUpCard onClick={() =>{setLogin(true)}}/> \n                }\n                \n                              \n\n        </div>\n    );\n}\nexport default OrgLogin;\n\n","/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/pages/detailsPage/caseRoutes.js",["434"],"/Users/mark/Desktop/samtvapplication/noguchi-system/noguchi/noguchi-web/src/serviceWorker.js",[],{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"439","line":2,"column":38,"nodeType":"437","messageId":"438","endLine":2,"endColumn":44},{"ruleId":"435","severity":1,"message":"440","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"435","severity":1,"message":"441","line":14,"column":11,"nodeType":"437","messageId":"438","endLine":14,"endColumn":17},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","replacedBy":"445"},{"ruleId":"435","severity":1,"message":"446","line":1,"column":29,"nodeType":"437","messageId":"438","endLine":1,"endColumn":32},{"ruleId":"435","severity":1,"message":"436","line":1,"column":34,"nodeType":"437","messageId":"438","endLine":1,"endColumn":39},{"ruleId":"435","severity":1,"message":"447","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":14},{"ruleId":"435","severity":1,"message":"448","line":94,"column":10,"nodeType":"437","messageId":"438","endLine":94,"endColumn":20},{"ruleId":"435","severity":1,"message":"449","line":94,"column":22,"nodeType":"437","messageId":"438","endLine":94,"endColumn":35},{"ruleId":"450","severity":1,"message":"451","line":114,"column":3,"nodeType":"452","endLine":114,"endColumn":5,"suggestions":"453"},{"ruleId":"450","severity":1,"message":"454","line":138,"column":3,"nodeType":"452","endLine":138,"endColumn":5,"suggestions":"455"},{"ruleId":"456","severity":1,"message":"457","line":143,"column":95,"nodeType":"458","messageId":"459","endLine":143,"endColumn":97},{"ruleId":"435","severity":1,"message":"441","line":154,"column":10,"nodeType":"437","messageId":"438","endLine":154,"endColumn":16},{"ruleId":"442","replacedBy":"460"},{"ruleId":"444","replacedBy":"461"},{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"462","line":2,"column":55,"nodeType":"437","messageId":"438","endLine":2,"endColumn":63},{"ruleId":"435","severity":1,"message":"463","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":13},{"ruleId":"435","severity":1,"message":"440","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":14},{"ruleId":"435","severity":1,"message":"464","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":17},{"ruleId":"435","severity":1,"message":"465","line":9,"column":8,"nodeType":"437","messageId":"438","endLine":9,"endColumn":17},{"ruleId":"435","severity":1,"message":"466","line":28,"column":24,"nodeType":"437","messageId":"438","endLine":28,"endColumn":38},{"ruleId":"467","severity":1,"message":"468","line":35,"column":14,"nodeType":"469","messageId":"470","endLine":35,"endColumn":16},{"ruleId":"435","severity":1,"message":"471","line":50,"column":12,"nodeType":"437","messageId":"438","endLine":50,"endColumn":19},{"ruleId":"435","severity":1,"message":"472","line":51,"column":12,"nodeType":"437","messageId":"438","endLine":51,"endColumn":23},{"ruleId":"435","severity":1,"message":"473","line":52,"column":12,"nodeType":"437","messageId":"438","endLine":52,"endColumn":23},{"ruleId":"435","severity":1,"message":"441","line":53,"column":11,"nodeType":"437","messageId":"438","endLine":53,"endColumn":17},{"ruleId":"435","severity":1,"message":"439","line":3,"column":52,"nodeType":"437","messageId":"438","endLine":3,"endColumn":58},{"ruleId":"435","severity":1,"message":"474","line":3,"column":67,"nodeType":"437","messageId":"438","endLine":3,"endColumn":72},{"ruleId":"435","severity":1,"message":"475","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":19},{"ruleId":"435","severity":1,"message":"476","line":4,"column":21,"nodeType":"437","messageId":"438","endLine":4,"endColumn":25},{"ruleId":"435","severity":1,"message":"477","line":4,"column":27,"nodeType":"437","messageId":"438","endLine":4,"endColumn":32},{"ruleId":"435","severity":1,"message":"478","line":4,"column":34,"nodeType":"437","messageId":"438","endLine":4,"endColumn":39},{"ruleId":"435","severity":1,"message":"479","line":4,"column":41,"nodeType":"437","messageId":"438","endLine":4,"endColumn":46},{"ruleId":"435","severity":1,"message":"480","line":4,"column":48,"nodeType":"437","messageId":"438","endLine":4,"endColumn":67},{"ruleId":"435","severity":1,"message":"481","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":14},{"ruleId":"435","severity":1,"message":"447","line":5,"column":18,"nodeType":"437","messageId":"438","endLine":5,"endColumn":22},{"ruleId":"435","severity":1,"message":"482","line":6,"column":9,"nodeType":"437","messageId":"438","endLine":6,"endColumn":19},{"ruleId":"435","severity":1,"message":"483","line":6,"column":21,"nodeType":"437","messageId":"438","endLine":6,"endColumn":33},{"ruleId":"435","severity":1,"message":"484","line":6,"column":34,"nodeType":"437","messageId":"438","endLine":6,"endColumn":48},{"ruleId":"435","severity":1,"message":"485","line":6,"column":49,"nodeType":"437","messageId":"438","endLine":6,"endColumn":64},{"ruleId":"435","severity":1,"message":"486","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":18},{"ruleId":"435","severity":1,"message":"487","line":11,"column":8,"nodeType":"437","messageId":"438","endLine":11,"endColumn":14},{"ruleId":"435","severity":1,"message":"441","line":12,"column":8,"nodeType":"437","messageId":"438","endLine":12,"endColumn":14},{"ruleId":"435","severity":1,"message":"488","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":10},{"ruleId":"435","severity":1,"message":"489","line":67,"column":7,"nodeType":"437","messageId":"438","endLine":67,"endColumn":15},{"ruleId":"435","severity":1,"message":"490","line":78,"column":14,"nodeType":"437","messageId":"438","endLine":78,"endColumn":24},{"ruleId":"435","severity":1,"message":"491","line":94,"column":11,"nodeType":"437","messageId":"438","endLine":94,"endColumn":16},{"ruleId":"435","severity":1,"message":"492","line":101,"column":8,"nodeType":"437","messageId":"438","endLine":101,"endColumn":24},{"ruleId":"442","replacedBy":"493"},{"ruleId":"444","replacedBy":"494"},{"ruleId":"435","severity":1,"message":"495","line":1,"column":15,"nodeType":"437","messageId":"438","endLine":1,"endColumn":24},{"ruleId":"435","severity":1,"message":"496","line":2,"column":29,"nodeType":"437","messageId":"438","endLine":2,"endColumn":32},{"ruleId":"435","severity":1,"message":"497","line":2,"column":33,"nodeType":"437","messageId":"438","endLine":2,"endColumn":36},{"ruleId":"435","severity":1,"message":"498","line":2,"column":37,"nodeType":"437","messageId":"438","endLine":2,"endColumn":44},{"ruleId":"435","severity":1,"message":"499","line":2,"column":45,"nodeType":"437","messageId":"438","endLine":2,"endColumn":50},{"ruleId":"435","severity":1,"message":"500","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":14},{"ruleId":"435","severity":1,"message":"464","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":17},{"ruleId":"435","severity":1,"message":"501","line":11,"column":8,"nodeType":"437","messageId":"438","endLine":11,"endColumn":15},{"ruleId":"435","severity":1,"message":"502","line":12,"column":7,"nodeType":"437","messageId":"438","endLine":12,"endColumn":12},{"ruleId":"435","severity":1,"message":"503","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":17},{"ruleId":"435","severity":1,"message":"504","line":15,"column":7,"nodeType":"437","messageId":"438","endLine":15,"endColumn":17},{"ruleId":"435","severity":1,"message":"505","line":105,"column":7,"nodeType":"437","messageId":"438","endLine":105,"endColumn":12},{"ruleId":"435","severity":1,"message":"506","line":107,"column":12,"nodeType":"437","messageId":"438","endLine":107,"endColumn":19},{"ruleId":"435","severity":1,"message":"507","line":107,"column":20,"nodeType":"437","messageId":"438","endLine":107,"endColumn":30},{"ruleId":"435","severity":1,"message":"441","line":110,"column":12,"nodeType":"437","messageId":"438","endLine":110,"endColumn":18},{"ruleId":"442","replacedBy":"508"},{"ruleId":"444","replacedBy":"509"},{"ruleId":"435","severity":1,"message":"510","line":1,"column":16,"nodeType":"437","messageId":"438","endLine":1,"endColumn":24},{"ruleId":"435","severity":1,"message":"511","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":15},{"ruleId":"435","severity":1,"message":"512","line":2,"column":17,"nodeType":"437","messageId":"438","endLine":2,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"513","line":2,"column":30,"nodeType":"437","messageId":"438","endLine":2,"endColumn":36},{"ruleId":"435","severity":1,"message":"482","line":5,"column":9,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"442","replacedBy":"514"},{"ruleId":"444","replacedBy":"515"},{"ruleId":"435","severity":1,"message":"496","line":1,"column":10,"nodeType":"437","messageId":"438","endLine":1,"endColumn":13},{"ruleId":"435","severity":1,"message":"439","line":3,"column":16,"nodeType":"437","messageId":"438","endLine":3,"endColumn":22},{"ruleId":"435","severity":1,"message":"483","line":5,"column":44,"nodeType":"437","messageId":"438","endLine":5,"endColumn":56},{"ruleId":"442","replacedBy":"516"},{"ruleId":"444","replacedBy":"517"},{"ruleId":"435","severity":1,"message":"518","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":18},{"ruleId":"435","severity":1,"message":"519","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":19},{"ruleId":"435","severity":1,"message":"520","line":9,"column":8,"nodeType":"437","messageId":"438","endLine":9,"endColumn":19},{"ruleId":"521","severity":1,"message":"522","line":52,"column":7,"nodeType":"523","messageId":"524","endLine":120,"endColumn":6},{"ruleId":"435","severity":1,"message":"510","line":1,"column":16,"nodeType":"437","messageId":"438","endLine":1,"endColumn":24},{"ruleId":"435","severity":1,"message":"512","line":2,"column":17,"nodeType":"437","messageId":"438","endLine":2,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"513","line":2,"column":30,"nodeType":"437","messageId":"438","endLine":2,"endColumn":36},{"ruleId":"435","severity":1,"message":"439","line":2,"column":38,"nodeType":"437","messageId":"438","endLine":2,"endColumn":44},{"ruleId":"435","severity":1,"message":"483","line":5,"column":9,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"525","line":5,"column":22,"nodeType":"437","messageId":"438","endLine":5,"endColumn":34},{"ruleId":"435","severity":1,"message":"526","line":5,"column":35,"nodeType":"437","messageId":"438","endLine":5,"endColumn":46},{"ruleId":"435","severity":1,"message":"527","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"456","severity":1,"message":"457","line":36,"column":23,"nodeType":"458","messageId":"459","endLine":36,"endColumn":25},{"ruleId":"528","severity":1,"message":"529","line":52,"column":5,"nodeType":"530","messageId":"459","endLine":52,"endColumn":9},{"ruleId":"442","replacedBy":"531"},{"ruleId":"444","replacedBy":"532"},{"ruleId":"435","severity":1,"message":"513","line":2,"column":24,"nodeType":"437","messageId":"438","endLine":2,"endColumn":30},{"ruleId":"435","severity":1,"message":"533","line":5,"column":7,"nodeType":"437","messageId":"438","endLine":5,"endColumn":11},{"ruleId":"435","severity":1,"message":"534","line":15,"column":10,"nodeType":"437","messageId":"438","endLine":15,"endColumn":17},{"ruleId":"456","severity":1,"message":"457","line":176,"column":41,"nodeType":"458","messageId":"459","endLine":176,"endColumn":43},{"ruleId":"435","severity":1,"message":"535","line":3,"column":9,"nodeType":"437","messageId":"438","endLine":3,"endColumn":19},{"ruleId":"467","severity":1,"message":"468","line":67,"column":24,"nodeType":"469","messageId":"470","endLine":67,"endColumn":26},{"ruleId":"435","severity":1,"message":"536","line":9,"column":17,"nodeType":"437","messageId":"438","endLine":9,"endColumn":25},{"ruleId":"435","severity":1,"message":"537","line":10,"column":11,"nodeType":"437","messageId":"438","endLine":10,"endColumn":25},{"ruleId":"435","severity":1,"message":"538","line":20,"column":13,"nodeType":"437","messageId":"438","endLine":20,"endColumn":39},{"ruleId":"435","severity":1,"message":"533","line":29,"column":16,"nodeType":"437","messageId":"438","endLine":29,"endColumn":20},{"ruleId":"467","severity":1,"message":"468","line":36,"column":37,"nodeType":"469","messageId":"470","endLine":36,"endColumn":39},{"ruleId":"435","severity":1,"message":"539","line":54,"column":18,"nodeType":"437","messageId":"438","endLine":54,"endColumn":30},{"ruleId":"435","severity":1,"message":"527","line":2,"column":50,"nodeType":"437","messageId":"438","endLine":2,"endColumn":54},{"ruleId":"435","severity":1,"message":"540","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":16},{"ruleId":"435","severity":1,"message":"541","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"435","severity":1,"message":"542","line":12,"column":8,"nodeType":"437","messageId":"438","endLine":12,"endColumn":15},{"ruleId":"435","severity":1,"message":"543","line":13,"column":8,"nodeType":"437","messageId":"438","endLine":13,"endColumn":19},{"ruleId":"435","severity":1,"message":"544","line":14,"column":8,"nodeType":"437","messageId":"438","endLine":14,"endColumn":17},{"ruleId":"435","severity":1,"message":"545","line":15,"column":8,"nodeType":"437","messageId":"438","endLine":15,"endColumn":25},{"ruleId":"435","severity":1,"message":"546","line":17,"column":10,"nodeType":"437","messageId":"438","endLine":17,"endColumn":18},{"ruleId":"435","severity":1,"message":"465","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"527","line":7,"column":39,"nodeType":"437","messageId":"438","endLine":7,"endColumn":43},{"ruleId":"435","severity":1,"message":"547","line":14,"column":10,"nodeType":"437","messageId":"438","endLine":14,"endColumn":21},{"ruleId":"435","severity":1,"message":"548","line":14,"column":23,"nodeType":"437","messageId":"438","endLine":14,"endColumn":37},{"ruleId":"435","severity":1,"message":"505","line":17,"column":9,"nodeType":"437","messageId":"438","endLine":17,"endColumn":14},{"ruleId":"435","severity":1,"message":"549","line":19,"column":7,"nodeType":"437","messageId":"438","endLine":19,"endColumn":9},{"ruleId":"435","severity":1,"message":"550","line":20,"column":7,"nodeType":"437","messageId":"438","endLine":20,"endColumn":14},{"ruleId":"435","severity":1,"message":"466","line":27,"column":23,"nodeType":"437","messageId":"438","endLine":27,"endColumn":37},{"ruleId":"435","severity":1,"message":"551","line":28,"column":15,"nodeType":"437","messageId":"438","endLine":28,"endColumn":18},{"ruleId":"467","severity":1,"message":"468","line":34,"column":13,"nodeType":"469","messageId":"470","endLine":34,"endColumn":15},{"ruleId":"467","severity":1,"message":"468","line":45,"column":12,"nodeType":"469","messageId":"470","endLine":45,"endColumn":14},{"ruleId":"435","severity":1,"message":"475","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":19},{"ruleId":"435","severity":1,"message":"476","line":4,"column":21,"nodeType":"437","messageId":"438","endLine":4,"endColumn":25},{"ruleId":"435","severity":1,"message":"477","line":4,"column":27,"nodeType":"437","messageId":"438","endLine":4,"endColumn":32},{"ruleId":"435","severity":1,"message":"478","line":4,"column":34,"nodeType":"437","messageId":"438","endLine":4,"endColumn":39},{"ruleId":"435","severity":1,"message":"479","line":4,"column":41,"nodeType":"437","messageId":"438","endLine":4,"endColumn":46},{"ruleId":"435","severity":1,"message":"480","line":4,"column":48,"nodeType":"437","messageId":"438","endLine":4,"endColumn":67},{"ruleId":"435","severity":1,"message":"481","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":14},{"ruleId":"435","severity":1,"message":"482","line":6,"column":9,"nodeType":"437","messageId":"438","endLine":6,"endColumn":19},{"ruleId":"435","severity":1,"message":"483","line":6,"column":21,"nodeType":"437","messageId":"438","endLine":6,"endColumn":33},{"ruleId":"435","severity":1,"message":"484","line":6,"column":34,"nodeType":"437","messageId":"438","endLine":6,"endColumn":48},{"ruleId":"435","severity":1,"message":"552","line":8,"column":9,"nodeType":"437","messageId":"438","endLine":8,"endColumn":16},{"ruleId":"435","severity":1,"message":"553","line":9,"column":9,"nodeType":"437","messageId":"438","endLine":9,"endColumn":15},{"ruleId":"435","severity":1,"message":"441","line":14,"column":8,"nodeType":"437","messageId":"438","endLine":14,"endColumn":14},{"ruleId":"435","severity":1,"message":"489","line":69,"column":7,"nodeType":"437","messageId":"438","endLine":69,"endColumn":15},{"ruleId":"435","severity":1,"message":"490","line":79,"column":14,"nodeType":"437","messageId":"438","endLine":79,"endColumn":24},{"ruleId":"435","severity":1,"message":"491","line":97,"column":11,"nodeType":"437","messageId":"438","endLine":97,"endColumn":16},{"ruleId":"435","severity":1,"message":"554","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":17},{"ruleId":"435","severity":1,"message":"439","line":2,"column":47,"nodeType":"437","messageId":"438","endLine":2,"endColumn":53},{"ruleId":"435","severity":1,"message":"527","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"435","severity":1,"message":"555","line":5,"column":11,"nodeType":"437","messageId":"438","endLine":5,"endColumn":20},{"ruleId":"435","severity":1,"message":"513","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":16},{"ruleId":"435","severity":1,"message":"556","line":36,"column":11,"nodeType":"437","messageId":"438","endLine":36,"endColumn":18},{"ruleId":"442","replacedBy":"557"},{"ruleId":"444","replacedBy":"558"},{"ruleId":"435","severity":1,"message":"512","line":54,"column":10,"nodeType":"437","messageId":"438","endLine":54,"endColumn":14},{"ruleId":"435","severity":1,"message":"559","line":55,"column":32,"nodeType":"437","messageId":"438","endLine":55,"endColumn":42},{"ruleId":"435","severity":1,"message":"536","line":10,"column":17,"nodeType":"437","messageId":"438","endLine":10,"endColumn":25},{"ruleId":"435","severity":1,"message":"537","line":12,"column":11,"nodeType":"437","messageId":"438","endLine":12,"endColumn":25},{"ruleId":"435","severity":1,"message":"538","line":22,"column":13,"nodeType":"437","messageId":"438","endLine":22,"endColumn":39},{"ruleId":"467","severity":1,"message":"468","line":43,"column":35,"nodeType":"469","messageId":"470","endLine":43,"endColumn":37},{"ruleId":"450","severity":1,"message":"560","line":85,"column":11,"nodeType":"452","endLine":85,"endColumn":18,"suggestions":"561"},{"ruleId":"435","severity":1,"message":"439","line":1,"column":44,"nodeType":"437","messageId":"438","endLine":1,"endColumn":50},{"ruleId":"435","severity":1,"message":"474","line":1,"column":80,"nodeType":"437","messageId":"438","endLine":1,"endColumn":85},{"ruleId":"435","severity":1,"message":"501","line":66,"column":12,"nodeType":"437","messageId":"438","endLine":66,"endColumn":19},{"ruleId":"435","severity":1,"message":"562","line":102,"column":11,"nodeType":"437","messageId":"438","endLine":102,"endColumn":16},{"ruleId":"435","severity":1,"message":"563","line":106,"column":11,"nodeType":"437","messageId":"438","endLine":106,"endColumn":18},{"ruleId":"435","severity":1,"message":"564","line":1,"column":22,"nodeType":"437","messageId":"438","endLine":1,"endColumn":27},{"ruleId":"435","severity":1,"message":"446","line":1,"column":29,"nodeType":"437","messageId":"438","endLine":1,"endColumn":32},{"ruleId":"435","severity":1,"message":"436","line":1,"column":34,"nodeType":"437","messageId":"438","endLine":1,"endColumn":39},{"ruleId":"435","severity":1,"message":"565","line":1,"column":77,"nodeType":"437","messageId":"438","endLine":1,"endColumn":81},{"ruleId":"435","severity":1,"message":"566","line":2,"column":9,"nodeType":"437","messageId":"438","endLine":2,"endColumn":23},{"ruleId":"435","severity":1,"message":"465","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":17},{"ruleId":"435","severity":1,"message":"447","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"435","severity":1,"message":"567","line":6,"column":15,"nodeType":"437","messageId":"438","endLine":6,"endColumn":20},{"ruleId":"456","severity":1,"message":"457","line":18,"column":59,"nodeType":"458","messageId":"459","endLine":18,"endColumn":61},{"ruleId":"435","severity":1,"message":"568","line":105,"column":8,"nodeType":"437","messageId":"438","endLine":105,"endColumn":15},{"ruleId":"435","severity":1,"message":"569","line":119,"column":8,"nodeType":"437","messageId":"438","endLine":119,"endColumn":21},{"ruleId":"435","severity":1,"message":"570","line":119,"column":22,"nodeType":"437","messageId":"438","endLine":119,"endColumn":38},{"ruleId":"435","severity":1,"message":"571","line":147,"column":11,"nodeType":"437","messageId":"438","endLine":147,"endColumn":17},{"ruleId":"435","severity":1,"message":"539","line":155,"column":12,"nodeType":"437","messageId":"438","endLine":155,"endColumn":24},{"ruleId":"435","severity":1,"message":"441","line":193,"column":11,"nodeType":"437","messageId":"438","endLine":193,"endColumn":17},{"ruleId":"572","severity":1,"message":"573","line":330,"column":99,"nodeType":"458","messageId":"574","endLine":330,"endColumn":100},{"ruleId":"572","severity":1,"message":"573","line":330,"column":112,"nodeType":"458","messageId":"574","endLine":330,"endColumn":113},{"ruleId":"435","severity":1,"message":"510","line":1,"column":16,"nodeType":"437","messageId":"438","endLine":1,"endColumn":24},{"ruleId":"435","severity":1,"message":"511","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":15},{"ruleId":"435","severity":1,"message":"512","line":2,"column":17,"nodeType":"437","messageId":"438","endLine":2,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"439","line":2,"column":38,"nodeType":"437","messageId":"438","endLine":2,"endColumn":44},{"ruleId":"435","severity":1,"message":"555","line":6,"column":11,"nodeType":"437","messageId":"438","endLine":6,"endColumn":20},{"ruleId":"435","severity":1,"message":"555","line":100,"column":11,"nodeType":"437","messageId":"438","endLine":100,"endColumn":20},{"ruleId":"435","severity":1,"message":"575","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":15},{"ruleId":"435","severity":1,"message":"576","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":18},{"ruleId":"435","severity":1,"message":"463","line":9,"column":8,"nodeType":"437","messageId":"438","endLine":9,"endColumn":13},{"ruleId":"435","severity":1,"message":"502","line":50,"column":13,"nodeType":"437","messageId":"438","endLine":50,"endColumn":18},{"ruleId":"435","severity":1,"message":"577","line":58,"column":11,"nodeType":"437","messageId":"438","endLine":58,"endColumn":23},{"ruleId":"435","severity":1,"message":"578","line":4,"column":9,"nodeType":"437","messageId":"438","endLine":4,"endColumn":12},{"ruleId":"435","severity":1,"message":"537","line":7,"column":11,"nodeType":"437","messageId":"438","endLine":7,"endColumn":25},{"ruleId":"435","severity":1,"message":"538","line":17,"column":13,"nodeType":"437","messageId":"438","endLine":17,"endColumn":39},{"ruleId":"435","severity":1,"message":"533","line":26,"column":16,"nodeType":"437","messageId":"438","endLine":26,"endColumn":20},{"ruleId":"467","severity":1,"message":"468","line":34,"column":34,"nodeType":"469","messageId":"470","endLine":34,"endColumn":36},{"ruleId":"435","severity":1,"message":"487","line":45,"column":15,"nodeType":"437","messageId":"438","endLine":45,"endColumn":21},{"ruleId":"435","severity":1,"message":"539","line":48,"column":18,"nodeType":"437","messageId":"438","endLine":48,"endColumn":30},{"ruleId":"435","severity":1,"message":"499","line":1,"column":9,"nodeType":"437","messageId":"438","endLine":1,"endColumn":14},{"ruleId":"435","severity":1,"message":"436","line":1,"column":24,"nodeType":"437","messageId":"438","endLine":1,"endColumn":29},{"ruleId":"435","severity":1,"message":"579","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":16},{"ruleId":"435","severity":1,"message":"568","line":99,"column":10,"nodeType":"437","messageId":"438","endLine":99,"endColumn":17},{"ruleId":"435","severity":1,"message":"580","line":130,"column":12,"nodeType":"437","messageId":"438","endLine":130,"endColumn":18},{"ruleId":"435","severity":1,"message":"581","line":130,"column":19,"nodeType":"437","messageId":"438","endLine":130,"endColumn":28},{"ruleId":"456","severity":1,"message":"582","line":149,"column":17,"nodeType":"458","messageId":"459","endLine":149,"endColumn":19},{"ruleId":"456","severity":1,"message":"457","line":161,"column":62,"nodeType":"458","messageId":"459","endLine":161,"endColumn":64},{"ruleId":"456","severity":1,"message":"457","line":172,"column":62,"nodeType":"458","messageId":"459","endLine":172,"endColumn":64},{"ruleId":"456","severity":1,"message":"457","line":186,"column":103,"nodeType":"458","messageId":"459","endLine":186,"endColumn":105},{"ruleId":"456","severity":1,"message":"457","line":187,"column":58,"nodeType":"458","messageId":"459","endLine":187,"endColumn":60},{"ruleId":"456","severity":1,"message":"457","line":202,"column":63,"nodeType":"458","messageId":"459","endLine":202,"endColumn":65},{"ruleId":"435","severity":1,"message":"441","line":225,"column":10,"nodeType":"437","messageId":"438","endLine":225,"endColumn":16},{"ruleId":"435","severity":1,"message":"583","line":225,"column":17,"nodeType":"437","messageId":"438","endLine":225,"endColumn":23},{"ruleId":"435","severity":1,"message":"584","line":229,"column":9,"nodeType":"437","messageId":"438","endLine":229,"endColumn":14},{"ruleId":"456","severity":1,"message":"582","line":535,"column":33,"nodeType":"458","messageId":"459","endLine":535,"endColumn":35},{"ruleId":"456","severity":1,"message":"457","line":546,"column":91,"nodeType":"458","messageId":"459","endLine":546,"endColumn":93},{"ruleId":"435","severity":1,"message":"555","line":4,"column":11,"nodeType":"437","messageId":"438","endLine":4,"endColumn":20},{"ruleId":"435","severity":1,"message":"436","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":28},{"ruleId":"435","severity":1,"message":"439","line":2,"column":38,"nodeType":"437","messageId":"438","endLine":2,"endColumn":44},{"ruleId":"435","severity":1,"message":"526","line":5,"column":38,"nodeType":"437","messageId":"438","endLine":5,"endColumn":49},{"ruleId":"435","severity":1,"message":"527","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"435","severity":1,"message":"585","line":7,"column":10,"nodeType":"437","messageId":"438","endLine":7,"endColumn":20},{"ruleId":"435","severity":1,"message":"463","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":13},{"ruleId":"435","severity":1,"message":"487","line":10,"column":9,"nodeType":"437","messageId":"438","endLine":10,"endColumn":15},{"ruleId":"435","severity":1,"message":"586","line":3,"column":17,"nodeType":"437","messageId":"438","endLine":3,"endColumn":26},{"ruleId":"450","severity":1,"message":"587","line":85,"column":9,"nodeType":"452","endLine":85,"endColumn":11,"suggestions":"588"},{"ruleId":"450","severity":1,"message":"589","line":97,"column":9,"nodeType":"452","endLine":97,"endColumn":23,"suggestions":"590"},{"ruleId":"467","severity":1,"message":"468","line":105,"column":16,"nodeType":"469","messageId":"470","endLine":105,"endColumn":18},{"ruleId":"435","severity":1,"message":"510","line":1,"column":16,"nodeType":"437","messageId":"438","endLine":1,"endColumn":24},{"ruleId":"435","severity":1,"message":"511","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":15},{"ruleId":"435","severity":1,"message":"512","line":2,"column":17,"nodeType":"437","messageId":"438","endLine":2,"endColumn":21},{"ruleId":"435","severity":1,"message":"498","line":2,"column":48,"nodeType":"437","messageId":"438","endLine":2,"endColumn":55},{"ruleId":"435","severity":1,"message":"482","line":5,"column":9,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"435","severity":1,"message":"505","line":7,"column":11,"nodeType":"437","messageId":"438","endLine":7,"endColumn":16},{"ruleId":"435","severity":1,"message":"505","line":7,"column":11,"nodeType":"437","messageId":"438","endLine":7,"endColumn":16},{"ruleId":"435","severity":1,"message":"551","line":7,"column":14,"nodeType":"437","messageId":"438","endLine":7,"endColumn":17},"no-unused-vars","'Space' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'Banner' is defined but never used.","'Header' is assigned a value but never used.","no-native-reassign",["591"],"no-negated-in-lhs",["592"],"'Tag' is defined but never used.","'Plot' is defined but never used.","'continents' is assigned a value but never used.","'setContinents' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.","ArrayExpression",["593"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["594"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["591"],["592"],"'Checkbox' is defined but never used.","'axios' is defined but never used.","'ForumCard' is defined but never used.","'ForumList' is defined but never used.","'setCommunities' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'orgname' is assigned a value but never used.","'orgUsername' is assigned a value but never used.","'orgPassword' is assigned a value but never used.","'Empty' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Label' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","'EditFilled' is defined but never used.","'UserOutlined' is defined but never used.","'ExportOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'MainHeader' is defined but never used.","'Option' is assigned a value but never used.","'Box' is assigned a value but never used.","'Activity' is assigned a value but never used.","'createData' is defined but never used.","'theme' is assigned a value but never used.","'selectedAccounts' is assigned a value but never used.",["591"],["592"],"'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'TagBox' is defined but never used.","'TabPane' is assigned a value but never used.","'style' is assigned a value but never used.","'adminStyle' is assigned a value but never used.","'loginStyle' is assigned a value but never used.","'image' is assigned a value but never used.","'noUsers' is assigned a value but never used.","'setNoUsers' is assigned a value but never used.",["591"],["592"],"'useState' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.",["591"],["592"],["591"],["592"],"'Background' is defined but never used.","'Background2' is defined but never used.","'Background3' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'LockOutlined' is defined but never used.","'KeyOutlined' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression",["591"],["592"],"'data' is assigned a value but never used.","'surveys' is assigned a value but never used.","'useHistory' is defined but never used.","'setCount' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","'handleChange' is defined but never used.","'OrgLogin' is defined but never used.","'ProfilePage' is defined but never used.","'Details' is defined but never used.","'RecordCases' is defined but never used.","'AdminPage' is defined but never used.","'EvaluationSession' is defined but never used.","'UserForm' is defined but never used.","'showDetails' is assigned a value but never used.","'setShowDetails' is assigned a value but never used.","'me' is assigned a value but never used.","'otherMe' is assigned a value but never used.","'url' is assigned a value but never used.","'Request' is defined but never used.","'Survey' is defined but never used.","'message' is defined but never used.","'colorCode' is assigned a value but never used.","'replies' is assigned a value but never used.",["591"],["592"],"'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'getDiseases'. Either include it or remove the dependency array.",["595"],"'error' is assigned a value but never used.","'content' is assigned a value but never used.","'Table' is defined but never used.","'Spin' is defined but never used.","'renderToString' is defined but never used.","'Plot2' is defined but never used.","'regions' is assigned a value but never used.","'surveyAnswers' is assigned a value but never used.","'setSurveyAnswers' is assigned a value but never used.","'Search' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Paper' is defined but never used.","'Choropleth' is defined but never used.","'changeCenter' is assigned a value but never used.","'Get' is defined but never used.","'Mappings' is defined but never used.","'hidden' is assigned a value but never used.","'setHidden' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Footer' is assigned a value but never used.","'marks' is assigned a value but never used.","'IconButton' is defined but never used.","'MyReplies' is defined but never used.","React Hook useEffect has missing dependencies: 'props.filter', 'props.location', and 'props.user'. Either include them or remove the dependency array.",["596"],"React Hook useEffect has a missing dependency: 'forums'. Either include it or remove the dependency array. You can also do a functional update 'setForums(f => ...)' if you only need 'forums' in the 'setForums' call.",["597"],"no-global-assign","no-unsafe-negation",{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},"Update the dependencies array to be: [questions]",{"range":"608","text":"609"},"Update the dependencies array to be: [expandSurvey]",{"range":"610","text":"611"},"Update the dependencies array to be: [count, getDiseases]",{"range":"612","text":"613"},"Update the dependencies array to be: [props.filter, props.location, props.user]",{"range":"614","text":"615"},"Update the dependencies array to be: [forums, props.filter]",{"range":"616","text":"617"},[2183,2185],"[questions]",[2719,2721],"[expandSurvey]",[1788,1795],"[count, getDiseases]",[1900,1902],"[props.filter, props.location, props.user]",[2146,2160],"[forums, props.filter]"]