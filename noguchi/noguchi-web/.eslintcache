[{"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js":"1","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\communityForm.js":"2","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\App.js":"3","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\otherProfile\\otherProfile.js":"4","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAccounts\\orgAccountss.js":"5","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\RecordCases.js":"6","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\header.js":"7","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumCard.js":"8","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\input.js":"9","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js":"10","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\controls\\legend\\legend.js":"11","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\diseaseForm.js":"12","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\api.js":"13","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAdmin\\orgAdmin.js":"14","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\entry\\entry.js":"15","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\serviceWorker.js":"16","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\homePage\\home.js":"17","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\card.js":"18","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\survey.js":"19","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js":"20","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js":"21","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\mainHeader.js":"22","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\index.js":"23","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\forum\\otherForum.js":"24","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagBox.js":"25","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js":"26","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\surveyForm.js":"27","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js":"28","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagSet.js":"29","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumList.js":"30","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js":"31","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js":"32","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js":"33","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Login\\login.js":"34"},{"size":7098,"mtime":1612271601363,"results":"35","hashOfConfig":"36"},{"size":4480,"mtime":1612271601467,"results":"37","hashOfConfig":"36"},{"size":1993,"mtime":1615741519246,"results":"38","hashOfConfig":"36"},{"size":11410,"mtime":1613908269498,"results":"39","hashOfConfig":"36"},{"size":10324,"mtime":1611854070848,"results":"40","hashOfConfig":"36"},{"size":11772,"mtime":1615734590696,"results":"41","hashOfConfig":"36"},{"size":573,"mtime":1608123841512,"results":"42","hashOfConfig":"36"},{"size":1051,"mtime":1609321749503,"results":"43","hashOfConfig":"36"},{"size":1326,"mtime":1604479221475,"results":"44","hashOfConfig":"36"},{"size":12410,"mtime":1614688320901,"results":"45","hashOfConfig":"36"},{"size":6862,"mtime":1612265636678,"results":"46","hashOfConfig":"36"},{"size":3251,"mtime":1612271601468,"results":"47","hashOfConfig":"36"},{"size":2087,"mtime":1612271601359,"results":"48","hashOfConfig":"36"},{"size":9536,"mtime":1612273053577,"results":"49","hashOfConfig":"36"},{"size":18874,"mtime":1615744994866,"results":"50","hashOfConfig":"36"},{"size":5227,"mtime":1601656147772,"results":"51","hashOfConfig":"36"},{"size":19820,"mtime":1615741712076,"results":"52","hashOfConfig":"36"},{"size":3892,"mtime":1613748226769,"results":"53","hashOfConfig":"36"},{"size":2358,"mtime":1612271601469,"results":"54","hashOfConfig":"36"},{"size":5063,"mtime":1615735987319,"results":"55","hashOfConfig":"36"},{"size":2141,"mtime":1613896022655,"results":"56","hashOfConfig":"36"},{"size":1852,"mtime":1613735134136,"results":"57","hashOfConfig":"36"},{"size":520,"mtime":1603574153486,"results":"58","hashOfConfig":"36"},{"size":10993,"mtime":1613910158141,"results":"59","hashOfConfig":"36"},{"size":1655,"mtime":1609321638931,"results":"60","hashOfConfig":"36"},{"size":5846,"mtime":1615743762629,"results":"61","hashOfConfig":"36"},{"size":5859,"mtime":1612271601471,"results":"62","hashOfConfig":"36"},{"size":3878,"mtime":1611853442189,"results":"63","hashOfConfig":"36"},{"size":4281,"mtime":1609321282765,"results":"64","hashOfConfig":"36"},{"size":3861,"mtime":1611646406323,"results":"65","hashOfConfig":"36"},{"size":5501,"mtime":1615741481893,"results":"66","hashOfConfig":"36"},{"size":5536,"mtime":1615729931141,"results":"67","hashOfConfig":"36"},{"size":6999,"mtime":1611731387921,"results":"68","hashOfConfig":"36"},{"size":766,"mtime":1607683244353,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"1f2r5vc",{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"113"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js",["165","166","167","168","169"],"import React, {useState} from \"react\";\r\nimport { message,Input, Card, Space, Button ,Avatar, Form} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {UserOutlined,LockOutlined,KeyOutlined} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst OrgForm =({onClick,...props})=>{\r\n\r\nconst [username,setUsername]=useState('');\r\nconst [password,setPassword]=useState('');\r\nconst [key,setKey]=useState('');\r\nconst [loginType,setLoginType]=useState('other');\r\nconst handleSubmit=(e)=>{\r\n    const org={\r\n      username:username,\r\n      password:password\r\n    }\r\n    console.log(org)\r\n  axios.get('http://localhost:1337/organizations',\r\n    {\r\n      params:{\r\n        username:username,\r\n        key:password\r\n      },\r\n      paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\r\n    }\r\n  )\r\n   .then(response => {\r\n          \r\n          console.log(response.data)\r\n          if(response.data.length>0){\r\n            localStorage.setItem('selectedOrg',JSON.stringify(response.data))\r\n            window.location.href='/orgAccounts'\r\n          }\r\n          else{\r\n            \r\n            message.error('Organization Not Found')\r\n          }\r\n         \r\n        \r\n        }\r\n        )\r\n        .catch((error) => {\r\n          \r\n          console.log(error);\r\n        })\r\n    \r\n}\r\nconst  handleSubmit2=(e)=>{\r\n  axios\r\n  .post('http://localhost:1337/auth/local', {\r\n    identifier: username,\r\n    password: password,\r\n  })\r\n  .then(response => {\r\n    // Handle success.\r\n    console.log('Well done!');\r\n    console.log('User profile', response.data.user);\r\n    console.log('User token', response.data.jwt);\r\n    localStorage.setItem('currentUser',JSON.stringify(response.data.user))\r\n    window.location.href='/other'\r\n  })\r\n  .catch(error => {\r\n    // Handle error.\r\n    message.error('Incorrect Details')\r\n    console.log('An error occurred:', error.response);\r\n  });\r\n  /* axios.post('http://localhost:1337/user',)\r\n      .then(response =>window.location.href='/other')\r\n      .catch((error) => {\r\n        console.log(error);\r\n        \r\n      }) */\r\n   /* axios.post('http://localhost:5002/auth/userLogin',user)\r\n      .then(response =>window.location.href='/other')\r\n      .catch((error) => {\r\n        console.log(error);\r\n        \r\n      }) */\r\n    /*   const response = await fetch('http://localhost/5000/auth/userLogin', {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'sam e-origin', // include, *same-origin, omit\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\r\n      })\r\n      console.log(response.json()) */\r\n  \r\n}\r\nreturn(\r\n    <Card style={{ flex: 0.28,width:'min(95vw,100%)',border:'1px solid graysmoke',display:'flex',flexDirection:'column',alignItems:'center',borderRadius:15,backgroundColor:'white',justifyContent:'center'}}>\r\n      {\r\n        loginType==='other'?\r\n        <Form layout='vertical' onFinish={handleSubmit2}>\r\n        <Space direction='vertical' size={10}>\r\n      <h1 style={{fontSize:32,fontWeight:'bold',textAlign:'left'}}>Sign In</h1>\r\n      <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'lightblue',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')}>Org Login</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'#8a2be290',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n      >\r\n      <Input \r\n      size=\"large\"\r\n      className='formInput'\r\n      onChange={(e)=>{setUsername(e.target.value)}}\r\n      placeholder=\"Enter your username\" \r\n      prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your password!' }]}\r\n      >\r\n      <Input.Password \r\n      size=\"large\"\r\n      className='formInput'\r\n      onChange={(e)=>{setPassword(e.target.value)}}\r\n      placeholder=\"Enter your password\" \r\n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Button \r\n      size='large'\r\n      block\r\n      style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n      htmlType='submit'\r\n      >\r\n      Sign In\r\n      </Button>\r\n    </Space>\r\n    </Form>\r\n    :\r\n    <Form layout='vertical' onFinish={handleSubmit}>\r\n    <Space direction='vertical' size={10}>\r\n    <h1 style={{fontSize:30,fontWeight:'bold',textAlign:'left'}}>Org Sign In</h1>\r\n    <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'#8a2be290',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')} >Org Login</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'lightblue',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n    <Form.Item\r\n        label=\"Org Username\"\r\n        name=\"org_username\"\r\n        rules={[{ required: true, message: \"Please input the organization's username!\" }]}\r\n      >\r\n    <Input \r\n    size=\"large\"\r\n    className='formInput'\r\n    onChange={(e)=>{setUsername(e.target.value)}}\r\n    placeholder=\"Enter org username\" \r\n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n    <Form.Item\r\n        label=\"Org Password\"\r\n        name=\"org_password\"\r\n        rules={[{ required: true, message: \"Please input the organization's password!\" }]}\r\n      >\r\n    <Input \r\n    size=\"large\"\r\n    className='formInput'\r\n    onChange={(e)=>{setPassword(e.target.value)}}\r\n    placeholder=\"Enter org password\" \r\n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n    <Button \r\n    size='large'\r\n    block\r\n    style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n    htmlType='submit'\r\n    >\r\n    Sign In\r\n    </Button>\r\n  </Space>\r\n  </Form>\r\n  \r\n      }\r\n    \r\n    <Button size={30} onClick={onClick} type='link' style={{color:'lightseagreen',textDecorationStyle:'solid',textDecorationColor:'lightseagreen',textDecorationLine:'underline',textDecorationWidth:1}}>Do Not Have An Account?</Button>\r\n    </Card>\r\n);\r\n\r\n}\r\n\r\nexport default OrgForm;",["170","171"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\communityForm.js",["172","173","174","175","176","177"],"import React,{useEffect, useState} from 'react'\r\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport {Get,Post} from '../../api'\r\n\r\n\r\nexport const CommunityForm = () =>{\r\n   const [districts,setDistricts] = useState([])\r\n   const [count,setCount] = useState(0)\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 20 },\r\n        },\r\n      };\r\n      const formItemLayoutWithOutLabel = {\r\n        wrapperCol: {\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 20, offset: 4 },\r\n        },\r\n      };\r\n\r\n      const postcommunities = async(body) =>{\r\n        var url = \"communities\";\r\n         const data = await Post(url,body);\r\n         \r\n     \r\n     }\r\n\r\n      const onFinish = values => {\r\n        console.log('Received values of form:', values);\r\n        values.communities.map(value=>{\r\n          console.log(value.community)\r\n          const body = {\r\n            community:value.community,\r\n            district:value.district\r\n          } \r\n          const bod = JSON.stringify(body)\r\n          postcommunities(bod)\r\n        })\r\n      \r\n      };\r\n    \r\n\r\n      \r\n\r\n      const { Option } = Select;\r\n\r\n\r\n        function handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n        }\r\n\r\n        const getDistrict = async() =>{\r\n          var url = \"districts\";\r\n          const  data = await Get(url);\r\n           console.log(data)\r\n          setDistricts(data);\r\n       \r\n       }\r\n\r\n       useEffect(()=>{\r\n           getDistrict();\r\n       \r\n       },[count])\r\n\r\n\r\n    return(\r\n     \r\n\r\n\r\n\r\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n             <Row>\r\n                \r\n               <Form.List name=\"communities\">\r\n                 {(fields, { add, remove }) => (\r\n                   <>\r\n                    <Col xs=\"24\" md=\"12\">\r\n                     {fields.map(field => (\r\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\r\n                         <Form.Item\r\n                           {...field}\r\n                           name={[field.name, 'community']}\r\n                           fieldKey={[field.fieldKey, 'community']}\r\n                           rules={[{ required: true, message: 'Missing community ' }]}\r\n                         >\r\n                           <Input placeholder=\"Input community name here\" />\r\n                         </Form.Item>\r\n                         <Form.Item\r\n                           {...field}\r\n                           name={[field.name, 'district']}\r\n                           fieldKey={[field.fieldKey, 'district']}\r\n                           rules={[{ required: true, message: 'Missing district ' }]}\r\n                         >\r\n                            <Select placeholder=\"Add District\" defaultValue={undefined} style={{ width: 120 }} >\r\n                       {districts.map(district =>{\r\n                         return(\r\n                              <Option value={district.id}>{district.district}</Option>\r\n                         )\r\n                       })} \r\n                        \r\n                            </Select>\r\n                         </Form.Item>\r\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                       </Space>\r\n                     ))}\r\n                     </Col>\r\n                     <Col xs=\"24\" md=\"12\">\r\n                     <Form.Item>\r\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                         Add Community\r\n                       </Button>\r\n                     </Form.Item>\r\n                     </Col>\r\n                   </>\r\n                 )}\r\n               </Form.List>\r\n             <Col md=\"12\" xs=\"24\">\r\n             <Form.Item>\r\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\r\n                   Submit\r\n                 </Button>\r\n               </Form.Item>\r\n             </Col>\r\n             <Col md=\"12\" xs=\"24\">\r\n            \r\n             </Col>\r\n              \r\n               </Row>\r\n             </Form>\r\n    \r\n    );\r\n\r\n    \r\n  \r\n}\r\n\r\n","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\App.js",["178"],"import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport OrgLogin from './pages/Login/login';\r\nimport ProfilePage from './pages/Profile/profile';\r\nimport Entry from './pages/entry/entry';\r\nimport OtherProfile from './pages/otherProfile/otherProfile'\r\nimport OtherForum from './pages/forum/otherForum';\r\nimport OrgAdminPage from './pages/orgAdmin/orgAdmin';\r\nimport OrgAccountss from './pages/orgAccounts/orgAccountss';\r\nimport Home from './pages/homePage/home';\r\nimport Details from './pages/detailsPage/details';\r\nimport RecordCases from './pages/detailsPage/RecordCases';\r\nimport AdminPage from './pages/admin/admin';\r\nfunction App() {\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* <Mappings /> */}\r\n            <Home/>\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <Home/>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <OrgLogin />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n            <ProfilePage />\r\n          </Route>\r\n          <Route path=\"/entry\">\r\n            <Entry /> \r\n          </Route>\r\n          <Route path=\"/other\">\r\n            <OtherProfile/>\r\n          </Route>\r\n          <Route path=\"/forum\">\r\n            <OtherForum/>\r\n          </Route>\r\n          <Route path=\"/details\">\r\n            <Details/>\r\n          </Route>\r\n          <Route path=\"/cases\">\r\n            <RecordCases/>\r\n          </Route>\r\n          <Route path=\"/OrgAccounts\">\r\n            <OrgAccountss/>\r\n          </Route>\r\n          <Route path=\"/orgadmin\">\r\n            <OrgAdminPage/>\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <AdminPage/>\r\n          </Route>\r\n        </Switch>\r\n      \r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\otherProfile\\otherProfile.js",["179","180","181","182","183","184","185","186"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAccounts\\orgAccountss.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React,{useEffect, useState} from 'react';\r\nimport { Button, Card, Tabs,Row,Col,Divider,Modal ,Layout,Form,Space,Input,Result} from 'antd';\r\nimport FormInput from '../../components/input'\r\nimport  '../../components/components.css';\r\nimport TagBox from '../../components/tagBox';\r\nimport ForumCard from '../../components/forumCard';\r\nimport axios from 'axios'\r\nimport qs from 'qs';\r\nimport MainHeader from '../../components/mainHeader';\r\nconst {TabPane}=Tabs;\r\nconst style = { background: '#0092ff', padding: '8px 0',height:'180px', marginBottom:'10px',\r\ncolor:'white',display:'flex',flexDirection:'Column',alignItems:'flex-start',fontSize:'15px' };\r\nconst adminStyle = { background: '#0092ff', padding: '8px 0',height:'180px' };\r\nconst loginStyle={\r\n    backgroundColor:\"red\"\r\n}\r\n\r\n\r\nconst Box=(props)=>{\r\n    const [modalState,setModalState]=useState(false);\r\n    const [key,setKey]=useState('')\r\n    return(\r\n        <>\r\n        {\r\n        props.admin?\r\n        <>\r\n         <div style={{height:180,border:'4px solid #ff9633',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)} onDoubleClick={()=>setModalState(false)}>\r\n          <div hidden={modalState}>\r\n                <h3>Admin</h3>\r\n                <span>Click to Login</span>\r\n          </div>\r\n          <div hidden={!modalState} style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-between',padding:5,height:'50%'}}>\r\n          <FormInput value={key} onChange={(e)=>setKey(e.target.value)} name=\"key\" type=\"text\" placeholder=\"Enter Admin Key\"  required style={{width:'95%'}} />\r\n          <Button key=\"submit\" type=\"primary\"  onClick={() => {\r\n                axios.get('http://localhost:1337/org-admins',\r\n                {\r\n                  params:{\r\n                    username:props.data.username,\r\n                    key:key\r\n                  },\r\n                  paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\r\n                }\r\n              )\r\n                    .then(response => {\r\n                        localStorage.setItem('org_admin',JSON.stringify(response.data))\r\n                        window.location.href='/orgAdmin'\r\n                    }\r\n                    )\r\n                    .catch((error) => {\r\n                      console.log(error);\r\n                    })\r\n                \r\n            \r\n                \r\n                }}>\r\n                Enter\r\n          </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        </>\r\n    :\r\n       <>\r\n        <div style={{height:180,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}  onDoubleClick={()=>setModalState(false)}>\r\n        <div hidden={modalState}>\r\n                <h3>{props.data.username}</h3>\r\n                <span>Click to Login</span>\r\n          </div>\r\n        <div hidden={!modalState} style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-between',padding:5,height:'50%'}}>\r\n          <FormInput value={key} onChange={(e)=>setKey(e.target.value)} name=\"key\" type=\"text\" placeholder=\"Enter Profile Key\"  required style={{width:'95%'}} />\r\n          <Button key=\"submit\" type=\"primary\"  onClick={() => {\r\n              axios.get('http://localhost:1337/org-users',\r\n              {\r\n                params:{\r\n                  username:props.data.username,\r\n                  key:key\r\n                },\r\n                paramsSerializer:(params)=>qs.stringify(params,{arrayFormat:'repeat'})\r\n              }\r\n            )\r\n                  .then(response => {\r\n                      localStorage.setItem('current_user',JSON.stringify(response.data))\r\n                      window.location.href='/profile'\r\n                  }\r\n                  )\r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                  })\r\n              \r\n               \r\n                \r\n                }}>\r\n                Enter\r\n          </Button>\r\n          </div>\r\n        </div>\r\n         \r\n       </>     \r\n        }\r\n       \r\n        </>\r\n    );\r\n}\r\nconst image=require('../../assets/whiteGhana.png');\r\nconst OrgAccountss=()=> {\r\n    const [noUsers,setNoUsers]=useState(true)\r\n    const [username,setUsername]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const {Header}=Layout;\r\n\r\n    const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\r\n    let selectedAdmin=selectedOrg.org_admin;\r\n    let selectedAccounts\r\n    let accounts=[]\r\n    if(selectedAdmin){\r\n        selectedAccounts=selectedOrg.org_users\r\n        accounts=[selectedAdmin,...selectedAccounts]\r\n    }\r\n    \r\n    console.log(accounts)\r\n    const addAdmin=(e)=>{\r\n        \r\n        axios.post('http://localhost:1337/org-admins', {\r\n            username:username,\r\n            key:password,\r\n            organization:selectedOrg.id\r\n        })\r\n          .then(\r\n            res =>{\r\n              if(res.data){\r\n                console.log(res.data)\r\n                localStorage.setItem('current_user',JSON.stringify(res.data))\r\n                window.location.href='/orgAdmin'\r\n            }}\r\n      \r\n          \r\n          )\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        /* const user = {\r\n          name: username,\r\n          privateKey: password,\r\n          company:\"5fbcf73e612071290c2a3046\",\r\n          role:'admin'\r\n        }\r\n        console.log(user)\r\n        axios.post('http://localhost:5002/auth/userSignUp', user)\r\n          .then(\r\n            res =>{\r\n              if(res.data){\r\n                console.log(res.data)\r\n            }}\r\n      \r\n          \r\n          )\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n       */\r\n    }\r\n    let cur_org=localStorage.getItem('selectedOrg')\r\n    return(\r\n        <div style={{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column'/* ,justifyContent:'center' */,alignItems:'center'}}>\r\n            <MainHeader/>\r\n            {\r\n                cur_org?\r\n                <>\r\n            <div  style={{height:'80vh',width:'85%',marginTop:'10vh'}}>\r\n                {\r\n                    selectedAdmin?\r\n                    <h1 style={{fontSize:'max(4vw,30px)',color:'white'}}>ORGANIZATION PROFILES</h1>\r\n                    :\r\n                    null\r\n                }\r\n                \r\n                {!selectedAdmin?\r\n                \r\n                <div className='orgAccountsBox' style={{padding:10,display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',overflowY:'scroll',height:'70vh'}}>\r\n                        <h1 style={{fontSize:'max(4vw,30px)',color:'white',textAlign:'left',fontFamily: \"'Poppins', sans-serif\"}}>Create Admin Account</h1>\r\n                        <Card style={{width:'min(500px,80vw)',height:'auto',borderRadius:30}}>\r\n                        <Form layout='vertical' onFinish={addAdmin}>\r\n                            <Space direction='vertical' size={5}>\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                            <Input \r\n                            size=\"large\"\r\n                            className='formInput'\r\n                            value={username}\r\n                            placeholder=\"Enter your username\" \r\n                            onChange={(e)=>setUsername(e.target.value)}\r\n                            />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please input your password!' }]}\r\n                            >\r\n                            <Input.Password \r\n                            size=\"large\"\r\n                            className='formInput'\r\n                            value={password}\r\n                            placeholder=\"Enter your password\" \r\n                            onChange={(e)=>setPassword(e.target.value)}\r\n                           \r\n                            />\r\n                            </Form.Item>\r\n                            <Button \r\n                            size='large'\r\n                            block\r\n                            style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:3,borderRadius:8}}\r\n                            htmlType='submit'\r\n                            >\r\n                            Create\r\n                            </Button>\r\n                            </Space>\r\n                            </Form>\r\n                        </Card>\r\n                                              \r\n                </div>\r\n                    :\r\n                    <div className='orgAccountsBox' style={{padding:10,display:'grid',gridTemplateColumns:'repeat(auto-fill,minmax(230px,1fr))',overflowY:'scroll',height:'55vh'}}>\r\n                            \r\n                            {\r\n                                accounts.map((account,index)=><Box admin={index===0}  key={account} data={account}/>)\r\n                            }\r\n                                     \r\n                    </div>\r\n                }\r\n                \r\n            </div> \r\n            </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh'}}\r\n                    status=\"403\"\r\n                    title={<span style={{color:'white'}}>Unauthorized Access</span>}\r\n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/home'} type=\"primary\">Back to Home</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n        </div>\r\n      \r\n    );\r\n  \r\n}\r\nexport default OrgAccountss;",["202","203"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\RecordCases.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\header.js",["222","223","224","225","226","227"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css';\r\nimport {EditFilled ,UserOutlined} from '@ant-design/icons';\r\n\r\nconst Headers=()=>{\r\n    return(\r\n        <div className=\"headerSection\">\r\n            \r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'start',margin:10}}>\r\n                    <Avatar size={90} icon={<UserOutlined/>}/>\r\n                    </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\nexport default Headers;",["228","229"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumCard.js",["230"],"import React from 'react';\r\nimport {Button} from 'antd';\r\n\r\nconst ForumCard=({onClick,data,onPress,...props})=>{\r\n    const colorCode='#adff2f50';\r\n    const whenClicked=()=>{\r\n        onClick();\r\n        localStorage.setItem('clicked',data.id)\r\n        \r\n    }\r\n    return(\r\n        \r\n        <div onClick={whenClicked} style={{minWidth:'70%',marginTop:15,marginBottom:15,width:'100%',cursor:'pointer',height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\r\n          \r\n            <h3 style={{textAlign:'left'}}>{data.title}</h3>\r\n            <p style={{textAlign:'left'}}>\r\n            {data.description} \r\n             </p>\r\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end'}}>\r\n            <Button onClick={whenClicked}>\r\n            <span >{data.reply.length}{data.reply.length>1?'replies':'reply'}</span>\r\n            </Button>\r\n            \r\n            </div>\r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default ForumCard;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\input.js",["231","232","233","234","235","236","237","238","239","240","241"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Space, Button ,Avatar} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {UserOutlined,LockOutlined,KeyOutlined} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst FormInput = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    className,\r\n    value,\r\n    error,\r\n    children,\r\n    label,\r\n    prefix,\r\n    ...props\r\n  }) => {\r\n    \r\n    return (\r\n      <React.Fragment>\r\n      \r\n        <Input\r\n          id={name}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          value={value}\r\n          className={className}\r\n          style={error=='' ? {border:'1-x solid black'}: {border: 'solid 1px red'}}\r\n        />\r\n        { error && <p>{ error }</p>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  \r\n  FormInput.defaultProps = {\r\n    type: \"text\",\r\n    className: \"\"\r\n  }\r\n  \r\n  FormInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['text', 'number', 'password']),\r\n    className: PropTypes.string,\r\n    value: PropTypes.any,\r\n    onChange: PropTypes.func.isRequired\r\n  }\r\n\r\nexport default FormInput;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js",["242","243","244","245"],"import React, {useState,useEffect} from \"react\";\r\nimport { Input, Radio,Card, Space, Button ,message, InputNumber, Modal,Checkbox,Form,Select} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {PlusOutlined,ArrowUpOutlined,ArrowDownOutlined,MinusCircleOutlined ,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport Background from '../assets/desktop4.png';\r\nimport Background2 from '../assets/desktop7.png';\r\nimport Background3 from '../assets/desktop3.png';\r\n\r\nconst {Option}=Select\r\nconst SurveyCard=(props)=>{\r\nconst [allAnswers,setAllAnswers]=useState([])\r\n const [questions,setQuestions]=useState([]);\r\n useEffect(() => {\r\n    axios.get('http://localhost:1337/questions')\r\n    .then(\r\n      res =>{\r\n        if(res.data){\r\n         let alls=res.data\r\n          setQuestions(res.data)\r\n          setAllAnswers(alls.map((all)=>({question:all.id,answer:[]}))) \r\n      }} )\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n},[]);\r\n const [point,setPoint]=useState(1);\r\n let current =questions.filter((question,index)=>index===point-1) \r\n let input;\r\n    const handleChange=e=>{\r\n       \r\n        let newArr=[...allAnswers]\r\n        newArr[point-1].answer=e.target.value\r\n       setAllAnswers(newArr) \r\n    \r\n    } \r\n    const handleNumberChange=value=>{\r\n        let newArr=[...allAnswers]\r\n        newArr[point-1].answer=value\r\n       setAllAnswers(newArr) \r\n    }  \r\n    const handleCheckChange=value=>{\r\n      let newArr=[...allAnswers]\r\n      newArr[point-1].answer=value\r\n      setAllAnswers(newArr) \r\n\r\n      console.log(allAnswers)\r\n    }\r\n    \r\n    const handleFinish=(values)=>{\r\n      {\r\n                \r\n        if(point===questions.length){\r\n          if(current[0]?.type==='radiolist'||current[0]?.type==='listpairs'||current[0]?.type==='listselect'){\r\n            console.log(values)\r\n            let newArr=[...allAnswers]\r\n            newArr[point-1].answer=Object.values(values)[0];\r\n            setAllAnswers(newArr) \r\n            console.log(allAnswers)\r\n          }\r\n            Modal.confirm({\r\n                title: 'Submit Survey',\r\n                content: 'Do you want to submit the survey?',\r\n                icon: <ExclamationCircleOutlined />,\r\n                onOk() {\r\n                  axios.post('http://localhost:1337/surveys',{\r\n                      surveyUID:props.surveyUID,\r\n                      org_user:JSON.parse(localStorage.getItem('userAndjwt')).user.id,\r\n                      disease:1,\r\n                      ActualSurveyDate:props.asDate,\r\n                      community:props.community,\r\n                      answers:allAnswers\r\n                       \r\n                  }).then(res =>{\r\n                        if(res.data){\r\n                            console.log(res.data)\r\n                            message.success('Survey Filled Successfully');\r\n                            window.location.href='/entry'\r\n                        }}\r\n\r\n                  )\r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                    message.error('Entry Unsuccessful')\r\n                  })\r\n                },\r\n                centered:true,\r\n                onCancel() {\r\n                  console.log('Cancel');\r\n                },\r\n                cancelText:'No',\r\n                okText:'Yes'\r\n              });\r\n\r\n        }else if(current[0]?.type==='listpairs'){\r\n            console.log(values)\r\n\r\n            let newArr=[...allAnswers]\r\n            newArr[point-1].answer=Object.values(values)[0];\r\n            setAllAnswers(newArr) \r\n            console.log(allAnswers)\r\n            setPoint(point+1)\r\n        }else if(current[0]?.type==='listselect'){\r\n          console.log(values)\r\n          let newArr=[...allAnswers]\r\n          newArr[point-1].answer=Object.values(values)[0];\r\n          setAllAnswers(newArr) \r\n          console.log(allAnswers)\r\n          setPoint(point+1)\r\n      }else if(current[0]?.type==='radiolist'){\r\n        console.log(values)\r\n        let newArr=[...allAnswers]\r\n          newArr[point-1].answer=Object.values(values)[0];\r\n          setAllAnswers(newArr) \r\n          console.log(allAnswers)\r\n          setPoint(point+1)\r\n      }\r\n        else {setPoint(point+1)}\r\n    }\r\n    }\r\n    \r\n  if (current[0]?.type==='boolean') {\r\n      input=\r\n      <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n      <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\r\n        <Radio.Button value='yes'>True</Radio.Button>\r\n        <Radio.Button value='no'>False</Radio.Button>\r\n      </Radio.Group>\r\n      </Form.Item>\r\n  } else if(current[0]?.type==='check'){\r\n    input=\r\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n         <Checkbox.Group onChange={handleCheckChange} >\r\n            {current[0]?.options.map(\r\n              (option,index)=><Checkbox key={index} style={{ lineHeight: '32px'}} value={option}>{option}</Checkbox>\r\n            )}\r\n        </Checkbox.Group>\r\n    </Form.Item>\r\n      \r\n  }else if(current[0]?.type==='radio'){\r\n    input=\r\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n         <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\r\n          <Radio.Button value='good'>Good</Radio.Button>\r\n          <Radio.Button value='bad'>Bad</Radio.Button>\r\n          <Radio.Button value='poor'>Poor</Radio.Button>\r\n        </Radio.Group>\r\n    </Form.Item>\r\n      \r\n  } else if(current[0]?.type==='number'){\r\n      input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><InputNumber onChange={handleNumberChange} value={allAnswers[point-1]?.answer}    style={{marginBottom:15}}  size='large' min={0}/></Form.Item>\r\n}else if(current[0]?.type==='listpairs'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Input placeholder={firstpart}  />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                    <Input placeholder={secondpart} />\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else if(current[0]?.type==='listselect'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Input placeholder={firstpart}  />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                    <Select style={{width:200}}>\r\n                      {\r\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\r\n                      }\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else if(current[0]?.type==='radiolist'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Select style={{width:200}}>\r\n                      {\r\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\r\n                      }\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                          <Radio.Group  style={{marginBottom:15}}  size='large'>\r\n                            <Radio.Button value='increasing'><ArrowUpOutlined/></Radio.Button>\r\n                            <Radio.Button value='decreasing'><ArrowDownOutlined/></Radio.Button>\r\n                          </Radio.Group>\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else{\r\n    input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><Input  onChange={handleChange} value={allAnswers[point-1]?.answer}   style={{marginBottom:15}}  type={current[0]?.type} size='large' /></Form.Item>\r\n  };\r\n    return(\r\n        <>\r\n         <h1 style={{fontSize:'14em',lineHeight:0.4,color:'lightgrey',opacity:0.2,fontWeight:'bolder'}}>\r\n           {point>9?point:'0'+point}\r\n        </h1>\r\n           <Form onFinish={handleFinish}  style={{width:'100%'}}>\r\n            <Card  \r\n              actions={[\r\n                <Button type='default' size='large' style={{borderRadius:15}} onClick={()=>{point!==1 ? setPoint(point-1):setPoint(point);\r\n                 }}>Back</Button>,\r\n                <Button type='primary' size='large'   /* disabled */ style={{borderRadius:15}} htmlType='submit' >{point===questions.length?'Finish':'Next'}</Button>\r\n                ]}\r\n\r\n            >\r\n                <Space direction='vertical' size='large'>\r\n                <h1 style={{fontSize:'max(13px,1vw)',wordWrap:'break-word',textTransform:'uppercase',textAlign:'center'}}>{current[0]?.question}</h1>\r\n                {input}\r\n                </Space>\r\n\r\n\r\n            </Card>\r\n            </Form>\r\n      </>  \r\n    );\r\n};\r\nexport default SurveyCard;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\controls\\legend\\legend.js",["246","247"],"/* import { MapControl, withLeaflet,useLeflet } from \"react-leaflet\";\r\nimport React from 'react';\r\nimport L from \"leaflet\";\r\nimport 'leaflet-choropleth';\r\nimport {Button} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n/* import './App.css' \r\n\r\nclass Legend extends MapControl {\r\n\r\n  \r\n  createLeafletElement(props) {}\r\n\r\n  componentDidMount() {\r\n    // get color depending on population density value\r\n    const getColor = d => {\r\n      return d ===0\r\n        ? \"#800026\"\r\n        : d ===1\r\n        ? \"#FEB24C\"\r\n        : \"#FFEDA0\";\r\n    };\r\n\r\n    const legend = L.control({ position: \"bottomleft\" });\r\n    \r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create(\"div\", \"info legend\");\r\n      const grades = ['Malaria', 'COVID-19', 'Diabetes'];\r\n      let labels = [];\r\n      let from;\r\n      for (let i = 0; i < grades.length; i++) {\r\n\r\n        from=grades[i];\r\n\r\n        labels.push(\r\n\r\n          '<button type=\"link\" class=\"btn ant-btn\" >' +from+'</button>'\r\n           \r\n        );\r\n      }\r\n\r\n      div.innerHTML = labels.join(\"<br><br>\");\r\n      return div;\r\n    };\r\n\r\n    const { map } = this.props.leaflet;\r\n    legend.addTo(map);\r\n  }\r\n}\r\n\r\nexport default withLeaflet(Legend); */\r\n\r\nimport React from 'react';\r\nimport { Card } from 'antd';\r\nimport { Paper,Select,MenuItem,Typography } from '@material-ui/core';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer,Tooltip,BarChart,Bar} from 'recharts';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(time, prevalence) {\r\n  return { time, prevalence };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00', 0),\r\n  createData('03:00', 300),\r\n  createData('06:00', 600),\r\n  createData('09:00', 800),\r\n  createData('12:00', 1500),\r\n  createData('15:00', 2000),\r\n  createData('18:00', 2400),\r\n  createData('21:00', 2400),\r\n  createData('24:00', undefined),\r\n]\r\nconst data2 = [\r\n  createData('Jan', 0),\r\n  createData('Feb', 1),\r\n  createData('Mar', 3),\r\n  createData('Apr', 4),\r\n  createData('May', 1),\r\n  createData('Jun', 0),\r\n  createData('Jul', 0),\r\n  createData('Aug', 2),\r\n  createData('Sep', 3),\r\n  createData('Oct', 1),\r\n  createData('Nov', 4),\r\n  createData('Dec', 7),\r\n]\r\nconst data3 = [\r\n  createData('2017', 7),\r\n  createData('2018', 5),\r\n]\r\n\r\nexport const Plot =(props)=>{\r\n  const theme = useTheme();\r\n  return(\r\n    <div style={{height:'45vh',paddingBottom:20}}>\r\n    <ResponsiveContainer>\r\n              <LineChart\r\n                data={data2}\r\n                margin={{\r\n                  top: 16,\r\n                  right: 16,\r\n                  bottom: 0,\r\n                  left: 16,\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} padding={{ left: 30, right: 30 }} />\r\n                <Tooltip />\r\n                <YAxis stroke={theme.palette.text.secondary}>\r\n                  <Label\r\n                    angle={270}\r\n                    position=\"left\"\r\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n                  >\r\n                   {props.yname}\r\n                  </Label>\r\n                </YAxis>\r\n                <Line type=\"monotone\" dataKey=\"prevalence\" stroke={theme.palette.primary.main} dot={false} />\r\n              </LineChart>\r\n      </ResponsiveContainer>  \r\n\r\n      </div>\r\n  );\r\n\r\n}\r\nexport const Plot2 =(props)=>{\r\n  const theme = useTheme();\r\n  return(\r\n    <div style={{height:'45vh',paddingBottom:20}}>\r\n    <ResponsiveContainer>\r\n              <BarChart\r\n                data={data3}\r\n                margin={{\r\n                  top: 16,\r\n                  right: 16,\r\n                  bottom: 0,\r\n                  left: 16,\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} padding={{ left: 30, right: 30 }} />\r\n                <Tooltip />\r\n                <YAxis stroke={theme.palette.text.secondary}>\r\n                  <Label\r\n                    angle={270}\r\n                    position=\"left\"\r\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n                  >\r\n                   {props.yname}\r\n                  </Label>\r\n                </YAxis>\r\n                <Bar type=\"monotone\" dataKey=\"prevalence\"  fill=\"#8884d8\" />\r\n              </BarChart>\r\n      </ResponsiveContainer>  \r\n\r\n      </div>\r\n  );\r\n\r\n}\r\nconst Legend =()=>{\r\n\r\n\r\n  const theme = useTheme();\r\n    const [age, setAge] = React.useState('new');\r\n    const [caseType,setCaseType]=React.useState('New prevalence')\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        setCaseType(setCaseTypes(event.target.value))\r\n    };\r\n    const setCaseTypes=(age)=>{\r\n      if(age==='new' ){\r\n        return 'New prevalence'\r\n      }\r\n      else if(age==='fatal'){\r\n        return 'Fatal prevalence'\r\n      }else{\r\n        return 'Recovered prevalence'\r\n      }\r\n    }; \r\n  \r\n    return (\r\n        <div style={{width:'100%',display:'flex',flexDirection:'column',alignItemns:'center'}}>\r\n            \r\n            <Paper style={{height:'15vh',marginBottom:20}} >\r\n                <span >Legend info goes here</span>\r\n            </Paper>\r\n            <Paper>\r\n                <h3>New and fatal prevalence</h3>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={age}\r\n                onChange={handleChange}\r\n                >\r\n                <MenuItem value={'new'}>New prevalence</MenuItem>\r\n                <MenuItem value={'fatal'}>Fatal prevalence</MenuItem>\r\n                <MenuItem value={'recovered'}>Recovered prevalence</MenuItem>\r\n                </Select>\r\n                <Paper style={{height:'45vh',paddingBottom:20}}>\r\n                <h3 >\r\n                  {caseType}\r\n              </h3>  \r\n              <ResponsiveContainer>\r\n              <LineChart\r\n                data={data}\r\n                margin={{\r\n                  top: 16,\r\n                  right: 16,\r\n                  bottom: 0,\r\n                  left: 16,\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n                <YAxis stroke={theme.palette.text.secondary}>\r\n                  <Label\r\n                    angle={270}\r\n                    position=\"left\"\r\n                    style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n                  >\r\n                    prevalence (100)\r\n                  </Label>\r\n                </YAxis>\r\n                <Line type=\"monotone\" dataKey=\"prevalence\" stroke={theme.palette.primary.main} dot={false} />\r\n              </LineChart>\r\n      </ResponsiveContainer>                 \r\n                </Paper>\r\n\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Legend;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\diseaseForm.js",["248","249","250","251","252","253","254"],"import React from 'react'\r\nimport {Row,Col,Button,Form,Input,Select,Space} from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport {Get,Post} from '../../api'\r\nexport const DiseaseForm = () =>{\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 20 },\r\n        },\r\n      };\r\n      const formItemLayoutWithOutLabel = {\r\n        wrapperCol: {\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 20, offset: 4 },\r\n        },\r\n      };\r\n\r\n      const postdiseases = async(body) =>{\r\n        var url = \"diseases\";\r\n         const data = await Post(url,body);\r\n         \r\n     \r\n     }\r\n\r\n\r\n      const onFinish = values => {\r\n        console.log('Received values of form:', values);\r\n        values.diseases.map(value=>{\r\n          const body = {\r\n            name:value.disease,\r\n          \r\n          } \r\n          const bod = JSON.stringify(body)\r\n          postdiseases(bod)\r\n        })  \r\n      };\r\n    \r\n\r\n      const { Option } = Select;\r\n\r\n\r\n        function handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n        }\r\n\r\n\r\n    return(\r\n       <>\r\n         \r\n\r\n             \r\n           \r\n\r\n\r\n\r\n               <Form style={{marginTop:\"10px\"}} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n             <Row>\r\n                \r\n               <Form.List name=\"diseases\">\r\n                 {(fields, { add, remove }) => (\r\n                   <>\r\n                    <Col xs=\"24\" md=\"12\">\r\n                     {fields.map(field => (\r\n                       <Space key={field.key} style={{ display: 'flex', marginBottom: 3,marginRight:10 }} align=\"baseline\">\r\n                         <Form.Item\r\n                           {...field}\r\n                           name={[field.name, 'disease']}\r\n                           fieldKey={[field.fieldKey, 'disease']}\r\n                           rules={[{ required: true, message: 'Missing disease ' }]}\r\n                         >\r\n                           <Input placeholder=\"Input disease here\" />\r\n                         </Form.Item>\r\n                         <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                       </Space>\r\n                     ))}\r\n                     </Col>\r\n                     <Col xs=\"24\" md=\"12\">\r\n                     <Form.Item>\r\n                       <Button className=\"addF\" style={{marginTop:\"3px\"}} type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                         Add Disease\r\n                       </Button>\r\n                     </Form.Item>\r\n                     </Col>\r\n                   </>\r\n                 )}\r\n               </Form.List>\r\n             <Col md=\"12\" xs=\"24\">\r\n             <Form.Item>\r\n                 <Button  style={{margin:\"3px 10px 0px\"}} type=\"primary\" htmlType=\"submit\">\r\n                   Submit\r\n                 </Button>\r\n               </Form.Item>\r\n             </Col>\r\n             <Col md=\"12\" xs=\"24\">\r\n            \r\n             </Col>\r\n              \r\n               </Row>\r\n             </Form>\r\n       </>\r\n    );\r\n\r\n    \r\n  \r\n}\r\n\r\n","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\api.js",["255","256","257","258","259","260","261","262","263","264","265","266"],"const REACT_APP_API_URL= 'http://localhost:1337'\r\n\r\nexport const Post = async(url,body,token) => {\r\n  const link = `${REACT_APP_API_URL}` + '/' + url;\r\n  \r\n  if (token){\r\n     console.log(body)\r\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Authorization':`Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n      },\r\n     body:body\r\n   })\r\n     \r\n   if(response.ok){\r\n      const data = await response.json()\r\n      console.log(data)\r\n      return data\r\n  }\r\n\r\n  const errMessage = await response.text()\r\n  throw new Error(errMessage)\r\n\r\n  return response; \r\n  }\r\n  else{\r\n  \r\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\r\n      method: 'POST',\r\n      headers: {\r\n           \r\n          'Content-Type': 'application/json',\r\n      },\r\n     body:body\r\n   })\r\n     \r\n   if(response.ok){\r\n      const data = await response.json()\r\n      console.log(data)\r\n      return data\r\n  }\r\n\r\n  const errMessage = await response.text()\r\n  throw new Error(errMessage)\r\n \r\n  return response; \r\n \r\n  }\r\n \r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const Get = async(url,token) => {\r\n  const link = `${REACT_APP_API_URL}` + '/' + url;\r\n  \r\n  if (token){\r\n    \r\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\r\n      method: 'GET',\r\n      headers: {\r\n         'Authorization':`Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n      },\r\n  \r\n   })\r\n     \r\n   if(response.ok){\r\n      const data = await response.json()\r\n      return data\r\n  }\r\n\r\n  const errMessage = await response.text()\r\n  throw new Error(errMessage)\r\n\r\n  return response; \r\n  }\r\n  else{\r\n  \r\n   const response = await fetch(`${REACT_APP_API_URL}` + '/' + url, {\r\n      method: 'GET',\r\n      headers: {\r\n           \r\n          'Content-Type': 'application/json',\r\n      },\r\n    \r\n   })\r\n     \r\n   if(response.ok){\r\n      const data = await response.json()\r\n      return data\r\n  }\r\n\r\n  const errMessage = await response.text()\r\n  throw new Error(errMessage)\r\n\r\n\r\n  return response; \r\n \r\n  }\r\n \r\n\r\n\r\n\r\n\r\n}","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAdmin\\orgAdmin.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React, {useState} from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty,Form,Result} from 'antd';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Legend, { Plot } from '../../controls/legend/legend';\r\nimport {EditFilled ,UserOutlined,ExportOutlined,UserAddOutlined} from '@ant-design/icons';\r\nimport MainHeader from '../../components/mainHeader';\r\nimport {Request} from '../request/request'\r\nimport {Survey} from '../survey/survey'\r\nimport Axios from 'axios';\r\n\r\nconst {TabPane}=Tabs;\r\nconst {Option}=Select;\r\nconst {Header}=Layout;\r\n\r\nconst Box=(props)=>{\r\n    const [modalState,setModalState]=useState(false);\r\n    const [profileName,setProfileName]=useState(props.data.username)\r\n    const [profileKey,setProfileKey]=useState(props.data.key)\r\n    console.log(props.data.key)\r\n    return(\r\n        <>\r\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\r\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\r\n        </div>\r\n        <Modal\r\n        title='Edit Profile'\r\n        style={{ top: 100 }}\r\n        width={500}\r\n        visible={modalState}\r\n        onOk={() => setModalState(false)}\r\n        onCancel={() => setModalState(false)}\r\n        footer={[\r\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\r\n              Delete\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\r\n              Revert\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\r\n            Save\r\n          </Button>\r\n          ]}\r\n      >\r\n                    <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <label >Profile Name</label>\r\n                        <Input\r\n                        type='text'\r\n                        value={profileName}\r\n                        onChange={(e)=>setProfileName(e.target.value)}\r\n                        size='large'\r\n                        style={{width:'50%',minWidth:330,marginTop:5}}\r\n                        />  \r\n                        <label style={{marginTop:8}}>Profile Key</label>\r\n                        <Input\r\n                        type='text'\r\n                        value={profileKey}\r\n                        onChange={(e)=>setProfileKey(e.target.value)}\r\n                        size='large'\r\n                        style={{width:'45%',minWidth:300,marginTop:5}}\r\n                        />  \r\n                        </div>\r\n\r\n      </Modal>\r\n        \r\n        </>\r\n    );\r\n}\r\nconst Activity=()=>{\r\n    return(\r\n        <div style={{height:220,border:'1px solid #adadad',margin:20}}>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst OrgAdminPage =()=>{\r\n    function createData(time, amount) {\r\n        return { time, amount };\r\n      }\r\n      \r\n  /*     const data = [\r\n        createData('00:00', 0),\r\n        createData('03:00', 300),\r\n        createData('06:00', 600),\r\n        createData('09:00', 800),\r\n        createData('12:00', 1500),\r\n        createData('15:00', 2000),\r\n        createData('18:00', 2400),\r\n        createData('21:00', 2400),\r\n        createData('24:00', undefined),\r\n      ] */\r\n    \r\n    const [username,setUsername]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const theme = useTheme();\r\n    const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\r\n    let selectedAccounts=selectedOrg.org_users\r\n\r\n    const createOrgUser=()=>{\r\n      Axios.post('http://localhost:1337/org-users', \r\n      {\r\n        username: username,\r\n        key: password,\r\n        organization:JSON.parse(localStorage.getItem('selectedOrg'))[0].id\r\n      }\r\n      )\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n          }}\r\n\r\n        \r\n        )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    \r\n    }\r\n    let me=localStorage.getItem('org_admin')\r\n    return(\r\n      <div className='profilePage' style={{backgroundColor:'white'}}>\r\n       <MainHeader/>\r\n\r\n       {\r\n                me?\r\n                <>\r\n        <div style={{display:'flex',marginTop:'10vh',width:'100%',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n        <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>username ADMIN DASHBOARD</h1>\r\n        <div style={{width:'80%'}}>\r\n            <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto'}}>\r\n                    <TabPane tab=\"Manage Profiles\" key=\"1\" >\r\n                        <div className='adminProfiles' style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(230px,1fr))',height:'55vh'}}>\r\n                           {\r\n                             selectedAccounts?\r\n                              <>\r\n                                {\r\n                                selectedAccounts.map((selectedAccount,index)=><Box   key={selectedAccount} data={selectedAccount}/>)\r\n                               }\r\n                              </>\r\n                             :\r\n                             <Empty/>\r\n                           }  \r\n                          \r\n\r\n                        </div>\r\n                        \r\n                    </TabPane>\r\n                    \r\n                    <TabPane tab=\"Profile Activities\" key=\"2\"  >\r\n                        \r\n                        <div style={{display:'flex',flexDirection:'column',height:'55vh'}}>\r\n                         <Select defaultValue='kofi' size='large' style={{maxWidth:'max(20%,100px)'}}>\r\n                           <Option value='kofi'>Kofi</Option> \r\n                           <Option value='ama'>Ama</Option> \r\n                           <Option value='tetteh'>Tetteh</Option> \r\n                           <Option value='kookor'>Kookor</Option> \r\n                           <Option value='baba'>Baba</Option> \r\n                           <Option value='timo'>Timo</Option> \r\n                           <Option value='man'>Manoo</Option>  \r\n                         </Select>\r\n                         <Card  style={{minHeight:'40vh',marginTop:20,borderRadius:5}}>\r\n                            <Plot yname='No of Entries'/>\r\n                         </Card>\r\n                          \r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"New Profile\" key=\"3\" >\r\n                    <Form layout='vertical' onFinish={createOrgUser} style={{display:'flex',flexDirection:'column',height:'55vh',alignItems:'flex-start'}}>\r\n\r\n                        <h1 style={{fontSize:'min(35px,8vw)',color:'lightslategray'}}>New Profile</h1> \r\n\r\n                        \r\n                        <Avatar shape='square' size='large' icon={<UserAddOutlined/>} />\r\n                        <label style={{marginTop:10,color:'lightgray'}}>Profile Name</label>\r\n                        <Form.Item\r\n                          name=\"username\"\r\n                          rules={[{ required: true, message: 'Please input profile name!' }]}\r\n                        >\r\n                        <Input\r\n                        type='text'\r\n                        placeholder='Enter profile name'\r\n                        size='large'\r\n                        value={username}\r\n                        style={{width:'max(50%,55vw)',margin:5}}\r\n                        onChange={(e)=>setUsername(e.target.value)}\r\n                        />  \r\n                        </Form.Item>\r\n                        <label style={{marginTop:15,color:'lightgray'}}>Profile Key</label>\r\n                        <Form.Item\r\n                        \r\n                          name=\"password\"\r\n                          rules={[{ required: true, message: 'Please input profile key!' }]}\r\n                        >\r\n                        <Input\r\n                        type='text'\r\n                        placeholder='Enter profile key'\r\n                        size='large'\r\n                        value={password}\r\n                        style={{width:'max(45%,50vw)',margin:5}}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        /> \r\n                        </Form.Item> \r\n                       <Button type='primary' htmlType='submit' style={{alignSelf:'flex-end',height:45,marginTop:30,backgroundColor:'lightslategray',borderColor:'lightslategray'}}>Create Profile</Button>\r\n                    </Form>\r\n                        \r\n                    </TabPane>\r\n\r\n                  \r\n                    </Tabs>\r\n                  \r\n        </div>\r\n        </div>\r\n        </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh'}}\r\n                    status=\"403\"\r\n                    title=\"Unauthorized Access\"\r\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/home'} type=\"primary\">Back to Home</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default OrgAdminPage;",["283","284"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\entry\\entry.js",["285","286","287","288","289"],"import {message,Tabs,Row, Col,Modal,Input, Avatar, Button, Form ,List, Result, Empty, Select} from \"antd\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {UserOutlined,ExportOutlined} from '@ant-design/icons';\r\nimport SurveyCard from \"../../components/surveyCard\";\r\nimport MainHeader from '../../components/mainHeader';\r\nimport axios from 'axios';\r\n\r\nconst {Option}=Select;\r\nconst MiniCard=(props)=>{\r\n\r\n    const [modalState,setModalState]=useState(false);\r\n    const [questions,setQuestions]=useState([])\r\n    \r\n        useEffect(() => {\r\n            axios.get('http://localhost:1337/questions')\r\n            .then(\r\n              res =>{\r\n                if(res.data){\r\n                  console.log(res.data)\r\n                  setQuestions(res.data)\r\n              }} )\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n        },[]);\r\n    \r\n    \r\n\r\n      let filtered=questions.filter(question=>question.disease?.name===props.text)\r\n      \r\n \r\n    return(\r\n      \r\n        <>\r\n        <Button className='diseaseButton' style={{height:50,margin:10,borderRadius:20,fontWeight:'500'}} onClick={() => setModalState(true)}>\r\n            {props.text}\r\n        </Button>\r\n        <Modal\r\n        title={props.text}\r\n        centered\r\n        style={{ top: '20%'}}\r\n        width={920}\r\n        visible={modalState}\r\n        onOk={() => setModalState(false)}\r\n        onCancel={() => setModalState(false)}\r\n      >\r\n        {\r\n            filtered?\r\n            <List\r\n            className='adminProfiles'\r\n                    size='medium'\r\n                    style={{height:'35vh',overflowY:'scroll'}}\r\n                    dataSource={filtered}\r\n                    renderItem={item => <List.Item>{item.question}</List.Item>}\r\n                />\r\n                :\r\n                <List/>\r\n\r\n        }\r\n       \r\n      </Modal>\r\n      </>\r\n    );\r\n}\r\nconst Entry=()=>{\r\n    const {TabPane} = Tabs;\r\n\r\n    const [surveyUID,setSurveyUID]=useState('')\r\n    const [selectedCommunity,setSelectedCommunity]=useState();\r\n    const [asDate,setAsDate]=useState('')\r\n\r\n    const [start,setStart]=useState(false)\r\n    const [step,setStep]=useState(false)\r\n    const [diseases,setDiseases]=useState([])\r\n    const [communities,setCommunities]=useState([])\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/diseases')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n              setDiseases(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/communities')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n              setCommunities(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n\r\n    const error = () => {\r\n        message.error('This is an error message');\r\n      };\r\n\r\n    const content = (\r\n        <div style={{display:'flex',flexDirection:'column'}}>\r\n          <Button type='link' size='large' onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\r\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\r\n        </div>\r\n      );\r\n      const [preview,setPreview]=useState(true);\r\n      const mee=localStorage.getItem('current_user')\r\n      let style=mee?{}:{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column',alignItems:'center'}\r\n    return(\r\n        \r\n        <div style={style}>\r\n            <MainHeader/>\r\n            {\r\n                mee?\r\n                <>\r\n            <Row  sm={24} >\r\n           \r\n            <Row className='entryPoint'>\r\n                <Col md={start?0:4}  className='links' style={{backgroundColor:'#f5f5f580'}}>\r\n                {/* <Popover content={content} trigger=\"click\">\r\n                    <Avatar size={70} icon={<UserOutlined/>} style={{marginTop:30,marginBottom:20}}/>\r\n                </Popover> */}\r\n                    <Button block  size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(true)}}>Preview</Button>\r\n                    <Button  block size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(false)}}>Take A Survey</Button>\r\n                </Col>\r\n                <Col md={start?24:20} className='entryContent'>\r\n                    {\r\n                        preview?\r\n                        <div style={{padding:35}}>\r\n                        <h1 style={{fontSize:40,color:'white',textAlign:'left',marginBottom:40}}>Click A Disease to Preview</h1>\r\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\r\n                        {\r\n                            diseases.map(\r\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\r\n                                \r\n                            )\r\n                        }\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    :\r\n                    <div className='selectDisease'>\r\n                        <Row style={{width:'100%',height:'100%'}}>\r\n                            \r\n                            \r\n                            <Col md={12} className='svgee' >\r\n\r\n\r\n                            </Col>\r\n                            <Col md={12} flex='auto' style={{backgroundColor:'#4e54c8'}}>\r\n                                {\r\n                                    !step?\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\r\n                                    <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\r\n                                    {\r\n                                        diseases.map(\r\n                                            (disease)=><Button onClick={()=>{\r\n                                                setStep(disease.questions.length>0?true:false)\r\n                                                if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\r\n                                            }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\r\n                                            \r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                    :\r\n                                    <>\r\n                                        {\r\n                                    start?\r\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\r\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \r\n                                    \r\n                                    <Row style={{width:'100%'}}>\r\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n                                        <SurveyCard surveyUID={surveyUID} asDate={asDate} community={selectedCommunity}/>\r\n                                        </Col>\r\n                                    </Row>          \r\n                                    \r\n                                </div> \r\n                                    :\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\r\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                                    <Form\r\n                                        layout='vertical'  \r\n                                        onFinish={()=>setStart(true)}\r\n                                        \r\n                                    >\r\n                                        \r\n                                        <Form.Item name=\"surveyUID\" label=\"SurveyUID\" rules={[{ required: true, message: 'Please input a surveyUID!' }]}>\r\n                                        <Input className='formInput' placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"ActualSurveyDate\" label=\"Actual Survey Date\" rules={[{ required: true, message: 'Please enter the actual survey date!' }]}>\r\n                                        <Input className='formInput' type='date' placeholder=\"Enter Actual Survey Date\" size='large' onChange={(e)=>setAsDate(e.target.value)} value={asDate} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"community\" label=\"Community\" rules={[{ required: true, message: 'Please select a community' }]}>\r\n                                        <Select className='formInput' value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\r\n                                            {\r\n                                                communities?\r\n                                                communities.map(\r\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                                \r\n                                            }\r\n                                        </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item >\r\n                                        <Button type=\"primary\" block size='large' htmlType='submit' >Next</Button>\r\n                                        </Form.Item> \r\n                                    </Form>\r\n                                    </div>\r\n                                    \r\n                                    </div>\r\n                                }\r\n                                    </>\r\n                                }\r\n                                \r\n                                \r\n                                \r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </div>\r\n                    }\r\n                    \r\n                </Col>\r\n            </Row>\r\n                 \r\n            </Row>\r\n            {//Code for mobile version\r\n            }\r\n            {/* <Row className=\"entryMobile\">\r\n                <div style={{height:'92vh',marginTop:'8vh',width:'100%'}}>\r\n                <Col style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',height:'10vh'}}  xs={24} md={0}>\r\n                    <h5 style={{width:'50%'}}>Survey And Preview</h5>\r\n                </Col>\r\n               \r\n               \r\n                <Tabs style={{width:'100%'}} centered defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Preview\" key=\"1\">\r\n                    <div className='adminProfiles' style={{padding:35,height:'80vh'}}>\r\n                        <h6 style={{fontSize:15,color:'gray',textAlign:'center',marginBottom:40}}>Click A Disease to Preview</h6>\r\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\r\n                        {\r\n                            diseases.map(\r\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\r\n                                \r\n                            )\r\n                        }\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Take Survey\" key=\"2\">\r\n                    <div className='adminProfiles' style={{display:'flex',flexDirection:'column',alignItems:'center',height:'80vh'}}>\r\n                    {\r\n                                    !step?\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\r\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                                    <Form\r\n                                        layout='vertical'   \r\n                                    >\r\n                                        \r\n                                        <Form.Item label=\"SurveyUID\">\r\n                                        <Input placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Community\">\r\n                                        <Select value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\r\n                                            {\r\n                                                communities?\r\n                                                communities.map(\r\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                                \r\n                                            }\r\n                                        </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item >\r\n                                        <Button type=\"primary\" block size='large' \r\n                                        onClick={()=>{\r\n                                            setStep(true)\r\n                                        }} >Next</Button>\r\n                                        </Form.Item> \r\n                                    </Form>\r\n                                    </div>\r\n                                    \r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        {\r\n                                    start?\r\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\r\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \r\n                                    \r\n                                    <Row style={{width:'100%'}}>\r\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n                                        <SurveyCard surveyUID={surveyUID} community={selectedCommunity}/>\r\n                                        </Col>\r\n                                    </Row>          \r\n                                    \r\n                                </div> \r\n                                    :\r\n                                <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\r\n                                <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\r\n                                {\r\n                                    diseases.map(\r\n                                        (disease)=><Button onClick={()=>{\r\n                                            setStart(disease.questions.length>0?true:false)\r\n                                            if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\r\n                                        }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\r\n                                        \r\n                                    )\r\n                                }\r\n                                </div>\r\n                                </div>\r\n                                }\r\n                                    </>\r\n                                }\r\n                                \r\n                    </div>\r\n                    </TabPane>\r\n                   \r\n                </Tabs>\r\n                </div>\r\n             \r\n            </Row> */}\r\n            </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh',color:'white'}}\r\n                    status=\"403\"\r\n                    \r\n                    title={<span style={{color:'white'}}>403</span>}\r\n                \r\n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Entry;\r\n\r\n","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\serviceWorker.js",[],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\homePage\\home.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\card.js",["307","308"],"import React,{useState} from 'react';\r\nimport axios from 'axios'\r\nimport {Button,Modal,message} from 'antd';\r\nimport FormInput from './input'\r\nconst MyCard=({ ...props})=>{\r\n    const colorCode='#adff2f50';\r\n    const [showModal,setShowModal] = useState(false);\r\n    const [reply,setReply] = useState('');\r\n    let normalUser=JSON.parse(localStorage.getItem('currentUser'))\r\n    let orgUser=JSON.parse(localStorage.getItem('current_user'))\r\n    const handleReply=()=>{\r\n        if(normalUser){\r\n            \r\n            axios.post('http://localhost:1337/replies', \r\n            {\r\n              user: normalUser.id,\r\n              forum:props.data.id,\r\n              reply: reply\r\n            }\r\n            )\r\n              .then(\r\n                res =>{\r\n                  if(res.data){\r\n                   \r\n                    message.success('Replied Successfully')\r\n                }}\r\n          \r\n              \r\n              )\r\n              .catch((error) => {\r\n                console.log(error);\r\n              }) \r\n              \r\n        }else if(orgUser){\r\n            axios.post('http://localhost:1337/replies', \r\n            {\r\n              org_user: orgUser.id,\r\n              forum:props.data.id,\r\n              reply: reply\r\n            }\r\n            )\r\n              .then(\r\n                res =>{\r\n                  if(res.data){\r\n                    console.log(res.data)\r\n                    message.success('Replied Successfully')\r\n                    setShowModal(!showModal)\r\n                }}\r\n          \r\n              \r\n              )\r\n              .catch((error) => {\r\n                console.log(error);\r\n              })\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        \r\n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\r\n          \r\n            <h3 style={{textAlign:'left'}}>{props.data.title}</h3>\r\n             <p>{props.data.content}</p>\r\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end'}}>\r\n            <Button onClick={()=> {\r\n                if(normalUser||orgUser){\r\n                    setShowModal(!showModal)\r\n                }else{\r\n                    message.error('You must login to reply a forum')\r\n                }\r\n            } }>\r\n            <span>Reply</span>\r\n            </Button>\r\n            <Modal\r\n                        title=\"Enter Your Reply\"\r\n                        visible={showModal}\r\n                        onOk={handleReply}\r\n                        onCancel={()=>{setShowModal(!showModal)}}\r\n                        >\r\n                       <FormInput\r\n                             \r\n                              name=\"key\"\r\n                              type=\"textArea\"\r\n                              value={reply}\r\n                              onChange={(e)=>{setReply(e.target.value)}}\r\n                              placeholder=\"Enter Reply\"\r\n                              error ={false}\r\n                              required\r\n                              className=\"formInput\"\r\n                       />\r\n                       \r\n                          </Modal>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\nconst MyReplies=({title,replies,...props})=>{\r\n    const colorCode='#adff2f50';\r\n    const listItems = replies.map((reply) =>\r\n    <p key={reply.id} style={{textAlign:'left'}}>{reply.reply}</p>\r\n  );\r\n    return(\r\n        \r\n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\r\n          \r\n            <h3 style={{textAlign:'left'}}>{title}</h3>\r\n            <div>{listItems}</div>\r\n          \r\n            \r\n            \r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\nexport {MyCard};\r\nexport {MyReplies};","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\survey.js",[],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js",["309","310","311","312","313"],"import React from 'react';\r\nimport L from 'leaflet';\r\nimport {useMap, MapContainer, Marker,TileLayer,Popup} from 'react-leaflet';\r\n/* import Boundary from '../../controls/boundary/boundary';\r\n */import 'leaflet/dist/leaflet.css';\r\nimport { Paper} from '@material-ui/core'\r\nimport Choropleth from 'react-leaflet-choropleth'\r\nimport africa from './../../controls/boundary/africa.geo.json'\r\nimport axios from 'axios'\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport { Drawer,List,Button} from 'antd';\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction ChangeView({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class Mapp extends React.Component {\r\n  state={\r\n        lat:7.946527,\r\n        lng: -1.023194,\r\n        zoom: 3,\r\n        json:africa,\r\n        open:false,\r\n        activeMarker:{}\r\n      }\r\n  \r\n      \r\n      \r\n    \r\n      \r\n    render() {\r\n      console.log(this.props.markers)\r\n      const style = {\r\n        fillColor: '#F28F3B',\r\n        weight: 2,\r\n        opacity: 1,\r\n        color: 'white',\r\n        dashArray: '3',\r\n        fillOpacity: 0.5\r\n    };\r\n    const changeCenter=()=>{\r\n      this.setState(() => ({\r\n        lat:51.505, \r\n        \r\n        lng:-0.09\r\n      }));\r\n      console.log(this.state.lat,this.state.lng)\r\n    }\r\n      \r\n    let showingFilter=this.props.markers.map(marker=>marker.answers.filter( answer=>answer.question.Keyword==='Population'||answer.question.Keyword==='Schistosomiasis Prevalence'||answer.question.Keyword==='Schistosomiasis Control Approaches'||answer.question.Keyword==='Stakeholders and Activities'))\r\n\r\n    let prevalence=this.props.markers.map(marker=>marker.answers.filter(ans=>ans.question.Keyword==='Schistosomiasis Prevalence'))\r\n    let prevv=prevalence[0]\r\n      return (\r\n      \r\n        <MapContainer center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} scrollWheelZoom={false} >\r\n          <ChangeView center={this.props.center.lat && this.props.center.long?[this.props.center.lat, this.props.center.long]:[this.state.lat, this.state.lng]}  zoom={this.props.zoom?this.props.zoom:this.state.zoom} /> \r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url='https://a.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          /> \r\n          {\r\n          this.props.markers.map(marker => \r\n          <Marker   key={marker.id} position={[marker.community.location.lat, marker.community.location.long]}>\r\n               <Drawer\r\n                title=\"Details\"\r\n                placement=\"right\"\r\n                width=\"40%\"\r\n                closable={true}\r\n                onClose={() => this.setState(() => ({\r\n                  open:false\r\n                }))}\r\n                visible={this.state.open}\r\n              >\r\n            <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}}  >\r\n            <h1 style={{textAlign:'left'}}>Recorded for {marker.community.Community}</h1>\r\n            <span style={{textAlign:'left',color:'slateblue'}}>{marker.published_at?.slice(0,10)}</span>\r\n            \r\n            <List\r\n            size=\"large\"\r\n            style={{width:'100%'}}\r\n            dataSource={showingFilter[0]}\r\n            renderItem={mark => <List.Item >\r\n            <h3 style={{textAlign:'left'}}>{mark.question.Keyword}</h3>&nbsp;<span style={{textAlign:'left',color:'grey'}}>{\r\n\r\n                    typeof(mark.answer)==='object'?\r\n                      typeof(mark.answer[0])==='object'?\r\n                        mark.answer.map(dat=>Object.values(dat)).join(' | ')\r\n                      :\r\n                        mark.answer.join(',')\r\n                    :\r\n                    mark.answer\r\n\r\n            }</span>\r\n            </List.Item>} \r\n          />\r\n    \r\n              <Button block size='large' onClick={()=>{\r\n               \r\n                localStorage.setItem('expandedCommunity',marker.community.id)\r\n                localStorage.setItem('selectedYear',marker.ActualSurveyDate)\r\n                window.location.href='/details'\r\n              }}  >See More</Button>\r\n        </div>\r\n        \r\n      </Drawer>\r\n            <Popup>\r\n              <h3>{marker.community.Community}</h3>\r\n              <h1>\r\n                {\r\n                  prevv[0]?.answer\r\n                }\r\n              </h1>\r\n              <Button variant='outlined' onClick={() => {\r\n                 console.log(prevalence[0].id)\r\n                this.setState(() => ({open:true}))\r\n                \r\n                }} >View Details</Button>\r\n            </Popup>\r\n          </Marker>)\r\n          }\r\n       \r\n        </MapContainer>\r\n       \r\n     \r\n  \r\n      );\r\n    }\r\n  }","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js",["314","315","316","317","318"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Button, Popover ,Avatar, Divider} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css';\r\nimport {EditFilled ,UserOutlined,ExportOutlined} from '@ant-design/icons';\r\n\r\n\r\nexport const MiniMiniHeader=(props)=>{\r\n  const content = (\r\n      <div style={{display:'flex',flexDirection:'column'}}>\r\n        <Button className='popoverButtons' type='link' size='large' onClick={()=>{\r\n          if(localStorage.getItem('current_user')){\r\n            window.location.href='/profile'\r\n          }else if(localStorage.getItem('currentUser')){\r\n            window.location.href='/other'\r\n          }else if(localStorage.getItem('org_admin')){\r\n            window.location.href='/orgadmin'\r\n          }\r\n          }}><UserOutlined/>Profile</Button>\r\n        <Button className='popoverButtons' type='link' size='large' danger \r\n        onClick={()=>{\r\n          localStorage.removeItem('current_user');\r\n          localStorage.removeItem('currentUser');\r\n          localStorage.removeItem('org_admin');\r\n          window.location.href='/';\r\n        }}><ExportOutlined/>Logout</Button>\r\n      </div>\r\n    );\r\n  return(\r\n      <div>\r\n          \r\n          <Popover style={{zIndex:100000000000000}} content={content} placement='bottomLeft'  trigger='hover'>\r\n                  <Avatar size={35} icon={<UserOutlined/>}/>\r\n        </Popover>\r\n              \r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nconst MiniHeader=()=>{\r\n    const content = (\r\n        <div style={{display:'flex',flexDirection:'column'}}>\r\n          <Button type='link' size='large' style={{color:'#6461ff'}} onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\r\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\r\n        </div>\r\n      );\r\n    return(\r\n        <div className=\"miniHeaderSection\">\r\n            \r\n            <Popover content={content} trigger=\"click\">\r\n\r\n                    <Avatar size={70} icon={<UserOutlined/>}/>\r\n        </Popover>\r\n                \r\n        </div>\r\n    );\r\n}\r\nexport default MiniHeader;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\mainHeader.js",["319","320","321"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\index.js",[],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\forum\\otherForum.js",["322","323","324","325","326","327","328"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport { Button, Card, Tabs,Form,Col,Row, Result,Input,Radio,Select } from 'antd';\r\n\r\nimport  '../../components/components.css';\r\nimport TagBox from '../../components/tagBox';\r\nimport ForumCard from '../../components/forumCard';\r\n\r\nimport {MyCard, MyReplies} from '../../components/card';\r\nimport ForumList from '../../components/forumList';\r\nimport TagSet from '../../components/tagSet';\r\nimport MainHeader from '../../components/mainHeader';\r\n\r\nconst {Option}=Select\r\nconst {TextArea}=Input\r\nconst OtherForum =()=>{\r\n    const [showDetails,setShowDetails] = useState(false);\r\n    const image=require('../../assets/whiteGhana.png')\r\n    const {TabPane} = Tabs;\r\n    let me=JSON.parse(localStorage.getItem('currentUser'))\r\n    let otherMe=JSON.parse(localStorage.getItem('current_user'))\r\n    const [title,setTitle]=useState('');\r\n    const [description,setDescription]=useState('');\r\n    const [content,setContent]=useState('');\r\n    const [disease,setDisease]=useState('')\r\n    const [community,setCommunity]=useState('');\r\n    const [diseases,setDiseases]=useState('')\r\n    const [communities,setCommunities]=useState('');\r\n    useEffect(() => {\r\n        async function fetchDiseases(){\r\n          await axios.get('http://localhost:1337/diseases')\r\n          .then(\r\n            res =>{\r\n              if(res.data){\r\n                setDiseases(res.data)\r\n            }} )\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n  \r\n        }\r\n        fetchDiseases();\r\n          \r\n      },[]);\r\n      useEffect(() => {\r\n        async function fetchCommunities(){\r\n          await axios.get('http://localhost:1337/communities')\r\n          .then(\r\n            res =>{\r\n              if(res.data){\r\n                setCommunities(res.data)\r\n            }} )\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n  \r\n        }\r\n        fetchCommunities();\r\n          \r\n      },[]);\r\n\r\n    const createForum=()=>{\r\n        console.log(\r\n            disease,community,description,title,content\r\n        )\r\n      axios.post('http://localhost:1337/forums',{author: me?.id, org_author:otherMe?.id, title:title, description: description ,content:content,disease:disease,community:community} )\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n          }}\r\n    \r\n        \r\n        )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    }\r\n    return(\r\n        <div >\r\n            <MainHeader/>\r\n        <div className='login not_mobi' style={{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'}}>\r\n        \r\n            \r\n            <Card  title={<h1 style={{fontSize:15,textAlign:'left'}}>Forums</h1>} style={{height:'75vh',width:'85%',borderRadius:15}}>\r\n                <Tabs tabPosition='left' defaultActiveKey='1' size='small' style={{height:'auto'}}>\r\n                    <TabPane tab=\"All Forums\" key=\"1\" >\r\n                        <div className='adminProfiles' style={{height:'63vh'}}>\r\n                        <ForumList/>\r\n\r\n                        </div>\r\n                        \r\n                    </TabPane>\r\n                    \r\n                    <TabPane tab=\"Community Tags\" key=\"2\"  >\r\n                        <div className='adminProfiles'  style={{height:'63vh'}}>\r\n                            <TagSet/> \r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"Disease Tags\" key=\"3\" >\r\n                    <div className='adminProfiles' style={{height:'63vh'}}>\r\n                            <TagSet disease/> \r\n                        </div>\r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"Create Forum\" key=\"4\" >\r\n                    {\r\n                        localStorage.getItem('current_user')||localStorage.getItem('currentUser')?\r\n                        <div className='adminProfiles' style={{height:'63vh'}}>\r\n                             <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start',justifyContent:'space-around'}}>\r\n                            <h1 style={{color:'lightslategray',margin:8}}>\r\n                                NEW FORUM\r\n                            </h1>\r\n                            <Form layout='vertical' onFinish={createForum}>\r\n                                \r\n                                <Form.Item\r\n                                label=\"Forum Title\"\r\n                                name=\"forumTitle\"\r\n                                rules={[{ required: true, message: 'Please input Forum Title!' }]}\r\n                                >\r\n                                    <Input\r\n                                    type='text'\r\n                                    value={title}\r\n                                    onChange={(e)=>setTitle(e.target.value)}\r\n                                    size='large'\r\n                                    \r\n                                    \r\n                                    />\r\n\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                label=\"Forum Description\"\r\n                                name=\"forumDescription\"\r\n                                rules={[{ required: true, message: 'Please input Forum Description!' }]}\r\n                                >\r\n                                    <Input\r\n                                    type='text'\r\n                                    size='large'\r\n                                    value={description}\r\n                                    onChange={(e)=>setDescription(e.target.value)}\r\n                                   \r\n                                    \r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                label=\"Forum Content\"\r\n                                name=\"forumContent\"\r\n                                rules={[{ required: true, message: 'Please input Forum Content!' }]}\r\n                                >\r\n                                <TextArea rows={4} value={content} onChange={(e)=>setContent(e.target.value)} />\r\n                            \r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                label=\"Select Disease Tag\"\r\n                                name=\"diseaseTag\"\r\n                                rules={[{ required: true, message: 'Please select disease tag!' }]}\r\n                                >\r\n                                <Radio.Group buttonStyle='solid' value={disease} onChange={(e)=>setDisease( e.target.value)} style={{display:'flex',flexDirection:'row',justifyContent:'flex-start',flexWrap:'wrap'}} size='large' >\r\n                                \r\n                                {\r\n                                    diseases?\r\n                                        diseases.map((dis,index)=><Radio.Button key={index} value={dis.id} style={{margin:2}}>{dis.name}</Radio.Button>)\r\n                                    :\r\n                                    null\r\n                                }\r\n                                </Radio.Group>\r\n\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                label=\"Select Community\"\r\n                                name=\"communityTag\"\r\n                                rules={[{ required: true, message: 'Please select community tag!' }]}\r\n                                >\r\n                                <Select  onChange={(value)=>setCommunity(value)} >\r\n                                    {\r\n                                        communities?\r\n                                        communities.map((comm,index)=><Option key={index} value={comm.id}>{comm.Community}</Option>) \r\n                                        :\r\n                                        null                                       \r\n                                    }\r\n                                 </Select>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                <Button type='primary' htmlType='submit' size='large' block>Create</Button>\r\n           \r\n                                </Form.Item>\r\n                            </Form>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <Result\r\n                            status=\"error\"\r\n                            title=\"403\"\r\n                            subTitle=\"Sorry, you are not authorized to create a forum.\"\r\n                            extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\r\n                        />\r\n\r\n                    }\r\n                    \r\n                        \r\n                    </TabPane>\r\n                    </Tabs>\r\n                  \r\n            </Card>\r\n                             \r\n\r\n        </div>\r\n   \r\n     <Row className=\"mobi\">\r\n     <Col style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',height:'10vh'}}  xs={24} md={0}>\r\n                    <h5 style={{width:'50%'}}>Survey And Preview</h5></Col>\r\n               \r\n               \r\n                <Tabs style={{width:'100%'}} centered defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"All Forums\" key=\"1\">\r\n                    <div style={{padding:35}}>\r\n                     \r\n                        <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center',overflowY:'scroll',height:'63vh'}}>\r\n                        <ForumList/>\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Community Tags\" key=\"2\">\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                    <div style={{height:'63vh',overflowY:'scroll'}}>\r\n                            <TagSet/> \r\n                        </div>    \r\n                      \r\n                    </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Disease Tags\" key=\"3\">\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                    <div style={{height:'63vh',overflowY:'scroll'}}>\r\n                            <TagSet disease/> \r\n                        </div> \r\n                      \r\n                    </div>\r\n                    </TabPane>\r\n                   \r\n                </Tabs>\r\n     </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default OtherForum;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagBox.js",["329"],"import React from 'react';\r\n\r\nconst TagBox=({onClick,...props})=>{\r\n    const colorCode='#adff2f50';\r\n    return(\r\n        \r\n        <div onClick={onClick} style={{flex:'25%',maxWidth:250,margin:20,height:'auto',minHeight:200,borderWidth:'3px',borderStyle:'solid',borderColor:'lightsteelblue',borderRadius:12,padding:25}}>\r\n           {props.disease?\r\n            <>\r\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.disease}</h4>\r\n            <p>\r\n                These are all the forums on {props.disease}\r\n            </p>\r\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\r\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\r\n            </div>\r\n            </>:\r\n            <>\r\n            <h4 style={{backgroundColor:'#77889990',color:'white',padding:5}}>{props.location}</h4>\r\n            <p>\r\n                These are all the forums at {props.location}\r\n            </p>\r\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end',marginTop:30}}>\r\n            <span style={{borderStyle:'solid',borderWidth:'2px',borderColor:'lightblue',borderRadius:5,color:'#0000ff80',fontWeight:'bold',padding:'2px 5px 2px 5px',fontSize:12}}>{props.numberOfForums} {props.numberOfForums>1?'forums':'forum'}</span>\r\n            </div>\r\n            \r\n            </>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default TagBox;",["330","331"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js",["332","333","334","335"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\surveyForm.js",["336","337","338","339","340"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js",["341","342","343","344"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Space, Button ,Avatar,Layout, Result} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport '../../App.css';\r\nimport Headers from \"../../components/header\";\r\nimport Banner from \"../../components/banner\";\r\nimport MainHeader from \"../../components/mainHeader\";\r\n\r\nconst ProfilePage=()=>{\r\n    const [disability,setDisability]=useState(true);\r\n    const [orgname,setOrgname]=useState('GHANA EDUCATION SERVICE')\r\n    const [orgUsername,setOrgUsername]=useState('GeSNoguchi');\r\n    const [orgPassword,setOrgPassword]=useState('osemigor123');\r\n    const{Header}=Layout;\r\n    const mee=localStorage.getItem('current_user')\r\n    return(\r\n        <div className='profilePage'>\r\n            <MainHeader/>\r\n            {\r\n                mee?\r\n                <>\r\n                <Headers/>\r\n            <div className='profileMidSection'>\r\n            \r\n                    <Card className='proCard' bordered style={{flex:0.3,height:'auto',backgroundColor:'white',textAlign:'left',display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start',flexShrink:0,margin:20,/* boxShadow:'3px 3px 20px #00000010' */minWidth:'min(95vw,350px)'}}>\r\n                        <h1 style={{color:'black',fontSize:30}}>\r\n                         PROFILE\r\n                        </h1>\r\n                        <h3 style={{color:'#40404090'}}>\r\n                            Name\r\n                        </h3>\r\n                        <Input type='text' value={orgname} onChange={(e)=>{setOrgname(e.target.value)}} disabled={disability} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\r\n                        <h3 style={{color:'#40404090'}}>\r\n                            Username\r\n                        </h3>\r\n                        <Input type='text' value={orgUsername} disabled={disability} onChange={(e)=>{setOrgUsername(e.target.value)}} size='large' style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\r\n                        <h3 style={{color:'#40404090'}}>\r\n                            Password\r\n                        </h3>\r\n                        <Input.Password type='password' value={orgPassword} disabled={disability} size='large' onChange={(e)=>{setOrgPassword(e.target.value)}} style={{marginBottom:15,fontSize:17,backgroundColor:'transparent',borderWidth:3}}/>\r\n                        <Button type='primary' size='large' onClick={()=>{setDisability(!disability)}}  block style={{marginBottom:30,backgroundColor:'#6461ff'}}>{disability?'Edit Profile':'Save'}</Button>\r\n                        <Button type='primary' size='large' onClick={()=>{\r\n                            localStorage.removeItem('current_user');\r\n                            window.location.href='/';\r\n                            }} danger block>Logout</Button>\r\n\r\n                    </Card>\r\n                <Card className='banner proCard' style={{flex:0.5,margin:20,minWidth:'min(95vw,350px)'}}>\r\n                    <h1>Take A Disease Survey</h1>\r\n                    <Button className='bannerButton' onClick={()=>{window.location.href='/entry';}}>Start</Button>\r\n                </Card>\r\n                \r\n            </div>\r\n            \r\n                \r\n\r\n                \r\n                </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh'}}\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                \r\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n       </div>     \r\n    );\r\n}\r\nexport default ProfilePage;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagSet.js",["345","346"],"import React,{useState,useEffect} from 'react';\r\nimport ForumList from './forumList';\r\nimport { Button, Empty } from 'antd';\r\nimport {CloseOutlined} from '@ant-design/icons';\r\nimport TagBox from './tagBox';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport axios from 'axios'\r\nconst TagSet =(props)=>{\r\n    const [view,setView]=useState(false);\r\n    const selectedDiseaseTag=localStorage.getItem('diseaseTag');\r\n    const selectedLocationTag=localStorage.getItem('communityTag');\r\n    const [diseases,setDiseases]=useState([])\r\n    const [communities,setCommunities]=useState([])\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/diseases')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              setDiseases(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/communities')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              setCommunities(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n    const replies = ['Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article','Great article','The best','Love Ya','Piece Of shit article'];\r\n    return(\r\n        <>\r\n        {props.disease?\r\n        <>\r\n        {\r\n            !view?\r\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\r\n                {\r\n                    diseases?\r\n                    <>\r\n                    {\r\n                        diseases.map(disease=><TagBox onClick={()=>{ setView(true);localStorage.setItem('diseaseTag',disease.id)  }} disease={disease.name} numberOfForums={disease.forums.length}/>)\r\n                      }\r\n                      </>\r\n                    :\r\n                    <Empty/>\r\n                }\r\n                {/* <TagBox onClick={()=>setView(true)} disease='Schistosomiasis'/>\r\n                <TagBox onClick={()=>setView(true)} disease='Cholera'/>\r\n                <TagBox onClick={()=>setView(true)} disease='Dysentry'/>\r\n                <TagBox onClick={()=>setView(true)} disease='Malaria'/>\r\n                <TagBox onClick={()=>setView(true)} disease='Diarrhoea'/> */}\r\n            </div>:\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\r\n                {\r\n                    selectedDiseaseTag?\r\n                    <>\r\n                        <Avatar size='small'  style={{boxShadow:'2px 2px 2px  #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',color:'white',backgroundColor:'darkgreen',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\r\n                        <ForumList filter={selectedDiseaseTag} />\r\n                    </>\r\n                    :\r\n                    <Empty/>\r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n        \r\n        }\r\n        </>\r\n        :\r\n\r\n        <>\r\n         {\r\n            !view?\r\n            <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))'}}>\r\n                {\r\n                    communities?\r\n                    <>\r\n                    {\r\n                        communities.map(community=><TagBox onClick={()=>{ setView(true);localStorage.setItem('communityTag',community.id)  }} location={community.Community} numberOfForums={community.forums.length}/>)\r\n                      }\r\n                      </>\r\n                    :\r\n                    <Empty/>\r\n                }\r\n            </div>:\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'}}>\r\n                <Avatar size='small'  style={{boxShadow:'3px 3px 2px #00000010'/* ,border:'0px solid darkgreen' */,cursor:'pointer',fontWeight:'bolder',color:'white',backgroundColor:'orange',alignSelf:'flex-start'}}  onClick={()=>setView(false)} icon={<CloseOutlined/>}/>\r\n                <ForumList location={selectedLocationTag}/>\r\n\r\n            </div>\r\n\r\n        \r\n        }\r\n        </>\r\n    \r\n        \r\n        }\r\n        \r\n        </>\r\n    );\r\n}\r\nexport default TagSet",["347","348"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumList.js",["349","350"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js",["351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js",["373","374","375","376","377","378","379","380","381"],"C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js",["382","383","384","385","386","387"],"import React, {useState} from \"react\";\r\nimport { Input, Card, Space, Button ,Avatar,Select, Form} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {UserOutlined,LockOutlined,KeyOutlined,MailOutlined} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport axios from 'axios'\r\nconst {Option}=Select;\r\nconst SignUpCard =({onClick,...props})=>{\r\n  const [fullname,setFullname]=useState('');\r\nconst [username,setUsername]=useState('');\r\nconst [email,setEmail]=useState('');\r\nconst [password,setPassword]=useState('');\r\nconst [key,setKey]=useState('');\r\nconst [loginType,setLoginType]=useState('other');\r\n\r\nconst handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const org = {\r\n      fullName: fullname,\r\n      username: username,\r\n      password: password,\r\n    }\r\n\r\n    axios.post('http://localhost:5002/auth/signUp', org)\r\n      .then(\r\n        res =>{\r\n          if(res.data){\r\n            console.log(res.data)\r\n        }}\r\n\r\n      \r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  ;\r\n\r\n    \r\n}\r\nconst handleSubmit2=(e)=>{\r\n /* console.log([username,password,email]) */\r\n\r\n  axios.post('http://localhost:1337/users', \r\n  {\r\n    username: username,\r\n    email:email,\r\n    password: password\r\n  }\r\n  )\r\n    .then(\r\n      res =>{\r\n        if(res.data){\r\n          console.log(res.data)\r\n      }}\r\n\r\n    \r\n    )\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n}\r\nreturn(\r\n    <Card style={{flex: 0.28,width:'min(95vw,100%)',border:'1px solid graysmoke',display:'flex',flexDirection:'column',alignItems:'center',borderRadius:15,backgroundColor:'white',justifyContent:'center'}}>\r\n      {\r\n        loginType==='other'?\r\n        <Form layout='vertical' onFinish={handleSubmit2}>\r\n       \r\n     \r\n      <h1 style={{fontSize:30,fontWeight:'bold',textAlign:'left'}}>Sign Up</h1>\r\n      \r\n      \r\n      \r\n      <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'lightblue',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')}>Org SignUp</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'#8a2be290',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={username}\r\n      onChange={(e)=>{setUsername(e.target.value)}}\r\n      placeholder=\"Enter your username\" \r\n      prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[{ required: true, message: 'Please input your email!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={email}\r\n      onChange={(e)=>{setEmail(e.target.value)}}\r\n      placeholder=\"Enter your email\" \r\n      prefix={<MailOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your password!' }]}\r\n      >\r\n\r\n      <Input \r\n      size=\"small\"\r\n      value={password}\r\n      className='formInput'\r\n      onChange={(e)=>{setPassword(e.target.value)}}\r\n      placeholder=\"Enter your password\" \r\n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Repeat Password\"\r\n        name=\"repeat\"\r\n        rules={[{ required: true, message: 'Please repeat your password!' }]}\r\n      >\r\n      <Input \r\n      size=\"small\"\r\n      className='formInput'\r\n      value={key}\r\n      onChange={(e)=>{setKey(e.target.value)}}\r\n      placeholder=\"Repeat password\" \r\n      prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n      />\r\n      </Form.Item>\r\n      <Button \r\n      size='small'\r\n      block\r\n      style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n      htmlType='submit'\r\n      >\r\n      Sign Up\r\n      </Button>\r\n\r\n    </Form>\r\n    :\r\n    <Form layout='vertical' onFinish={handleSubmit}>\r\n    \r\n    <h1 style={{fontSize:30,marginRight:10,fontWeight:'bold',textAlign:'left'}}>Org Sign Up</h1>\r\n    \r\n      \r\n\r\n    <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}><h4 style={{fontSize:14,color:'#8a2be290',textAlign:'left',marginRight:6,cursor:'pointer'}} onClick={()=>setLoginType('org')} >Org SignUp</h4><span style={{color:'blue'}}>/</span><h4 style={{fontSize:14,textAlign:'left',color:'lightblue',marginLeft:6,cursor:'pointer'}} onClick={()=>setLoginType('other')}>Other</h4></div>\r\n    <Form.Item\r\n        label=\"Org Name\"\r\n        name=\"org_name\"\r\n        rules={[{ required: true, message: 'Please enter org name!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n  \r\n    className='formInput'\r\n    onChange={(e)=>{setFullname(e.target.value)}}\r\n    placeholder=\"Enter org name\" \r\n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n  </Form.Item>\r\n    <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please enter org username!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    value={username}\r\n    className='formInput'\r\n    onChange={(e)=>{setUsername(e.target.value)}}\r\n    placeholder=\"Enter org username\" \r\n    prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please enter org password!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    className='formInput'\r\n    value={password}\r\n    onChange={(e)=>{setPassword(e.target.value)}}\r\n    placeholder=\"Enter org password\" \r\n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n      <Form.Item\r\n        label=\"Repeat Password\"\r\n        name=\"repeat\"\r\n        rules={[{ required: true, message: 'Please repeat your password!' }]}\r\n      >\r\n    <Input \r\n    size=\"small\"\r\n    className='formInput'\r\n    value={key}\r\n    placeholder=\"Repeat Password\" \r\n    onChange={(e)=>{setKey(e.target.value)}}\r\n    prefix={<LockOutlined className=\"site-form-item-icon\" />} \r\n    />\r\n    </Form.Item>\r\n    <Button \r\n    size='small'\r\n    block\r\n    style={{height:55,backgroundColor:'#247aeb',color:'white',marginTop:20,borderRadius:8}}\r\n    htmlType='submit'\r\n    >\r\n    Sign Up\r\n    </Button>\r\n\r\n  </Form>\r\n  \r\n      }\r\n    \r\n    <Button onClick={onClick} size={30} type='link' style={{color:'lightseagreen',textDecorationStyle:'solid',textDecorationColor:'lightseagreen',textDecorationLine:'underline',textDecorationWidth:1}}>Have an Account?</Button>\r\n    </Card>\r\n\r\n);\r\n\r\n}\r\n\r\nexport default SignUpCard;","C:\\Users\\admin\\Documents\\GitHub\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Login\\login.js",["388"],{"ruleId":"389","severity":1,"message":"390","line":2,"column":46,"nodeType":"391","messageId":"392","endLine":2,"endColumn":52},{"ruleId":"389","severity":1,"message":"393","line":5,"column":35,"nodeType":"391","messageId":"392","endLine":5,"endColumn":46},{"ruleId":"389","severity":1,"message":"394","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"389","severity":1,"message":"395","line":14,"column":8,"nodeType":"391","messageId":"392","endLine":14,"endColumn":11},{"ruleId":"389","severity":1,"message":"396","line":14,"column":12,"nodeType":"391","messageId":"392","endLine":14,"endColumn":18},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","replacedBy":"400"},{"ruleId":"389","severity":1,"message":"401","line":9,"column":17,"nodeType":"391","messageId":"392","endLine":9,"endColumn":25},{"ruleId":"389","severity":1,"message":"402","line":10,"column":11,"nodeType":"391","messageId":"392","endLine":10,"endColumn":25},{"ruleId":"389","severity":1,"message":"403","line":20,"column":13,"nodeType":"391","messageId":"392","endLine":20,"endColumn":39},{"ruleId":"389","severity":1,"message":"404","line":29,"column":16,"nodeType":"391","messageId":"392","endLine":29,"endColumn":20},{"ruleId":"405","severity":1,"message":"406","line":36,"column":37,"nodeType":"407","messageId":"408","endLine":36,"endColumn":39},{"ruleId":"389","severity":1,"message":"409","line":54,"column":18,"nodeType":"391","messageId":"392","endLine":54,"endColumn":30},{"ruleId":"389","severity":1,"message":"394","line":6,"column":3,"nodeType":"391","messageId":"392","endLine":6,"endColumn":7},{"ruleId":"389","severity":1,"message":"410","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":28},{"ruleId":"389","severity":1,"message":"411","line":2,"column":55,"nodeType":"391","messageId":"392","endLine":2,"endColumn":63},{"ruleId":"389","severity":1,"message":"412","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":14},{"ruleId":"389","severity":1,"message":"413","line":8,"column":8,"nodeType":"391","messageId":"392","endLine":8,"endColumn":17},{"ruleId":"389","severity":1,"message":"414","line":78,"column":12,"nodeType":"391","messageId":"392","endLine":78,"endColumn":19},{"ruleId":"389","severity":1,"message":"415","line":79,"column":12,"nodeType":"391","messageId":"392","endLine":79,"endColumn":23},{"ruleId":"389","severity":1,"message":"416","line":80,"column":12,"nodeType":"391","messageId":"392","endLine":80,"endColumn":23},{"ruleId":"389","severity":1,"message":"417","line":81,"column":11,"nodeType":"391","messageId":"392","endLine":81,"endColumn":17},{"ruleId":"389","severity":1,"message":"418","line":1,"column":15,"nodeType":"391","messageId":"392","endLine":1,"endColumn":24},{"ruleId":"389","severity":1,"message":"419","line":2,"column":29,"nodeType":"391","messageId":"392","endLine":2,"endColumn":32},{"ruleId":"389","severity":1,"message":"420","line":2,"column":33,"nodeType":"391","messageId":"392","endLine":2,"endColumn":36},{"ruleId":"389","severity":1,"message":"421","line":2,"column":37,"nodeType":"391","messageId":"392","endLine":2,"endColumn":44},{"ruleId":"389","severity":1,"message":"422","line":2,"column":45,"nodeType":"391","messageId":"392","endLine":2,"endColumn":50},{"ruleId":"389","severity":1,"message":"423","line":5,"column":8,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"413","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":17},{"ruleId":"389","severity":1,"message":"424","line":10,"column":8,"nodeType":"391","messageId":"392","endLine":10,"endColumn":15},{"ruleId":"389","severity":1,"message":"425","line":11,"column":7,"nodeType":"391","messageId":"392","endLine":11,"endColumn":12},{"ruleId":"389","severity":1,"message":"426","line":13,"column":7,"nodeType":"391","messageId":"392","endLine":13,"endColumn":17},{"ruleId":"389","severity":1,"message":"427","line":14,"column":7,"nodeType":"391","messageId":"392","endLine":14,"endColumn":17},{"ruleId":"389","severity":1,"message":"428","line":104,"column":7,"nodeType":"391","messageId":"392","endLine":104,"endColumn":12},{"ruleId":"389","severity":1,"message":"429","line":106,"column":12,"nodeType":"391","messageId":"392","endLine":106,"endColumn":19},{"ruleId":"389","severity":1,"message":"430","line":106,"column":20,"nodeType":"391","messageId":"392","endLine":106,"endColumn":30},{"ruleId":"389","severity":1,"message":"417","line":109,"column":12,"nodeType":"391","messageId":"392","endLine":109,"endColumn":18},{"ruleId":"397","replacedBy":"431"},{"ruleId":"399","replacedBy":"432"},{"ruleId":"389","severity":1,"message":"433","line":1,"column":22,"nodeType":"391","messageId":"392","endLine":1,"endColumn":27},{"ruleId":"389","severity":1,"message":"434","line":1,"column":29,"nodeType":"391","messageId":"392","endLine":1,"endColumn":32},{"ruleId":"389","severity":1,"message":"410","line":1,"column":34,"nodeType":"391","messageId":"392","endLine":1,"endColumn":39},{"ruleId":"389","severity":1,"message":"435","line":1,"column":77,"nodeType":"391","messageId":"392","endLine":1,"endColumn":81},{"ruleId":"389","severity":1,"message":"436","line":2,"column":9,"nodeType":"391","messageId":"392","endLine":2,"endColumn":23},{"ruleId":"389","severity":1,"message":"437","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":17},{"ruleId":"389","severity":1,"message":"438","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"389","severity":1,"message":"439","line":6,"column":15,"nodeType":"391","messageId":"392","endLine":6,"endColumn":20},{"ruleId":"389","severity":1,"message":"440","line":12,"column":5,"nodeType":"391","messageId":"392","endLine":12,"endColumn":9},{"ruleId":"441","severity":1,"message":"442","line":20,"column":59,"nodeType":"443","messageId":"444","endLine":20,"endColumn":61},{"ruleId":"389","severity":1,"message":"445","line":107,"column":8,"nodeType":"391","messageId":"392","endLine":107,"endColumn":15},{"ruleId":"389","severity":1,"message":"446","line":121,"column":8,"nodeType":"391","messageId":"392","endLine":121,"endColumn":21},{"ruleId":"389","severity":1,"message":"447","line":121,"column":22,"nodeType":"391","messageId":"392","endLine":121,"endColumn":38},{"ruleId":"389","severity":1,"message":"448","line":149,"column":11,"nodeType":"391","messageId":"392","endLine":149,"endColumn":17},{"ruleId":"389","severity":1,"message":"409","line":158,"column":12,"nodeType":"391","messageId":"392","endLine":158,"endColumn":24},{"ruleId":"389","severity":1,"message":"417","line":195,"column":11,"nodeType":"391","messageId":"392","endLine":195,"endColumn":17},{"ruleId":"449","severity":1,"message":"450","line":331,"column":99,"nodeType":"443","messageId":"451","endLine":331,"endColumn":100},{"ruleId":"449","severity":1,"message":"450","line":331,"column":112,"nodeType":"443","messageId":"451","endLine":331,"endColumn":113},{"ruleId":"389","severity":1,"message":"452","line":1,"column":16,"nodeType":"391","messageId":"392","endLine":1,"endColumn":24},{"ruleId":"389","severity":1,"message":"453","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":15},{"ruleId":"389","severity":1,"message":"454","line":2,"column":17,"nodeType":"391","messageId":"392","endLine":2,"endColumn":21},{"ruleId":"389","severity":1,"message":"410","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":28},{"ruleId":"389","severity":1,"message":"455","line":2,"column":30,"nodeType":"391","messageId":"392","endLine":2,"endColumn":36},{"ruleId":"389","severity":1,"message":"456","line":5,"column":9,"nodeType":"391","messageId":"392","endLine":5,"endColumn":19},{"ruleId":"397","replacedBy":"457"},{"ruleId":"399","replacedBy":"458"},{"ruleId":"389","severity":1,"message":"459","line":5,"column":11,"nodeType":"391","messageId":"392","endLine":5,"endColumn":20},{"ruleId":"389","severity":1,"message":"452","line":1,"column":16,"nodeType":"391","messageId":"392","endLine":1,"endColumn":24},{"ruleId":"389","severity":1,"message":"454","line":2,"column":17,"nodeType":"391","messageId":"392","endLine":2,"endColumn":21},{"ruleId":"389","severity":1,"message":"410","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":28},{"ruleId":"389","severity":1,"message":"455","line":2,"column":30,"nodeType":"391","messageId":"392","endLine":2,"endColumn":36},{"ruleId":"389","severity":1,"message":"390","line":2,"column":38,"nodeType":"391","messageId":"392","endLine":2,"endColumn":44},{"ruleId":"389","severity":1,"message":"460","line":5,"column":9,"nodeType":"391","messageId":"392","endLine":5,"endColumn":21},{"ruleId":"389","severity":1,"message":"461","line":5,"column":22,"nodeType":"391","messageId":"392","endLine":5,"endColumn":34},{"ruleId":"389","severity":1,"message":"393","line":5,"column":35,"nodeType":"391","messageId":"392","endLine":5,"endColumn":46},{"ruleId":"389","severity":1,"message":"394","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"441","severity":1,"message":"442","line":36,"column":23,"nodeType":"443","messageId":"444","endLine":36,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":52,"column":5,"nodeType":"464","messageId":"444","endLine":52,"endColumn":9},{"ruleId":"389","severity":1,"message":"465","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":18},{"ruleId":"389","severity":1,"message":"466","line":8,"column":8,"nodeType":"391","messageId":"392","endLine":8,"endColumn":19},{"ruleId":"389","severity":1,"message":"467","line":9,"column":8,"nodeType":"391","messageId":"392","endLine":9,"endColumn":19},{"ruleId":"468","severity":1,"message":"469","line":52,"column":7,"nodeType":"470","messageId":"471","endLine":120,"endColumn":6},{"ruleId":"389","severity":1,"message":"454","line":54,"column":10,"nodeType":"391","messageId":"392","endLine":54,"endColumn":14},{"ruleId":"389","severity":1,"message":"472","line":55,"column":32,"nodeType":"391","messageId":"392","endLine":55,"endColumn":42},{"ruleId":"389","severity":1,"message":"473","line":4,"column":9,"nodeType":"391","messageId":"392","endLine":4,"endColumn":12},{"ruleId":"389","severity":1,"message":"402","line":7,"column":11,"nodeType":"391","messageId":"392","endLine":7,"endColumn":25},{"ruleId":"389","severity":1,"message":"403","line":17,"column":13,"nodeType":"391","messageId":"392","endLine":17,"endColumn":39},{"ruleId":"389","severity":1,"message":"404","line":26,"column":16,"nodeType":"391","messageId":"392","endLine":26,"endColumn":20},{"ruleId":"405","severity":1,"message":"406","line":34,"column":34,"nodeType":"407","messageId":"408","endLine":34,"endColumn":36},{"ruleId":"389","severity":1,"message":"474","line":45,"column":15,"nodeType":"391","messageId":"392","endLine":45,"endColumn":21},{"ruleId":"389","severity":1,"message":"409","line":48,"column":18,"nodeType":"391","messageId":"392","endLine":48,"endColumn":30},{"ruleId":"389","severity":1,"message":"475","line":4,"column":9,"nodeType":"391","messageId":"392","endLine":4,"endColumn":13},{"ruleId":"449","severity":1,"message":"450","line":4,"column":39,"nodeType":"443","messageId":"451","endLine":4,"endColumn":40},{"ruleId":"449","severity":1,"message":"450","line":8,"column":56,"nodeType":"443","messageId":"451","endLine":8,"endColumn":57},{"ruleId":"476","severity":1,"message":"477","line":26,"column":3,"nodeType":"478","messageId":"479","endLine":26,"endColumn":19},{"ruleId":"449","severity":1,"message":"450","line":30,"column":56,"nodeType":"443","messageId":"451","endLine":30,"endColumn":57},{"ruleId":"476","severity":1,"message":"477","line":48,"column":3,"nodeType":"478","messageId":"479","endLine":48,"endColumn":19},{"ruleId":"389","severity":1,"message":"475","line":61,"column":9,"nodeType":"391","messageId":"392","endLine":61,"endColumn":13},{"ruleId":"449","severity":1,"message":"450","line":61,"column":39,"nodeType":"443","messageId":"451","endLine":61,"endColumn":40},{"ruleId":"449","severity":1,"message":"450","line":65,"column":56,"nodeType":"443","messageId":"451","endLine":65,"endColumn":57},{"ruleId":"476","severity":1,"message":"477","line":82,"column":3,"nodeType":"478","messageId":"479","endLine":82,"endColumn":19},{"ruleId":"449","severity":1,"message":"450","line":86,"column":56,"nodeType":"443","messageId":"451","endLine":86,"endColumn":57},{"ruleId":"476","severity":1,"message":"477","line":104,"column":3,"nodeType":"478","messageId":"479","endLine":104,"endColumn":19},{"ruleId":"389","severity":1,"message":"480","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":19},{"ruleId":"389","severity":1,"message":"481","line":4,"column":21,"nodeType":"391","messageId":"392","endLine":4,"endColumn":25},{"ruleId":"389","severity":1,"message":"482","line":4,"column":27,"nodeType":"391","messageId":"392","endLine":4,"endColumn":32},{"ruleId":"389","severity":1,"message":"483","line":4,"column":34,"nodeType":"391","messageId":"392","endLine":4,"endColumn":39},{"ruleId":"389","severity":1,"message":"484","line":4,"column":41,"nodeType":"391","messageId":"392","endLine":4,"endColumn":46},{"ruleId":"389","severity":1,"message":"485","line":4,"column":48,"nodeType":"391","messageId":"392","endLine":4,"endColumn":67},{"ruleId":"389","severity":1,"message":"486","line":5,"column":8,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"456","line":6,"column":9,"nodeType":"391","messageId":"392","endLine":6,"endColumn":19},{"ruleId":"389","severity":1,"message":"460","line":6,"column":21,"nodeType":"391","messageId":"392","endLine":6,"endColumn":33},{"ruleId":"389","severity":1,"message":"487","line":6,"column":34,"nodeType":"391","messageId":"392","endLine":6,"endColumn":48},{"ruleId":"389","severity":1,"message":"488","line":8,"column":9,"nodeType":"391","messageId":"392","endLine":8,"endColumn":16},{"ruleId":"389","severity":1,"message":"489","line":9,"column":9,"nodeType":"391","messageId":"392","endLine":9,"endColumn":15},{"ruleId":"389","severity":1,"message":"417","line":14,"column":8,"nodeType":"391","messageId":"392","endLine":14,"endColumn":14},{"ruleId":"389","severity":1,"message":"490","line":69,"column":7,"nodeType":"391","messageId":"392","endLine":69,"endColumn":15},{"ruleId":"389","severity":1,"message":"491","line":79,"column":14,"nodeType":"391","messageId":"392","endLine":79,"endColumn":24},{"ruleId":"389","severity":1,"message":"492","line":97,"column":11,"nodeType":"391","messageId":"392","endLine":97,"endColumn":16},{"ruleId":"397","replacedBy":"493"},{"ruleId":"399","replacedBy":"494"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":44,"nodeType":"391","messageId":"392","endLine":1,"endColumn":50},{"ruleId":"389","severity":1,"message":"495","line":1,"column":80,"nodeType":"391","messageId":"392","endLine":1,"endColumn":85},{"ruleId":"389","severity":1,"message":"424","line":66,"column":12,"nodeType":"391","messageId":"392","endLine":66,"endColumn":19},{"ruleId":"389","severity":1,"message":"496","line":102,"column":11,"nodeType":"391","messageId":"392","endLine":102,"endColumn":16},{"ruleId":"389","severity":1,"message":"497","line":106,"column":11,"nodeType":"391","messageId":"392","endLine":106,"endColumn":18},{"ruleId":"389","severity":1,"message":"422","line":1,"column":9,"nodeType":"391","messageId":"392","endLine":1,"endColumn":14},{"ruleId":"389","severity":1,"message":"410","line":1,"column":24,"nodeType":"391","messageId":"392","endLine":1,"endColumn":29},{"ruleId":"389","severity":1,"message":"498","line":5,"column":8,"nodeType":"391","messageId":"392","endLine":5,"endColumn":16},{"ruleId":"389","severity":1,"message":"445","line":99,"column":10,"nodeType":"391","messageId":"392","endLine":99,"endColumn":17},{"ruleId":"389","severity":1,"message":"499","line":130,"column":12,"nodeType":"391","messageId":"392","endLine":130,"endColumn":18},{"ruleId":"389","severity":1,"message":"500","line":130,"column":19,"nodeType":"391","messageId":"392","endLine":130,"endColumn":28},{"ruleId":"441","severity":1,"message":"501","line":149,"column":17,"nodeType":"443","messageId":"444","endLine":149,"endColumn":19},{"ruleId":"441","severity":1,"message":"442","line":161,"column":62,"nodeType":"443","messageId":"444","endLine":161,"endColumn":64},{"ruleId":"441","severity":1,"message":"442","line":172,"column":62,"nodeType":"443","messageId":"444","endLine":172,"endColumn":64},{"ruleId":"441","severity":1,"message":"442","line":186,"column":103,"nodeType":"443","messageId":"444","endLine":186,"endColumn":105},{"ruleId":"441","severity":1,"message":"442","line":187,"column":58,"nodeType":"443","messageId":"444","endLine":187,"endColumn":60},{"ruleId":"441","severity":1,"message":"442","line":202,"column":63,"nodeType":"443","messageId":"444","endLine":202,"endColumn":65},{"ruleId":"389","severity":1,"message":"417","line":225,"column":10,"nodeType":"391","messageId":"392","endLine":225,"endColumn":16},{"ruleId":"389","severity":1,"message":"502","line":225,"column":17,"nodeType":"391","messageId":"392","endLine":225,"endColumn":23},{"ruleId":"389","severity":1,"message":"503","line":229,"column":9,"nodeType":"391","messageId":"392","endLine":229,"endColumn":14},{"ruleId":"441","severity":1,"message":"501","line":535,"column":33,"nodeType":"443","messageId":"444","endLine":535,"endColumn":35},{"ruleId":"441","severity":1,"message":"442","line":546,"column":91,"nodeType":"443","messageId":"444","endLine":546,"endColumn":93},{"ruleId":"389","severity":1,"message":"459","line":6,"column":11,"nodeType":"391","messageId":"392","endLine":6,"endColumn":20},{"ruleId":"389","severity":1,"message":"459","line":100,"column":11,"nodeType":"391","messageId":"392","endLine":100,"endColumn":20},{"ruleId":"389","severity":1,"message":"504","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":15},{"ruleId":"389","severity":1,"message":"505","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":18},{"ruleId":"389","severity":1,"message":"506","line":9,"column":8,"nodeType":"391","messageId":"392","endLine":9,"endColumn":13},{"ruleId":"389","severity":1,"message":"425","line":50,"column":13,"nodeType":"391","messageId":"392","endLine":50,"endColumn":18},{"ruleId":"389","severity":1,"message":"507","line":58,"column":11,"nodeType":"391","messageId":"392","endLine":58,"endColumn":23},{"ruleId":"389","severity":1,"message":"452","line":1,"column":16,"nodeType":"391","messageId":"392","endLine":1,"endColumn":24},{"ruleId":"389","severity":1,"message":"453","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":15},{"ruleId":"389","severity":1,"message":"454","line":2,"column":17,"nodeType":"391","messageId":"392","endLine":2,"endColumn":21},{"ruleId":"389","severity":1,"message":"421","line":2,"column":48,"nodeType":"391","messageId":"392","endLine":2,"endColumn":55},{"ruleId":"389","severity":1,"message":"456","line":5,"column":9,"nodeType":"391","messageId":"392","endLine":5,"endColumn":19},{"ruleId":"389","severity":1,"message":"419","line":1,"column":10,"nodeType":"391","messageId":"392","endLine":1,"endColumn":13},{"ruleId":"389","severity":1,"message":"390","line":3,"column":16,"nodeType":"391","messageId":"392","endLine":3,"endColumn":22},{"ruleId":"389","severity":1,"message":"460","line":5,"column":44,"nodeType":"391","messageId":"392","endLine":5,"endColumn":56},{"ruleId":"389","severity":1,"message":"423","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"389","severity":1,"message":"413","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":17},{"ruleId":"389","severity":1,"message":"508","line":9,"column":9,"nodeType":"391","messageId":"392","endLine":9,"endColumn":15},{"ruleId":"389","severity":1,"message":"509","line":9,"column":17,"nodeType":"391","messageId":"392","endLine":9,"endColumn":26},{"ruleId":"389","severity":1,"message":"510","line":17,"column":12,"nodeType":"391","messageId":"392","endLine":17,"endColumn":23},{"ruleId":"389","severity":1,"message":"511","line":17,"column":24,"nodeType":"391","messageId":"392","endLine":17,"endColumn":38},{"ruleId":"389","severity":1,"message":"428","line":18,"column":11,"nodeType":"391","messageId":"392","endLine":18,"endColumn":16},{"ruleId":"389","severity":1,"message":"459","line":4,"column":11,"nodeType":"391","messageId":"392","endLine":4,"endColumn":20},{"ruleId":"397","replacedBy":"512"},{"ruleId":"399","replacedBy":"513"},{"ruleId":"389","severity":1,"message":"455","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":29},{"ruleId":"389","severity":1,"message":"404","line":5,"column":7,"nodeType":"391","messageId":"392","endLine":5,"endColumn":11},{"ruleId":"389","severity":1,"message":"514","line":16,"column":10,"nodeType":"391","messageId":"392","endLine":16,"endColumn":17},{"ruleId":"441","severity":1,"message":"442","line":161,"column":97,"nodeType":"443","messageId":"444","endLine":161,"endColumn":99},{"ruleId":"389","severity":1,"message":"401","line":10,"column":17,"nodeType":"391","messageId":"392","endLine":10,"endColumn":25},{"ruleId":"389","severity":1,"message":"402","line":12,"column":11,"nodeType":"391","messageId":"392","endLine":12,"endColumn":25},{"ruleId":"389","severity":1,"message":"403","line":22,"column":13,"nodeType":"391","messageId":"392","endLine":22,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":43,"column":35,"nodeType":"407","messageId":"408","endLine":43,"endColumn":37},{"ruleId":"515","severity":1,"message":"516","line":85,"column":11,"nodeType":"517","endLine":85,"endColumn":18,"suggestions":"518"},{"ruleId":"389","severity":1,"message":"410","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":28},{"ruleId":"389","severity":1,"message":"390","line":2,"column":38,"nodeType":"391","messageId":"392","endLine":2,"endColumn":44},{"ruleId":"389","severity":1,"message":"412","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"389","severity":1,"message":"417","line":14,"column":11,"nodeType":"391","messageId":"392","endLine":14,"endColumn":17},{"ruleId":"389","severity":1,"message":"455","line":3,"column":10,"nodeType":"391","messageId":"392","endLine":3,"endColumn":16},{"ruleId":"389","severity":1,"message":"519","line":36,"column":11,"nodeType":"391","messageId":"392","endLine":36,"endColumn":18},{"ruleId":"397","replacedBy":"520"},{"ruleId":"399","replacedBy":"521"},{"ruleId":"515","severity":1,"message":"522","line":81,"column":9,"nodeType":"517","endLine":81,"endColumn":11,"suggestions":"523"},{"ruleId":"515","severity":1,"message":"524","line":93,"column":9,"nodeType":"517","endLine":93,"endColumn":23,"suggestions":"525"},{"ruleId":"389","severity":1,"message":"390","line":3,"column":52,"nodeType":"391","messageId":"392","endLine":3,"endColumn":58},{"ruleId":"389","severity":1,"message":"495","line":3,"column":67,"nodeType":"391","messageId":"392","endLine":3,"endColumn":72},{"ruleId":"389","severity":1,"message":"480","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":19},{"ruleId":"389","severity":1,"message":"481","line":4,"column":21,"nodeType":"391","messageId":"392","endLine":4,"endColumn":25},{"ruleId":"389","severity":1,"message":"482","line":4,"column":27,"nodeType":"391","messageId":"392","endLine":4,"endColumn":32},{"ruleId":"389","severity":1,"message":"483","line":4,"column":34,"nodeType":"391","messageId":"392","endLine":4,"endColumn":39},{"ruleId":"389","severity":1,"message":"484","line":4,"column":41,"nodeType":"391","messageId":"392","endLine":4,"endColumn":46},{"ruleId":"389","severity":1,"message":"485","line":4,"column":48,"nodeType":"391","messageId":"392","endLine":4,"endColumn":67},{"ruleId":"389","severity":1,"message":"486","line":5,"column":8,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"438","line":5,"column":18,"nodeType":"391","messageId":"392","endLine":5,"endColumn":22},{"ruleId":"389","severity":1,"message":"456","line":6,"column":9,"nodeType":"391","messageId":"392","endLine":6,"endColumn":19},{"ruleId":"389","severity":1,"message":"460","line":6,"column":21,"nodeType":"391","messageId":"392","endLine":6,"endColumn":33},{"ruleId":"389","severity":1,"message":"487","line":6,"column":34,"nodeType":"391","messageId":"392","endLine":6,"endColumn":48},{"ruleId":"389","severity":1,"message":"526","line":6,"column":49,"nodeType":"391","messageId":"392","endLine":6,"endColumn":64},{"ruleId":"389","severity":1,"message":"527","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":18},{"ruleId":"389","severity":1,"message":"474","line":11,"column":8,"nodeType":"391","messageId":"392","endLine":11,"endColumn":14},{"ruleId":"389","severity":1,"message":"417","line":12,"column":8,"nodeType":"391","messageId":"392","endLine":12,"endColumn":14},{"ruleId":"389","severity":1,"message":"528","line":14,"column":7,"nodeType":"391","messageId":"392","endLine":14,"endColumn":10},{"ruleId":"389","severity":1,"message":"490","line":67,"column":7,"nodeType":"391","messageId":"392","endLine":67,"endColumn":15},{"ruleId":"389","severity":1,"message":"491","line":78,"column":14,"nodeType":"391","messageId":"392","endLine":78,"endColumn":24},{"ruleId":"389","severity":1,"message":"492","line":94,"column":11,"nodeType":"391","messageId":"392","endLine":94,"endColumn":16},{"ruleId":"389","severity":1,"message":"529","line":101,"column":8,"nodeType":"391","messageId":"392","endLine":101,"endColumn":24},{"ruleId":"389","severity":1,"message":"434","line":1,"column":29,"nodeType":"391","messageId":"392","endLine":1,"endColumn":32},{"ruleId":"389","severity":1,"message":"410","line":1,"column":34,"nodeType":"391","messageId":"392","endLine":1,"endColumn":39},{"ruleId":"389","severity":1,"message":"438","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"530","line":94,"column":10,"nodeType":"391","messageId":"392","endLine":94,"endColumn":20},{"ruleId":"389","severity":1,"message":"531","line":94,"column":22,"nodeType":"391","messageId":"392","endLine":94,"endColumn":35},{"ruleId":"515","severity":1,"message":"532","line":114,"column":3,"nodeType":"517","endLine":114,"endColumn":5,"suggestions":"533"},{"ruleId":"515","severity":1,"message":"534","line":138,"column":3,"nodeType":"517","endLine":138,"endColumn":5,"suggestions":"535"},{"ruleId":"441","severity":1,"message":"442","line":143,"column":95,"nodeType":"443","messageId":"444","endLine":143,"endColumn":97},{"ruleId":"389","severity":1,"message":"417","line":154,"column":10,"nodeType":"391","messageId":"392","endLine":154,"endColumn":16},{"ruleId":"389","severity":1,"message":"410","line":2,"column":23,"nodeType":"391","messageId":"392","endLine":2,"endColumn":28},{"ruleId":"389","severity":1,"message":"390","line":2,"column":38,"nodeType":"391","messageId":"392","endLine":2,"endColumn":44},{"ruleId":"389","severity":1,"message":"393","line":5,"column":35,"nodeType":"391","messageId":"392","endLine":5,"endColumn":46},{"ruleId":"389","severity":1,"message":"394","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":14},{"ruleId":"389","severity":1,"message":"536","line":7,"column":10,"nodeType":"391","messageId":"392","endLine":7,"endColumn":20},{"ruleId":"389","severity":1,"message":"474","line":9,"column":8,"nodeType":"391","messageId":"392","endLine":9,"endColumn":14},{"ruleId":"389","severity":1,"message":"428","line":7,"column":11,"nodeType":"391","messageId":"392","endLine":7,"endColumn":16},"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'KeyOutlined' is defined but never used.","'Link' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","no-native-reassign",["537"],"no-negated-in-lhs",["538"],"'setCount' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleChange' is defined but never used.","'Space' is defined but never used.","'Checkbox' is defined but never used.","'Banner' is defined but never used.","'ForumCard' is defined but never used.","'orgname' is assigned a value but never used.","'orgUsername' is assigned a value but never used.","'orgPassword' is assigned a value but never used.","'Header' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'TagBox' is defined but never used.","'TabPane' is assigned a value but never used.","'style' is assigned a value but never used.","'adminStyle' is assigned a value but never used.","'loginStyle' is assigned a value but never used.","'image' is assigned a value but never used.","'noUsers' is assigned a value but never used.","'setNoUsers' is assigned a value but never used.",["537"],["538"],"'Table' is defined but never used.","'Tag' is defined but never used.","'Spin' is defined but never used.","'renderToString' is defined but never used.","'ForumList' is defined but never used.","'Plot' is defined but never used.","'Plot2' is defined but never used.","'body' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'regions' is assigned a value but never used.","'surveyAnswers' is assigned a value but never used.","'setSurveyAnswers' is assigned a value but never used.","'Search' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useState' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'EditFilled' is defined but never used.",["537"],["538"],"'colorCode' is assigned a value but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","'Background' is defined but never used.","'Background2' is defined but never used.","'Background3' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Typography' is defined but never used.","'Get' is defined but never used.","'Option' is assigned a value but never used.","'link' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Label' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","'ExportOutlined' is defined but never used.","'Request' is defined but never used.","'Survey' is defined but never used.","'Activity' is assigned a value but never used.","'createData' is defined but never used.","'theme' is assigned a value but never used.",["537"],["538"],"'Empty' is defined but never used.","'error' is assigned a value but never used.","'content' is assigned a value but never used.","'Mappings' is defined but never used.","'hidden' is assigned a value but never used.","'setHidden' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Footer' is assigned a value but never used.","'marks' is assigned a value but never used.","'Paper' is defined but never used.","'Choropleth' is defined but never used.","'axios' is defined but never used.","'changeCenter' is assigned a value but never used.","'MyCard' is defined but never used.","'MyReplies' is defined but never used.","'showDetails' is assigned a value but never used.","'setShowDetails' is assigned a value but never used.",["537"],["538"],"'surveys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDiseases'. Either include it or remove the dependency array.","ArrayExpression",["539"],"'replies' is assigned a value but never used.",["537"],["538"],"React Hook useEffect has missing dependencies: 'props.filter', 'props.location', and 'props.user'. Either include them or remove the dependency array.",["540"],"React Hook useEffect has a missing dependency: 'forums'. Either include it or remove the dependency array. You can also do a functional update 'setForums(f => ...)' if you only need 'forums' in the 'setForums' call.",["541"],"'UserAddOutlined' is defined but never used.","'MainHeader' is defined but never used.","'Box' is assigned a value but never used.","'selectedAccounts' is assigned a value but never used.","'continents' is assigned a value but never used.","'setContinents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.",["542"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["543"],"'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},"Update the dependencies array to be: [count, getDiseases]",{"range":"554","text":"555"},"Update the dependencies array to be: [props.filter, props.location, props.user]",{"range":"556","text":"557"},"Update the dependencies array to be: [forums, props.filter]",{"range":"558","text":"559"},"Update the dependencies array to be: [questions]",{"range":"560","text":"561"},"Update the dependencies array to be: [expandSurvey]",{"range":"562","text":"563"},[1872,1879],"[count, getDiseases]",[1889,1891],"[props.filter, props.location, props.user]",[2147,2161],"[forums, props.filter]",[2296,2298],"[questions]",[2856,2858],"[expandSurvey]"]