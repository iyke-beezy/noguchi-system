[{"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\index.js":"1","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\serviceWorker.js":"2","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAdmin\\orgAdmin.js":"3","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js":"4","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\RecordCases.js":"5","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js":"6","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumCard.js":"7","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js":"8","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\banner.js":"9","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js":"10","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\surveyForm.js":"11","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\api.js":"12","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\card.js":"13","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js":"14","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\header.js":"15","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\input.js":"16","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\mainHeader.js":"17","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js":"18","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagBox.js":"19","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagSet.js":"20","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Login\\login.js":"21","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js":"22","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js":"23","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js":"24","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\entry\\entry.js":"25","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\forum\\otherForum.js":"26","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\homePage\\home.js":"27","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAccounts\\orgAccountss.js":"28","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\otherProfile\\otherProfile.js":"29","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\communityForm.js":"30","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\diseaseForm.js":"31"},{"size":520,"mtime":1615845807332,"results":"32","hashOfConfig":"33"},{"size":5227,"mtime":1615845807355,"results":"34","hashOfConfig":"33"},{"size":8576,"mtime":1615898176973,"results":"35","hashOfConfig":"33"},{"size":5468,"mtime":1615897368617,"results":"36","hashOfConfig":"33"},{"size":11368,"mtime":1615897290335,"results":"37","hashOfConfig":"33"},{"size":6855,"mtime":1615879465348,"results":"38","hashOfConfig":"33"},{"size":1017,"mtime":1615879178088,"results":"39","hashOfConfig":"33"},{"size":12258,"mtime":1615879482687,"results":"40","hashOfConfig":"33"},{"size":342,"mtime":1615879050568,"results":"41","hashOfConfig":"33"},{"size":5597,"mtime":1615898318581,"results":"42","hashOfConfig":"33"},{"size":5859,"mtime":1615845807355,"results":"43","hashOfConfig":"33"},{"size":2087,"mtime":1615845806544,"results":"44","hashOfConfig":"33"},{"size":3860,"mtime":1615879099595,"results":"45","hashOfConfig":"33"},{"size":7003,"mtime":1615879143134,"results":"46","hashOfConfig":"33"},{"size":521,"mtime":1615879258304,"results":"47","hashOfConfig":"33"},{"size":1170,"mtime":1615879326166,"results":"48","hashOfConfig":"33"},{"size":1828,"mtime":1615879406940,"results":"49","hashOfConfig":"33"},{"size":2096,"mtime":1615879428295,"results":"50","hashOfConfig":"33"},{"size":1626,"mtime":1615879524107,"results":"51","hashOfConfig":"33"},{"size":4067,"mtime":1615879546745,"results":"52","hashOfConfig":"33"},{"size":710,"mtime":1615896484902,"results":"53","hashOfConfig":"33"},{"size":4588,"mtime":1615896574086,"results":"54","hashOfConfig":"33"},{"size":3783,"mtime":1615896631908,"results":"55","hashOfConfig":"33"},{"size":2062,"mtime":1615897115537,"results":"56","hashOfConfig":"33"},{"size":18384,"mtime":1615897503878,"results":"57","hashOfConfig":"33"},{"size":10720,"mtime":1615897568826,"results":"58","hashOfConfig":"33"},{"size":19588,"mtime":1615897824171,"results":"59","hashOfConfig":"33"},{"size":9937,"mtime":1615897982230,"results":"60","hashOfConfig":"33"},{"size":11089,"mtime":1615914392863,"results":"61","hashOfConfig":"33"},{"size":4010,"mtime":1615911457685,"results":"62","hashOfConfig":"33"},{"size":2729,"mtime":1615911580641,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14x7t6d",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\index.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\serviceWorker.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAdmin\\orgAdmin.js",["133","134"],"import React, {useState} from 'react';\r\n\r\nimport { Button, Card, Input, Modal, Select, Tabs ,Avatar,Layout, Empty,Form,Result} from 'antd';\r\nimport { Plot } from '../../controls/legend/legend';\r\nimport MainHeader from '../../components/mainHeader';\r\nimport Axios from 'axios';\r\n\r\nconst {TabPane}=Tabs;\r\nconst {Option}=Select;\r\n\r\nconst Box=(props)=>{\r\n    const [modalState,setModalState]=useState(false);\r\n    const [profileName,setProfileName]=useState(props.data.username)\r\n    const [profileKey,setProfileKey]=useState(props.data.key)\r\n    console.log(props.data.key)\r\n    return(\r\n        <>\r\n        <div style={{height:160,border:'2px solid #adadad',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',margin:20,cursor:'pointer'}} onClick={() => setModalState(true)}>\r\n          <span style={{fontSize:50,color:'lightslategray'}}>AD</span>\r\n        </div>\r\n        <Modal\r\n        title='Edit Profile'\r\n        style={{ top: 100 }}\r\n        width={500}\r\n        visible={modalState}\r\n        onOk={() => setModalState(false)}\r\n        onCancel={() => setModalState(false)}\r\n        footer={[\r\n            <Button key=\"back\" danger type='default' onClick={() => setModalState(false)}>\r\n              Delete\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"default\"  onClick={() => setModalState(false)}>\r\n              Revert\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\"  onClick={() => setModalState(false)}>\r\n            Save\r\n          </Button>\r\n          ]}\r\n      >\r\n                    <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <label >Profile Name</label>\r\n                        <Input\r\n                        type='text'\r\n                        value={profileName}\r\n                        onChange={(e)=>setProfileName(e.target.value)}\r\n                        size='large'\r\n                        style={{width:'50%',minWidth:330,marginTop:5}}\r\n                        />  \r\n                        <label style={{marginTop:8}}>Profile Key</label>\r\n                        <Input\r\n                        type='text'\r\n                        value={profileKey}\r\n                        onChange={(e)=>setProfileKey(e.target.value)}\r\n                        size='large'\r\n                        style={{width:'45%',minWidth:300,marginTop:5}}\r\n                        />  \r\n                        </div>\r\n\r\n      </Modal>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst OrgAdminPage =()=>{\r\n    \r\n    \r\n    const [username,setUsername]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const selectedOrg=JSON.parse(localStorage.getItem('selectedOrg'))[0];\r\n    let selectedAccounts=selectedOrg.org_users\r\n\r\n    const createOrgUser=()=>{\r\n      Axios.post('http://localhost:1337/org-users', \r\n      {\r\n        username: username,\r\n        key: password,\r\n        organization:JSON.parse(localStorage.getItem('selectedOrg'))[0].id\r\n      }\r\n      )\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n          }}\r\n\r\n        \r\n        )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    \r\n    }\r\n    let me=localStorage.getItem('org_admin')\r\n    return(\r\n      <div className='profilePage' style={{backgroundColor:'white'}}>\r\n       <MainHeader/>\r\n\r\n       {\r\n                me?\r\n                <>\r\n        <div style={{display:'flex',marginTop:'10vh',width:'100%',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n        <h1 style={{fontSize:'max(3vw,25px)',width:'80%',color:'grey'}}>username ADMIN DASHBOARD</h1>\r\n        <div style={{width:'80%'}}>\r\n            <Tabs  tabPosition='top' defaultActiveKey='1' size='small' style={{height:'auto'}}>\r\n                    <TabPane tab=\"Manage Profiles\" key=\"1\" >\r\n                        <div className='adminProfiles' style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(230px,1fr))',height:'55vh'}}>\r\n                           {\r\n                             selectedAccounts?\r\n                              <>\r\n                                {\r\n                                selectedAccounts.map((selectedAccount,index)=><Box   key={selectedAccount} data={selectedAccount}/>)\r\n                               }\r\n                              </>\r\n                             :\r\n                             <Empty/>\r\n                           }  \r\n                          \r\n\r\n                        </div>\r\n                        \r\n                    </TabPane>\r\n                    \r\n                    <TabPane tab=\"Profile Activities\" key=\"2\"  >\r\n                        \r\n                        <div style={{display:'flex',flexDirection:'column',height:'55vh'}}>\r\n                         <Select defaultValue='kofi' size='large' style={{maxWidth:'max(20%,100px)'}}>\r\n                           <Option value='kofi'>Kofi</Option> \r\n                           <Option value='ama'>Ama</Option> \r\n                           <Option value='tetteh'>Tetteh</Option> \r\n                           <Option value='kookor'>Kookor</Option> \r\n                           <Option value='baba'>Baba</Option> \r\n                           <Option value='timo'>Timo</Option> \r\n                           <Option value='man'>Manoo</Option>  \r\n                         </Select>\r\n                         <Card  style={{minHeight:'40vh',marginTop:20,borderRadius:5}}>\r\n                            <Plot yname='No of Entries'/>\r\n                         </Card>\r\n                          \r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"New Profile\" key=\"3\" >\r\n                    <Form layout='vertical' onFinish={createOrgUser} style={{display:'flex',flexDirection:'column',height:'55vh',alignItems:'flex-start'}}>\r\n\r\n                        <h1 style={{fontSize:'min(35px,8vw)',color:'lightslategray'}}>New Profile</h1> \r\n\r\n                        \r\n                        <Avatar shape='square' size='large' icon={<UserAddOutlined/>} />\r\n                        <label style={{marginTop:10,color:'lightgray'}}>Profile Name</label>\r\n                        <Form.Item\r\n                          name=\"username\"\r\n                          rules={[{ required: true, message: 'Please input profile name!' }]}\r\n                        >\r\n                        <Input\r\n                        type='text'\r\n                        placeholder='Enter profile name'\r\n                        size='large'\r\n                        value={username}\r\n                        style={{width:'max(50%,55vw)',margin:5}}\r\n                        onChange={(e)=>setUsername(e.target.value)}\r\n                        />  \r\n                        </Form.Item>\r\n                        <label style={{marginTop:15,color:'lightgray'}}>Profile Key</label>\r\n                        <Form.Item\r\n                        \r\n                          name=\"password\"\r\n                          rules={[{ required: true, message: 'Please input profile key!' }]}\r\n                        >\r\n                        <Input\r\n                        type='text'\r\n                        placeholder='Enter profile key'\r\n                        size='large'\r\n                        value={password}\r\n                        style={{width:'max(45%,50vw)',margin:5}}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        /> \r\n                        </Form.Item> \r\n                       <Button type='primary' htmlType='submit' style={{alignSelf:'flex-end',height:45,marginTop:30,backgroundColor:'lightslategray',borderColor:'lightslategray'}}>Create Profile</Button>\r\n                    </Form>\r\n                        \r\n                    </TabPane>\r\n\r\n                  \r\n                    </Tabs>\r\n                  \r\n        </div>\r\n        </div>\r\n        </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh'}}\r\n                    status=\"403\"\r\n                    title=\"Unauthorized Access\"\r\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/home'} type=\"primary\">Back to Home</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default OrgAdminPage;","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\details.js",["135","136","137"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\detailsPage\\RecordCases.js",["138","139","140","141","142","143","144"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\signUpCard.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\forumCard.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\surveyCard.js",["145"],"import React, {useState,useEffect} from \"react\";\r\nimport { Input, Radio,Card, Space, Button ,message, InputNumber, Modal,Checkbox,Form,Select} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css'\r\nimport {PlusOutlined,ArrowUpOutlined,ArrowDownOutlined,MinusCircleOutlined ,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst {Option}=Select\r\nconst SurveyCard=(props)=>{\r\nconst [allAnswers,setAllAnswers]=useState([])\r\n const [questions,setQuestions]=useState([]);\r\n useEffect(() => {\r\n    axios.get('http://localhost:1337/questions')\r\n    .then(\r\n      res =>{\r\n        if(res.data){\r\n         let alls=res.data\r\n          setQuestions(res.data)\r\n          setAllAnswers(alls.map((all)=>({question:all.id,answer:[]}))) \r\n      }} )\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n},[]);\r\n const [point,setPoint]=useState(1);\r\n let current =questions.filter((question,index)=>index===point-1) \r\n let input;\r\n    const handleChange=e=>{\r\n       \r\n        let newArr=[...allAnswers]\r\n        newArr[point-1].answer=e.target.value\r\n       setAllAnswers(newArr) \r\n    \r\n    } \r\n    const handleNumberChange=value=>{\r\n        let newArr=[...allAnswers]\r\n        newArr[point-1].answer=value\r\n       setAllAnswers(newArr) \r\n    }  \r\n    const handleCheckChange=value=>{\r\n      let newArr=[...allAnswers]\r\n      newArr[point-1].answer=value\r\n      setAllAnswers(newArr) \r\n\r\n      console.log(allAnswers)\r\n    }\r\n    \r\n    const handleFinish=(values)=>{\r\n      {\r\n                \r\n        if(point===questions.length){\r\n          if(current[0]?.type==='radiolist'||current[0]?.type==='listpairs'||current[0]?.type==='listselect'){\r\n            console.log(values)\r\n            let newArr=[...allAnswers]\r\n            newArr[point-1].answer=Object.values(values)[0];\r\n            setAllAnswers(newArr) \r\n            console.log(allAnswers)\r\n          }\r\n            Modal.confirm({\r\n                title: 'Submit Survey',\r\n                content: 'Do you want to submit the survey?',\r\n                icon: <ExclamationCircleOutlined />,\r\n                onOk() {\r\n                  axios.post('http://localhost:1337/surveys',{\r\n                      surveyUID:props.surveyUID,\r\n                      org_user:JSON.parse(localStorage.getItem('userAndjwt')).user.id,\r\n                      disease:1,\r\n                      ActualSurveyDate:props.asDate,\r\n                      community:props.community,\r\n                      answers:allAnswers\r\n                       \r\n                  }).then(res =>{\r\n                        if(res.data){\r\n                            console.log(res.data)\r\n                            message.success('Survey Filled Successfully');\r\n                            window.location.href='/entry'\r\n                        }}\r\n\r\n                  )\r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                    message.error('Entry Unsuccessful')\r\n                  })\r\n                },\r\n                centered:true,\r\n                onCancel() {\r\n                  console.log('Cancel');\r\n                },\r\n                cancelText:'No',\r\n                okText:'Yes'\r\n              });\r\n\r\n        }else if(current[0]?.type==='listpairs'){\r\n            console.log(values)\r\n\r\n            let newArr=[...allAnswers]\r\n            newArr[point-1].answer=Object.values(values)[0];\r\n            setAllAnswers(newArr) \r\n            console.log(allAnswers)\r\n            setPoint(point+1)\r\n        }else if(current[0]?.type==='listselect'){\r\n          console.log(values)\r\n          let newArr=[...allAnswers]\r\n          newArr[point-1].answer=Object.values(values)[0];\r\n          setAllAnswers(newArr) \r\n          console.log(allAnswers)\r\n          setPoint(point+1)\r\n      }else if(current[0]?.type==='radiolist'){\r\n        console.log(values)\r\n        let newArr=[...allAnswers]\r\n          newArr[point-1].answer=Object.values(values)[0];\r\n          setAllAnswers(newArr) \r\n          console.log(allAnswers)\r\n          setPoint(point+1)\r\n      }\r\n        else {setPoint(point+1)}\r\n    }\r\n    }\r\n    \r\n  if (current[0]?.type==='boolean') {\r\n      input=\r\n      <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n      <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\r\n        <Radio.Button value='yes'>True</Radio.Button>\r\n        <Radio.Button value='no'>False</Radio.Button>\r\n      </Radio.Group>\r\n      </Form.Item>\r\n  } else if(current[0]?.type==='check'){\r\n    input=\r\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n         <Checkbox.Group onChange={handleCheckChange} >\r\n            {current[0]?.options.map(\r\n              (option,index)=><Checkbox key={index} style={{ lineHeight: '32px'}} value={option}>{option}</Checkbox>\r\n            )}\r\n        </Checkbox.Group>\r\n    </Form.Item>\r\n      \r\n  }else if(current[0]?.type==='radio'){\r\n    input=\r\n    <Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */>\r\n         <Radio.Group  style={{marginBottom:15}} value={allAnswers[point-1]?.answer} onChange={handleChange}  size='large'>\r\n          <Radio.Button value='good'>Good</Radio.Button>\r\n          <Radio.Button value='bad'>Bad</Radio.Button>\r\n          <Radio.Button value='poor'>Poor</Radio.Button>\r\n        </Radio.Group>\r\n    </Form.Item>\r\n      \r\n  } else if(current[0]?.type==='number'){\r\n      input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><InputNumber onChange={handleNumberChange} value={allAnswers[point-1]?.answer}    style={{marginBottom:15}}  size='large' min={0}/></Form.Item>\r\n}else if(current[0]?.type==='listpairs'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Input placeholder={firstpart}  />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                    <Input placeholder={secondpart} />\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else if(current[0]?.type==='listselect'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Input placeholder={firstpart}  />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                    <Select style={{width:200}}>\r\n                      {\r\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\r\n                      }\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else if(current[0]?.type==='radiolist'){\r\n  const [firstpart,secondpart]=current[0]?.Keyword.split(' and ')\r\n  input=\r\n        <Form.List name={current[0]?.Keyword} >\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(field => (\r\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, firstpart]}\r\n                    fieldKey={[field.fieldKey, firstpart]}\r\n                    rules={[{ required: true, message: 'Missing '+firstpart }]}\r\n                  >\r\n                    <Select style={{width:200}}>\r\n                      {\r\n                        current[0]?.options.map((option,index)=><Option key={index} value={option}>{option}</Option>)\r\n                      }\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...field}\r\n                    name={[field.name, secondpart]}\r\n                    fieldKey={[field.fieldKey, secondpart]}\r\n                    rules={[{ required: true, message: 'Missing '+secondpart }]}\r\n                  >\r\n                          <Radio.Group  style={{marginBottom:15}}  size='large'>\r\n                            <Radio.Button value='increasing'><ArrowUpOutlined/></Radio.Button>\r\n                            <Radio.Button value='decreasing'><ArrowDownOutlined/></Radio.Button>\r\n                          </Radio.Group>\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n  \r\n\r\n}else{\r\n    input=<Form.Item name={current[0]?.Keyword} /* rules={[{ required: true, message: 'Please enter data!' }]} */><Input  onChange={handleChange} value={allAnswers[point-1]?.answer}   style={{marginBottom:15}}  type={current[0]?.type} size='large' /></Form.Item>\r\n  };\r\n    return(\r\n        <>\r\n         <h1 style={{fontSize:'14em',lineHeight:0.4,color:'lightgrey',opacity:0.2,fontWeight:'bolder'}}>\r\n           {point>9?point:'0'+point}\r\n        </h1>\r\n           <Form onFinish={handleFinish}  style={{width:'100%'}}>\r\n            <Card  \r\n              actions={[\r\n                <Button type='default' size='large' style={{borderRadius:15}} onClick={()=>{point!==1 ? setPoint(point-1):setPoint(point);\r\n                 }}>Back</Button>,\r\n                <Button type='primary' size='large'   /* disabled */ style={{borderRadius:15}} htmlType='submit' >{point===questions.length?'Finish':'Next'}</Button>\r\n                ]}\r\n\r\n            >\r\n                <Space direction='vertical' size='large'>\r\n                <h1 style={{fontSize:'max(13px,1vw)',wordWrap:'break-word',textTransform:'uppercase',textAlign:'center'}}>{current[0]?.question}</h1>\r\n                {input}\r\n                </Space>\r\n\r\n\r\n            </Card>\r\n            </Form>\r\n      </>  \r\n    );\r\n};\r\nexport default SurveyCard;","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\banner.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\request\\request.js",["146","147","148"],"import React, { useEffect, useState } from 'react'\r\nimport { List, Drawer,Button, Divider,Row,Col, Switch, message } from 'antd';\r\nimport {} from '@ant-design/icons';\r\nimport Axios from 'axios';\r\n\r\nexport const Request =()=>{\r\n  const [filteredSurveys,setFilteredSurveys]=useState([])\r\n  const [surveys,setSurveys]=useState([])\r\n  useEffect(() => {\r\n    async function fetchSurveys(){\r\n      await Axios.get('http://localhost:1337/surveys')\r\n      .then(\r\n        res =>{\r\n          if(res.data){\r\n            setSurveys(res.data)\r\n            setFilteredSurveys(res.data.filter(dat=>dat.evaluated===null))\r\n            \r\n        }} )\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n    }\r\n    fetchSurveys();\r\n      \r\n  },[]);\r\n\r\n  const [orgs,setOrgs]=useState([])\r\n  useEffect(() => {\r\n    async function fetchOrgs(){\r\n      await Axios.get('http://localhost:1337/organizations')\r\n      .then(\r\n        res =>{\r\n          if(res.data){\r\n            setOrgs(res.data)\r\n        }} )\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n    }\r\n    fetchOrgs();\r\n      \r\n  },[]);\r\n  console.log(orgs,filteredSurveys)\r\n  \r\n  const [visible,setVisible]=useState(false)\r\n  const [clickedSurvey,setClickedSurvey]=useState([]);\r\nreturn(\r\n  <>\r\n      <Drawer\r\n                title=\"Details\"\r\n                placement=\"right\"\r\n                width=\"50%\"\r\n                closable={true}\r\n                onClose={() => setVisible(false)}\r\n                visible={visible}\r\n              >\r\n           <div style={{zIndex:100000000000,display:'flex',flexDirection:'column',alignItems:'flex-start'}}  >\r\n            <h1 style={{textAlign:'left'}}>Recorded for {clickedSurvey.community?.Community}</h1>\r\n            <h3 style={{textAlign:'left',color:'steelblue'}}>{clickedSurvey.published_at?.slice(0,10)}</h3>\r\n            \r\n            \r\n            \r\n          <Row style={{width:'100%'}}>\r\n            <Col md={24}>\r\n            \r\n             {\r\n               clickedSurvey.answers?.map( (answer,index)=>\r\n                 <Row key={index}  style={{width:'100%',paddingTop:20,paddingBottom:20,borderBottom:'1px solid whitesmoke'}}>\r\n                   <Col md={12}>\r\n                     <b>\r\n                       {answer.question.Keyword}\r\n                     </b>\r\n                   </Col>\r\n                   <Col md={12}>\r\n                     \r\n                     {\r\n                     \r\n                     typeof(answer.answer)==='object'? \r\n\r\n                     answer.answer.length>0?\r\n\r\n                     typeof(answer.answer[0])==='object'? \r\n                     <>\r\n                     <Row style={{width:'100%'}}>\r\n                       {\r\n                       Object.keys(answer.answer[0]).map(\r\n                         key=><Col md={12}><b>{key}</b></Col>)}\r\n                     </Row>\r\n                     <Row style={{width:'100%'}}>\r\n                          <Col md={24}>\r\n                          {\r\n                          answer.answer.map(\r\n                          (ans,index)=><Row style={{borderBottom:'1px dashed whitesmoke',paddingBottom:5,paddingTop:5}}>\r\n                              {\r\n                                Object.values(ans).map(\r\n                                  key=><Col md={12}  >{key}</Col>)\r\n                                  }\r\n                              \r\n                          </Row>\r\n                         )}\r\n                          </Col>\r\n                     </Row>\r\n                      </>\r\n                     :\r\n                     <Row style={{width:'100%'}}>\r\n                     <Col md={24}>\r\n                       {answer.answer.map(\r\n                         (ans,index)=><text style={{display:'block'}} key={index}>{ans}</text>\r\n                       )}\r\n                     </Col>\r\n                     </Row>\r\n                     :\r\n                     'empty object'\r\n                     :\r\n                     typeof(answer.answer)==='boolean'?\r\n\r\n                    answer.answer.toString()\r\n                     :\r\n                     answer.answer\r\n\r\n\r\n                     }\r\n                    \r\n                   </Col>\r\n                 </Row>\r\n               )\r\n             }\r\n             </Col>\r\n\r\n\r\n          </Row>\r\n    \r\n           </div>   \r\n        \r\n        \r\n      </Drawer>\r\n    \r\n    <Divider orientation=\"left\">Requests</Divider>\r\n    <List\r\n      size=\"large\"\r\n      header={<div></div>}\r\n      bordered\r\n      dataSource={filteredSurveys}\r\n      renderItem={item => <List.Item >\r\n        <Row style={{width:'100%'}}>\r\n          <Col md={22} onClick={()=>{\r\n        setClickedSurvey(item)\r\n        setVisible(true)\r\n        }} style={{display:'flex',flexDirection:'column',alignItems:'flex-start',}}>\r\n          <h2>{item.surveyUID}</h2>\r\n          <text style={{fontSize:\"10px\"}}>by {item.org_user.organization?orgs.filter(org=>org.id==item.org_user.organization)[0]?.name:''}</text>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Switch onChange={()=>{/* console.log('turned') */\r\n\r\n            Axios.put('http://localhost:1337/surveys/'+item.id,{\r\n              evaluated:true\r\n            }).then(\r\n              res =>{\r\n                if(res.data){\r\n                  message.success('Survey has been evaluated')\r\n                  window.location.href='/admin'\r\n              }} )\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n          \r\n          }}/>\r\n          </Col>\r\n        </Row>\r\n        </List.Item>}\r\n    />\r\n    \r\n  </>\r\n);\r\n\r\n      }\r\n\r\n\r\n\r\n","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\surveyForm.js",["149","150","151","152","153"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\api.js",["154","155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\card.js",["166"],"import React,{useState} from 'react';\r\nimport axios from 'axios'\r\nimport {Button,Modal,message} from 'antd';\r\nimport FormInput from './input'\r\nconst MyCard=({ ...props})=>{\r\n\r\n    const [showModal,setShowModal] = useState(false);\r\n    const [reply,setReply] = useState('');\r\n    let normalUser=JSON.parse(localStorage.getItem('currentUser'))\r\n    let orgUser=JSON.parse(localStorage.getItem('current_user'))\r\n    const handleReply=()=>{\r\n        if(normalUser){\r\n            \r\n            axios.post('http://localhost:1337/replies', \r\n            {\r\n              user: normalUser.id,\r\n              forum:props.data.id,\r\n              reply: reply\r\n            }\r\n            )\r\n              .then(\r\n                res =>{\r\n                  if(res.data){\r\n                   \r\n                    message.success('Replied Successfully')\r\n                }}\r\n          \r\n              \r\n              )\r\n              .catch((error) => {\r\n                console.log(error);\r\n              }) \r\n              \r\n        }else if(orgUser){\r\n            axios.post('http://localhost:1337/replies', \r\n            {\r\n              org_user: orgUser.id,\r\n              forum:props.data.id,\r\n              reply: reply\r\n            }\r\n            )\r\n              .then(\r\n                res =>{\r\n                  if(res.data){\r\n                    console.log(res.data)\r\n                    message.success('Replied Successfully')\r\n                    setShowModal(!showModal)\r\n                }}\r\n          \r\n              \r\n              )\r\n              .catch((error) => {\r\n                console.log(error);\r\n              })\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        \r\n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\r\n          \r\n            <h3 style={{textAlign:'left'}}>{props.data.title}</h3>\r\n             <p>{props.data.content}</p>\r\n            <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-end'}}>\r\n            <Button onClick={()=> {\r\n                if(normalUser||orgUser){\r\n                    setShowModal(!showModal)\r\n                }else{\r\n                    message.error('You must login to reply a forum')\r\n                }\r\n            } }>\r\n            <span>Reply</span>\r\n            </Button>\r\n            <Modal\r\n                        title=\"Enter Your Reply\"\r\n                        visible={showModal}\r\n                        onOk={handleReply}\r\n                        onCancel={()=>{setShowModal(!showModal)}}\r\n                        >\r\n                       <FormInput\r\n                             \r\n                              name=\"key\"\r\n                              type=\"textArea\"\r\n                              value={reply}\r\n                              onChange={(e)=>{setReply(e.target.value)}}\r\n                              placeholder=\"Enter Reply\"\r\n                              error ={false}\r\n                              required\r\n                              className=\"formInput\"\r\n                       />\r\n                       \r\n                          </Modal>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\nconst MyReplies=({title,replies,...props})=>{\r\n    const colorCode='#adff2f50';\r\n    const listItems = replies.map((reply) =>\r\n    <p key={reply.id} style={{textAlign:'left'}}>{reply.reply}</p>\r\n  );\r\n    return(\r\n        \r\n        <div style={{minWidth:'70%',width:'100%',margin:12,height:'auto',borderWidth:'2px',borderStyle:'solid',borderColor:'whitesmoke',borderRadius:5,padding:15}}>\r\n          \r\n            <h3 style={{textAlign:'left'}}>{title}</h3>\r\n            <div>{listItems}</div>\r\n          \r\n            \r\n            \r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\nexport {MyCard};\r\nexport {MyReplies};","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\form.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\header.js",["167"],"import React from \"react\";\r\nimport { Avatar} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css';\r\nimport {UserOutlined} from '@ant-design/icons';\r\n\r\nconst Headers=()=>{\r\n    return(\r\n        <div className=\"headerSection\">\r\n            \r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'start',margin:10}}>\r\n                    <Avatar size={90} icon={<UserOutlined/>}/>\r\n                    </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\nexport default Headers;","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\input.js",["168"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\mainHeader.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\miniheader.js",["169"],"import React from \"react\";\r\nimport {  Button, Popover ,Avatar} from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './components.css';\r\nimport {UserOutlined,ExportOutlined} from '@ant-design/icons';\r\n\r\n\r\nexport const MiniMiniHeader=(props)=>{\r\n  const content = (\r\n      <div style={{display:'flex',flexDirection:'column'}}>\r\n        <Button className='popoverButtons' type='link' size='large' onClick={()=>{\r\n          if(localStorage.getItem('current_user')){\r\n            window.location.href='/profile'\r\n          }else if(localStorage.getItem('currentUser')){\r\n            window.location.href='/other'\r\n          }else if(localStorage.getItem('org_admin')){\r\n            window.location.href='/orgadmin'\r\n          }\r\n          }}><UserOutlined/>Profile</Button>\r\n        <Button className='popoverButtons' type='link' size='large' danger \r\n        onClick={()=>{\r\n          localStorage.removeItem('current_user');\r\n          localStorage.removeItem('currentUser');\r\n          localStorage.removeItem('org_admin');\r\n          window.location.href='/';\r\n        }}><ExportOutlined/>Logout</Button>\r\n      </div>\r\n    );\r\n  return(\r\n      <div>\r\n          \r\n          <Popover style={{zIndex:100000000000000}} content={content} placement='bottomLeft'  trigger='hover'>\r\n                  <Avatar size={35} icon={<UserOutlined/>}/>\r\n        </Popover>\r\n              \r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nconst MiniHeader=()=>{\r\n    const content = (\r\n        <div style={{display:'flex',flexDirection:'column'}}>\r\n          <Button type='link' size='large' style={{color:'#6461ff'}} onClick={()=>{window.location.href='/profile'}}><UserOutlined/>Profile</Button>\r\n          <Button type='link' size='large' danger onClick={()=>{window.location.href='/'}}><ExportOutlined/>Logout</Button>\r\n        </div>\r\n      );\r\n    return(\r\n        <div className=\"miniHeaderSection\">\r\n            \r\n            <Popover content={content} trigger=\"click\">\r\n\r\n                    <Avatar size={70} icon={<UserOutlined/>}/>\r\n        </Popover>\r\n                \r\n        </div>\r\n    );\r\n}\r\nexport default MiniHeader;","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagBox.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\components\\tagSet.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Login\\login.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Map\\map.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\Profile\\profile.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\admin\\admin.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\entry\\entry.js",["170","171"],"import {message,Row, Col,Modal,Input, Button, Form ,List, Result,  Select} from \"antd\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {UserOutlined,ExportOutlined} from '@ant-design/icons';\r\nimport SurveyCard from \"../../components/surveyCard\";\r\nimport MainHeader from '../../components/mainHeader';\r\nimport axios from 'axios';\r\n\r\nconst {Option}=Select;\r\nconst MiniCard=(props)=>{\r\n\r\n    const [modalState,setModalState]=useState(false);\r\n    const [questions,setQuestions]=useState([])\r\n    \r\n        useEffect(() => {\r\n            axios.get('http://localhost:1337/questions')\r\n            .then(\r\n              res =>{\r\n                if(res.data){\r\n                  console.log(res.data)\r\n                  setQuestions(res.data)\r\n              }} )\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n        },[]);\r\n    \r\n    \r\n\r\n      let filtered=questions.filter(question=>question.disease?.name===props.text)\r\n      \r\n \r\n    return(\r\n      \r\n        <>\r\n        <Button className='diseaseButton' style={{height:50,margin:10,borderRadius:20,fontWeight:'500'}} onClick={() => setModalState(true)}>\r\n            {props.text}\r\n        </Button>\r\n        <Modal\r\n        title={props.text}\r\n        centered\r\n        style={{ top: '20%'}}\r\n        width={920}\r\n        visible={modalState}\r\n        onOk={() => setModalState(false)}\r\n        onCancel={() => setModalState(false)}\r\n      >\r\n        {\r\n            filtered?\r\n            <List\r\n            className='adminProfiles'\r\n                    size='medium'\r\n                    style={{height:'35vh',overflowY:'scroll'}}\r\n                    dataSource={filtered}\r\n                    renderItem={item => <List.Item>{item.question}</List.Item>}\r\n                />\r\n                :\r\n                <List/>\r\n\r\n        }\r\n       \r\n      </Modal>\r\n      </>\r\n    );\r\n}\r\nconst Entry=()=>{\r\n\r\n\r\n    const [surveyUID,setSurveyUID]=useState('')\r\n    const [selectedCommunity,setSelectedCommunity]=useState();\r\n    const [asDate,setAsDate]=useState('')\r\n\r\n    const [start,setStart]=useState(false)\r\n    const [step,setStep]=useState(false)\r\n    const [diseases,setDiseases]=useState([])\r\n    const [communities,setCommunities]=useState([])\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/diseases')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n              setDiseases(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:1337/communities')\r\n        .then(\r\n          res =>{\r\n            if(res.data){\r\n              console.log(res.data)\r\n              setCommunities(res.data)\r\n          }} )\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },[]);\r\n\r\n    \r\n\r\n      const [preview,setPreview]=useState(true);\r\n      const mee=localStorage.getItem('current_user')\r\n      let style=mee?{}:{minHeight:'100vh',height:'auto',width:'100%',display:'flex',backgroundColor:'#4e54c8', flexDirection:'column',alignItems:'center'}\r\n    return(\r\n        \r\n        <div style={style}>\r\n            <MainHeader/>\r\n            {\r\n                mee?\r\n                <>\r\n            <Row  sm={24} >\r\n           \r\n            <Row className='entryPoint'>\r\n                <Col md={start?0:4}  className='links' style={{backgroundColor:'#f5f5f580'}}>\r\n                {/* <Popover content={content} trigger=\"click\">\r\n                    <Avatar size={70} icon={<UserOutlined/>} style={{marginTop:30,marginBottom:20}}/>\r\n                </Popover> */}\r\n                    <Button block  size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(true)}}>Preview</Button>\r\n                    <Button  block size='large' style={{height:60,border:'none',borderBottom:'1px solid #f5f5f5',textAlign:'left',backgroundColor:'transparent',fontSize:17,color:'lightslategray'}} onClick={()=>{setPreview(false)}}>Take A Survey</Button>\r\n                </Col>\r\n                <Col md={start?24:20} className='entryContent'>\r\n                    {\r\n                        preview?\r\n                        <div style={{padding:35}}>\r\n                        <h1 style={{fontSize:40,color:'white',textAlign:'left',marginBottom:40}}>Click A Disease to Preview</h1>\r\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\r\n                        {\r\n                            diseases.map(\r\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\r\n                                \r\n                            )\r\n                        }\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    :\r\n                    <div className='selectDisease'>\r\n                        <Row style={{width:'100%',height:'100%'}}>\r\n                            \r\n                            \r\n                            <Col md={12} className='svgee' >\r\n\r\n\r\n                            </Col>\r\n                            <Col md={12} flex='auto' style={{backgroundColor:'#4e54c8'}}>\r\n                                {\r\n                                    !step?\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\r\n                                    <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\r\n                                    {\r\n                                        diseases.map(\r\n                                            (disease)=><Button onClick={()=>{\r\n                                                setStep(disease.questions.length>0?true:false)\r\n                                                if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\r\n                                            }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\r\n                                            \r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                    :\r\n                                    <>\r\n                                        {\r\n                                    start?\r\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\r\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \r\n                                    \r\n                                    <Row style={{width:'100%'}}>\r\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n                                        <SurveyCard surveyUID={surveyUID} asDate={asDate} community={selectedCommunity}/>\r\n                                        </Col>\r\n                                    </Row>          \r\n                                    \r\n                                </div> \r\n                                    :\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\r\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                                    <Form\r\n                                        layout='vertical'  \r\n                                        onFinish={()=>setStart(true)}\r\n                                        \r\n                                    >\r\n                                        \r\n                                        <Form.Item name=\"surveyUID\" label=\"SurveyUID\" rules={[{ required: true, message: 'Please input a surveyUID!' }]}>\r\n                                        <Input className='formInput' placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"ActualSurveyDate\" label=\"Actual Survey Date\" rules={[{ required: true, message: 'Please enter the actual survey date!' }]}>\r\n                                        <Input className='formInput' type='date' placeholder=\"Enter Actual Survey Date\" size='large' onChange={(e)=>setAsDate(e.target.value)} value={asDate} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"community\" label=\"Community\" rules={[{ required: true, message: 'Please select a community' }]}>\r\n                                        <Select className='formInput' value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\r\n                                            {\r\n                                                communities?\r\n                                                communities.map(\r\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                                \r\n                                            }\r\n                                        </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item >\r\n                                        <Button type=\"primary\" block size='large' htmlType='submit' >Next</Button>\r\n                                        </Form.Item> \r\n                                    </Form>\r\n                                    </div>\r\n                                    \r\n                                    </div>\r\n                                }\r\n                                    </>\r\n                                }\r\n                                \r\n                                \r\n                                \r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </div>\r\n                    }\r\n                    \r\n                </Col>\r\n            </Row>\r\n                 \r\n            </Row>\r\n            {//Code for mobile version\r\n            }\r\n            {/* <Row className=\"entryMobile\">\r\n                <div style={{height:'92vh',marginTop:'8vh',width:'100%'}}>\r\n                <Col style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',height:'10vh'}}  xs={24} md={0}>\r\n                    <h5 style={{width:'50%'}}>Survey And Preview</h5>\r\n                </Col>\r\n               \r\n               \r\n                <Tabs style={{width:'100%'}} centered defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Preview\" key=\"1\">\r\n                    <div className='adminProfiles' style={{padding:35,height:'80vh'}}>\r\n                        <h6 style={{fontSize:15,color:'gray',textAlign:'center',marginBottom:40}}>Click A Disease to Preview</h6>\r\n                        <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(150px,1fr))'}}>\r\n                        {\r\n                            diseases.map(\r\n                                (disease)=><MiniCard key={disease.id} text={disease.name}/>\r\n                                \r\n                            )\r\n                        }\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Take Survey\" key=\"2\">\r\n                    <div className='adminProfiles' style={{display:'flex',flexDirection:'column',alignItems:'center',height:'80vh'}}>\r\n                    {\r\n                                    !step?\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                    <h1 style={{color:'white',fontSize:'max(20px,2.5vw)'}}>Enter Survey Details</h1>\r\n                                    <div  style={{width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                                    <Form\r\n                                        layout='vertical'   \r\n                                    >\r\n                                        \r\n                                        <Form.Item label=\"SurveyUID\">\r\n                                        <Input placeholder=\"Enter Survey Identifier\" size='large' onChange={(e)=>setSurveyUID(e.target.value)} value={surveyUID} style={{width:300}}/>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Community\">\r\n                                        <Select value={selectedCommunity} onChange={(value)=>setSelectedCommunity(value)} style={{width:300}} size='large'>\r\n                                            {\r\n                                                communities?\r\n                                                communities.map(\r\n                                                    (community,index)=><Option key={index} value={community.id}>{community.Community}</Option>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                                \r\n                                            }\r\n                                        </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item >\r\n                                        <Button type=\"primary\" block size='large' \r\n                                        onClick={()=>{\r\n                                            setStep(true)\r\n                                        }} >Next</Button>\r\n                                        </Form.Item> \r\n                                    </Form>\r\n                                    </div>\r\n                                    \r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        {\r\n                                    start?\r\n                                    <div style={{alignItems: 'center',display:'flex',flexDirection:'column'}}>\r\n                                    <h1 style={{width:'100%',fontSize:'20px',textAlign:'left',padding:10, marginBottom:20,color:'lightgray'}}>Schistosomiasis</h1>    \r\n                                    \r\n                                    <Row style={{width:'100%'}}>\r\n                                        <Col style={{width:'100%',height:'60vh',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n                                        <SurveyCard surveyUID={surveyUID} community={selectedCommunity}/>\r\n                                        </Col>\r\n                                    </Row>          \r\n                                    \r\n                                </div> \r\n                                    :\r\n                                <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100%'}}>\r\n                                <h1 style={{color:'white',textTransform:'uppercase',fontSize:'max(20px,2.5vw)'}}>Select A Disease to Start</h1>\r\n                                <div style={{display:'flex',flexDirection:'row',justifyContent:'center',alignItems:'center',flexWrap:'wrap',}} >\r\n                                {\r\n                                    diseases.map(\r\n                                        (disease)=><Button onClick={()=>{\r\n                                            setStart(disease.questions.length>0?true:false)\r\n                                            if(!disease.questions.length>0)message.error('There is no survey under this disease yet')\r\n                                        }} className='diseaseButton' style={{height:'8vh',fontSize:18,width:'auto',fontWeight:'500',margin:6,borderRadius:20}}  key={disease.id} >{disease.name}</Button>\r\n                                        \r\n                                    )\r\n                                }\r\n                                </div>\r\n                                </div>\r\n                                }\r\n                                    </>\r\n                                }\r\n                                \r\n                    </div>\r\n                    </TabPane>\r\n                   \r\n                </Tabs>\r\n                </div>\r\n             \r\n            </Row> */}\r\n            </>\r\n                :\r\n                <>\r\n                <Result\r\n                    style={{marginTop:'8vh',color:'white'}}\r\n                    status=\"403\"\r\n                    \r\n                    title={<span style={{color:'white'}}>403</span>}\r\n                \r\n                    subTitle={<span style={{color:'white'}}>Sorry, you are not authorized to access this page.</span>}\r\n                    extra={<Button size='large' onClick={()=>window.location.href='/login'} type=\"primary\">Go to Login</Button>}\r\n                />\r\n                </>\r\n                \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Entry;\r\n\r\n","C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\forum\\otherForum.js",[],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\homePage\\home.js",["172","173"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\orgAccounts\\orgAccountss.js",["174","175","176"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\otherProfile\\otherProfile.js",["177","178","179","180"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\communityForm.js",["181","182","183"],"C:\\Users\\LINK\\Documents\\Github\\noguchi-system\\noguchi\\noguchi-web\\src\\pages\\survey\\diseaseForm.js",["184","185","186"],{"ruleId":"187","severity":1,"message":"188","line":3,"column":59,"nodeType":"189","messageId":"190","endLine":3,"endColumn":65},{"ruleId":"191","severity":2,"message":"192","line":154,"column":68,"nodeType":"193","endLine":154,"endColumn":83},{"ruleId":"194","severity":1,"message":"195","line":113,"column":3,"nodeType":"196","endLine":113,"endColumn":5,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":137,"column":3,"nodeType":"196","endLine":137,"endColumn":5,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"200","line":153,"column":10,"nodeType":"189","messageId":"190","endLine":153,"endColumn":16},{"ruleId":"187","severity":1,"message":"201","line":102,"column":8,"nodeType":"189","messageId":"190","endLine":102,"endColumn":15},{"ruleId":"187","severity":1,"message":"202","line":116,"column":8,"nodeType":"189","messageId":"190","endLine":116,"endColumn":21},{"ruleId":"187","severity":1,"message":"203","line":116,"column":22,"nodeType":"189","messageId":"190","endLine":116,"endColumn":38},{"ruleId":"187","severity":1,"message":"204","line":144,"column":11,"nodeType":"189","messageId":"190","endLine":144,"endColumn":17},{"ruleId":"187","severity":1,"message":"200","line":188,"column":11,"nodeType":"189","messageId":"190","endLine":188,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":324,"column":99,"nodeType":"207","messageId":"208","endLine":324,"endColumn":100},{"ruleId":"205","severity":1,"message":"206","line":324,"column":112,"nodeType":"207","messageId":"208","endLine":324,"endColumn":113},{"ruleId":"209","severity":1,"message":"210","line":49,"column":7,"nodeType":"211","messageId":"212","endLine":117,"endColumn":6},{"ruleId":"187","severity":1,"message":"213","line":2,"column":23,"nodeType":"189","messageId":"190","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"214","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":153,"column":97,"nodeType":"207","messageId":"217","endLine":153,"endColumn":99},{"ruleId":"187","severity":1,"message":"218","line":10,"column":17,"nodeType":"189","messageId":"190","endLine":10,"endColumn":25},{"ruleId":"187","severity":1,"message":"219","line":12,"column":11,"nodeType":"189","messageId":"190","endLine":12,"endColumn":25},{"ruleId":"187","severity":1,"message":"220","line":22,"column":13,"nodeType":"189","messageId":"190","endLine":22,"endColumn":39},{"ruleId":"221","severity":1,"message":"222","line":43,"column":35,"nodeType":"223","messageId":"224","endLine":43,"endColumn":37},{"ruleId":"194","severity":1,"message":"225","line":85,"column":11,"nodeType":"196","endLine":85,"endColumn":18,"suggestions":"226"},{"ruleId":"187","severity":1,"message":"227","line":4,"column":9,"nodeType":"189","messageId":"190","endLine":4,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":4,"column":39,"nodeType":"207","messageId":"208","endLine":4,"endColumn":40},{"ruleId":"205","severity":1,"message":"206","line":8,"column":56,"nodeType":"207","messageId":"208","endLine":8,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":26,"column":3,"nodeType":"230","messageId":"231","endLine":26,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":30,"column":56,"nodeType":"207","messageId":"208","endLine":30,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":48,"column":3,"nodeType":"230","messageId":"231","endLine":48,"endColumn":19},{"ruleId":"187","severity":1,"message":"227","line":61,"column":9,"nodeType":"189","messageId":"190","endLine":61,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":61,"column":39,"nodeType":"207","messageId":"208","endLine":61,"endColumn":40},{"ruleId":"205","severity":1,"message":"206","line":65,"column":56,"nodeType":"207","messageId":"208","endLine":65,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":82,"column":3,"nodeType":"230","messageId":"231","endLine":82,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":86,"column":56,"nodeType":"207","messageId":"208","endLine":86,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":104,"column":3,"nodeType":"230","messageId":"231","endLine":104,"endColumn":19},{"ruleId":"187","severity":1,"message":"232","line":100,"column":11,"nodeType":"189","messageId":"190","endLine":100,"endColumn":20},{"ruleId":"187","severity":1,"message":"233","line":5,"column":9,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":50,"column":5,"nodeType":"236","messageId":"217","endLine":50,"endColumn":9},{"ruleId":"187","severity":1,"message":"233","line":5,"column":9,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"237","line":3,"column":9,"nodeType":"189","messageId":"190","endLine":3,"endColumn":21},{"ruleId":"187","severity":1,"message":"238","line":3,"column":22,"nodeType":"189","messageId":"190","endLine":3,"endColumn":36},{"ruleId":"187","severity":1,"message":"239","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"201","line":99,"column":10,"nodeType":"189","messageId":"190","endLine":99,"endColumn":17},{"ruleId":"187","severity":1,"message":"240","line":2,"column":24,"nodeType":"189","messageId":"190","endLine":2,"endColumn":28},{"ruleId":"187","severity":1,"message":"241","line":8,"column":7,"nodeType":"189","messageId":"190","endLine":8,"endColumn":12},{"ruleId":"187","severity":1,"message":"200","line":100,"column":12,"nodeType":"189","messageId":"190","endLine":100,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":2,"column":48,"nodeType":"189","messageId":"190","endLine":2,"endColumn":54},{"ruleId":"242","severity":2,"message":"243","line":92,"column":80,"nodeType":"189","messageId":"244","endLine":92,"endColumn":90},{"ruleId":"242","severity":2,"message":"245","line":96,"column":99,"nodeType":"189","messageId":"244","endLine":96,"endColumn":113},{"ruleId":"242","severity":2,"message":"246","line":100,"column":119,"nodeType":"189","messageId":"244","endLine":100,"endColumn":133},{"ruleId":"187","severity":1,"message":"218","line":9,"column":17,"nodeType":"189","messageId":"190","endLine":9,"endColumn":25},{"ruleId":"187","severity":1,"message":"247","line":14,"column":16,"nodeType":"189","messageId":"190","endLine":14,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":21,"column":37,"nodeType":"223","messageId":"224","endLine":21,"endColumn":39},{"ruleId":"187","severity":1,"message":"248","line":2,"column":35,"nodeType":"189","messageId":"190","endLine":2,"endColumn":41},{"ruleId":"187","severity":1,"message":"247","line":9,"column":16,"nodeType":"189","messageId":"190","endLine":9,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":17,"column":34,"nodeType":"223","messageId":"224","endLine":17,"endColumn":36},"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'UserAddOutlined' is not defined.","JSXIdentifier","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.","ArrayExpression",["249"],"React Hook useEffect has a missing dependency: 'expandSurvey'. Either include it or remove the dependency array.",["250"],"'Header' is assigned a value but never used.","'regions' is assigned a value but never used.","'surveyAnswers' is assigned a value but never used.","'setSurveyAnswers' is assigned a value but never used.","'Search' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","'surveys' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'setCount' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getDiseases'. Either include it or remove the dependency array.",["251"],"'link' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'colorCode' is assigned a value but never used.","'EditFilled' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","'UserOutlined' is defined but never used.","'ExportOutlined' is defined but never used.","'Mappings' is defined but never used.","'Tabs' is defined but never used.","'style' is assigned a value but never used.","no-undef","'setOrgname' is not defined.","undef","'setOrgUsername' is not defined.","'setOrgPassword' is not defined.","'data' is assigned a value but never used.","'Select' is defined but never used.",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [questions]",{"range":"258","text":"259"},"Update the dependencies array to be: [expandSurvey]",{"range":"260","text":"261"},"Update the dependencies array to be: [count, getDiseases]",{"range":"262","text":"263"},[2227,2229],"[questions]",[2787,2789],"[expandSurvey]",[1872,1879],"[count, getDiseases]"]